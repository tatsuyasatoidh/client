<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CertificateManager</name>
    </assembly>
    <members>
        <member name="T:Amazon.CertificateManager.AmazonCertificateManagerConfig">
            <summary>
            Configuration for accessing Amazon CertificateManager service
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.AmazonCertificateManagerConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.AmazonCertificateManagerConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.AmazonCertificateManagerConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.AmazonCertificateManagerException">
            <summary>
             Common exception for the CertificateManager service.
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCertificateManagerException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCertificateManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCertificateManagerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCertificateManagerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCertificateManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonCertificateManagerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.CertificateStatus">
            <summary>
            Constants used for properties of type CertificateStatus.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.EXPIRED">
            <summary>
            Constant EXPIRED for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.FAILED">
            <summary>
            Constant FAILED for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.INACTIVE">
            <summary>
            Constant INACTIVE for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.ISSUED">
            <summary>
            Constant ISSUED for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.PENDING_VALIDATION">
            <summary>
            Constant PENDING_VALIDATION for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.REVOKED">
            <summary>
            Constant REVOKED for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.VALIDATION_TIMED_OUT">
            <summary>
            Constant VALIDATION_TIMED_OUT for CertificateStatus
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateStatus.op_Implicit(System.String)~Amazon.CertificateManager.CertificateStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.CertificateType">
            <summary>
            Constants used for properties of type CertificateType.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateType.AMAZON_ISSUED">
            <summary>
            Constant AMAZON_ISSUED for CertificateType
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateType.IMPORTED">
            <summary>
            Constant IMPORTED for CertificateType
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateType.op_Implicit(System.String)~Amazon.CertificateManager.CertificateType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.DomainStatus">
            <summary>
            Constants used for properties of type DomainStatus.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.DomainStatus.FAILED">
            <summary>
            Constant FAILED for DomainStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.DomainStatus.PENDING_VALIDATION">
            <summary>
            Constant PENDING_VALIDATION for DomainStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.DomainStatus.SUCCESS">
            <summary>
            Constant SUCCESS for DomainStatus
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.DomainStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.DomainStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.DomainStatus.op_Implicit(System.String)~Amazon.CertificateManager.DomainStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.FailureReason">
            <summary>
            Constants used for properties of type FailureReason.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.ADDITIONAL_VERIFICATION_REQUIRED">
            <summary>
            Constant ADDITIONAL_VERIFICATION_REQUIRED for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.DOMAIN_NOT_ALLOWED">
            <summary>
            Constant DOMAIN_NOT_ALLOWED for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.INVALID_PUBLIC_DOMAIN">
            <summary>
            Constant INVALID_PUBLIC_DOMAIN for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.NO_AVAILABLE_CONTACTS">
            <summary>
            Constant NO_AVAILABLE_CONTACTS for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.OTHER">
            <summary>
            Constant OTHER for FailureReason
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.FailureReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.FailureReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.FailureReason.op_Implicit(System.String)~Amazon.CertificateManager.FailureReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.KeyAlgorithm">
            <summary>
            Constants used for properties of type KeyAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyAlgorithm.EC_prime256v1">
            <summary>
            Constant EC_prime256v1 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyAlgorithm.RSA_1024">
            <summary>
            Constant RSA_1024 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyAlgorithm.RSA_2048">
            <summary>
            Constant RSA_2048 for KeyAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.KeyAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.KeyAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.KeyAlgorithm.op_Implicit(System.String)~Amazon.CertificateManager.KeyAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.RenewalStatus">
            <summary>
            Constants used for properties of type RenewalStatus.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RenewalStatus.FAILED">
            <summary>
            Constant FAILED for RenewalStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RenewalStatus.PENDING_AUTO_RENEWAL">
            <summary>
            Constant PENDING_AUTO_RENEWAL for RenewalStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RenewalStatus.PENDING_VALIDATION">
            <summary>
            Constant PENDING_VALIDATION for RenewalStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RenewalStatus.SUCCESS">
            <summary>
            Constant SUCCESS for RenewalStatus
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RenewalStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RenewalStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.RenewalStatus.op_Implicit(System.String)~Amazon.CertificateManager.RenewalStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.RevocationReason">
            <summary>
            Constants used for properties of type RevocationReason.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.A_A_COMPROMISE">
            <summary>
            Constant A_A_COMPROMISE for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.AFFILIATION_CHANGED">
            <summary>
            Constant AFFILIATION_CHANGED for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.CA_COMPROMISE">
            <summary>
            Constant CA_COMPROMISE for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.CERTIFICATE_HOLD">
            <summary>
            Constant CERTIFICATE_HOLD for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.CESSATION_OF_OPERATION">
            <summary>
            Constant CESSATION_OF_OPERATION for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.KEY_COMPROMISE">
            <summary>
            Constant KEY_COMPROMISE for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.PRIVILEGE_WITHDRAWN">
            <summary>
            Constant PRIVILEGE_WITHDRAWN for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.REMOVE_FROM_CRL">
            <summary>
            Constant REMOVE_FROM_CRL for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.SUPERCEDED">
            <summary>
            Constant SUPERCEDED for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.UNSPECIFIED">
            <summary>
            Constant UNSPECIFIED for RevocationReason
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RevocationReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RevocationReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.RevocationReason.op_Implicit(System.String)~Amazon.CertificateManager.RevocationReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.AddTagsToCertificateRequest">
            <summary>
            Container for the parameters to the AddTagsToCertificate operation.
            Adds one or more tags to an ACM Certificate. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a <code>key</code> and an optional
            <code>value</code>. You specify the certificate on input by its Amazon Resource Name
            (ARN). You specify the tag by using a key-value pair.
            
             
            <para>
            You can apply a tag to just one certificate if you want to identify a specific characteristic
            of that certificate, or you can apply the same tag to multiple certificates if you
            want to filter for a common relationship among those certificates. Similarly, you
            can apply the same tag to multiple resources if you want to specify a relationship
            among those resources. For example, you can add the same tag to an ACM Certificate
            and an Elastic Load Balancing load balancer to indicate that they are both used by
            the same website. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging
            ACM Certificates</a>.
            </para>
             
            <para>
            To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view
            all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.AddTagsToCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the ACM Certificate to which the tag is to be applied.
            This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.AddTagsToCertificateRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pair that defines the tag. The tag value is optional.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.AddTagsToCertificateResponse">
            <summary>
            This is the response object from the AddTagsToCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.CertificateDetail">
            <summary>
            Contains metadata about an ACM certificate. This structure is returned in the response
            to a <a>DescribeCertificate</a> request.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The Amazon Resource Name (ARN) of the certificate. For more information about ARNs,
            see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time at which the certificate was requested. This value exists only when the certificate
            type is <code>AMAZON_ISSUED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
            The fully qualified domain name for the certificate, such as www.example.com or example.com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.DomainValidationOptions">
            <summary>
            Gets and sets the property DomainValidationOptions. 
            <para>
            Contains information about the initial validation of each domain name that occurs
            as a result of the <a>RequestCertificate</a> request. This field exists only when
            the certificate type is <code>AMAZON_ISSUED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            The reason the certificate request failed. This value exists only when the certificate
            status is <code>FAILED</code>. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed">Certificate
            Request Failed</a> in the <i>AWS Certificate Manager User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.ImportedAt">
            <summary>
            Gets and sets the property ImportedAt. 
            <para>
            The date and time at which the certificate was imported. This value exists only when
            the certificate type is <code>IMPORTED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.InUseBy">
            <summary>
            Gets and sets the property InUseBy. 
            <para>
            A list of ARNs for the AWS resources that are using the certificate. A certificate
            can be used by multiple AWS resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.IssuedAt">
            <summary>
            Gets and sets the property IssuedAt. 
            <para>
            The time at which the certificate was issued. This value exists only when the certificate
            type is <code>AMAZON_ISSUED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Issuer">
            <summary>
            Gets and sets the property Issuer. 
            <para>
            The name of the certificate authority that issued and signed the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.KeyAlgorithm">
            <summary>
            Gets and sets the property KeyAlgorithm. 
            <para>
            The algorithm that was used to generate the key pair (the public and private key).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.NotAfter">
            <summary>
            Gets and sets the property NotAfter. 
            <para>
            The time after which the certificate is not valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.NotBefore">
            <summary>
            Gets and sets the property NotBefore. 
            <para>
            The time before which the certificate is not valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.RenewalSummary">
            <summary>
            Gets and sets the property RenewalSummary. 
            <para>
            Contains information about the status of ACM's <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for the certificate. This field exists only when the certificate type
            is <code>AMAZON_ISSUED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.RevocationReason">
            <summary>
            Gets and sets the property RevocationReason. 
            <para>
            The reason the certificate was revoked. This value exists only when the certificate
            status is <code>REVOKED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.RevokedAt">
            <summary>
            Gets and sets the property RevokedAt. 
            <para>
            The time at which the certificate was revoked. This value exists only when the certificate
            status is <code>REVOKED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Serial">
            <summary>
            Gets and sets the property Serial. 
            <para>
            The serial number of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.SignatureAlgorithm">
            <summary>
            Gets and sets the property SignatureAlgorithm. 
            <para>
            The algorithm that was used to sign the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Subject">
            <summary>
            Gets and sets the property Subject. 
            <para>
            The name of the entity that is associated with the public key contained in the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.SubjectAlternativeNames">
            <summary>
            Gets and sets the property SubjectAlternativeNames. 
            <para>
            One or more domain names (subject alternative names) included in the certificate.
            This list contains the domain names that are bound to the public key that is contained
            in the certificate. The subject alternative names include the canonical domain name
            (CN) of the certificate and additional domain names that can be used to connect to
            the website.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The source of the certificate. For certificates provided by ACM, this value is <code>AMAZON_ISSUED</code>.
            For certificates that you imported with <a>ImportCertificate</a>, this value is <code>IMPORTED</code>.
            ACM does not provide <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for imported certificates. For more information about the differences
            between certificates that you import and those that ACM provides, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>AWS Certificate Manager User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.CertificateSummary">
            <summary>
            This structure is returned in the response object of <a>ListCertificates</a> action.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateSummary.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            Amazon Resource Name (ARN) of the certificate. This is of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateSummary.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
            Fully qualified domain name (FQDN), such as www.example.com or example.com, for the
            certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DeleteCertificateRequest">
            <summary>
            Container for the parameters to the DeleteCertificate operation.
            Deletes an ACM Certificate and its associated private key. If this action succeeds,
            the certificate no longer appears in the list of ACM Certificates that can be displayed
            by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a>
            action. The certificate will not be available for use by other AWS services.
            
             <note> 
            <para>
            You cannot delete an ACM Certificate that is being used by another AWS service. To
            delete a certificate that is in use, the certificate association must first be removed.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.DeleteCertificateRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.DeleteCertificateRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteCertificateRequest with the parameterized properties
            </summary>
            <param name="certificateArn">String that contains the ARN of the ACM Certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DeleteCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the ACM Certificate to be deleted. This must be of
            the form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DeleteCertificateResponse">
            <summary>
            This is the response object from the DeleteCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DescribeCertificateRequest">
            <summary>
            Container for the parameters to the DescribeCertificate operation.
            Returns detailed metadata about the specified ACM Certificate.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.DescribeCertificateRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.DescribeCertificateRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeCertificateRequest with the parameterized properties
            </summary>
            <param name="certificateArn">The Amazon Resource Name (ARN) of the ACM Certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DescribeCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The Amazon Resource Name (ARN) of the ACM Certificate. The ARN must have the following
            form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DescribeCertificateResponse">
            <summary>
            This is the response object from the DescribeCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DescribeCertificateResponse.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            Metadata about an ACM certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DomainValidation">
            <summary>
            Contains information about the validation of each domain name in the certificate.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidation.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
            A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code>
            or <code>example.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidation.ValidationDomain">
            <summary>
            Gets and sets the property ValidationDomain. 
            <para>
            The domain name that ACM used to send domain validation emails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidation.ValidationEmails">
            <summary>
            Gets and sets the property ValidationEmails. 
            <para>
            A list of email addresses that ACM used to send domain validation emails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidation.ValidationStatus">
            <summary>
            Gets and sets the property ValidationStatus. 
            <para>
            The validation status of the domain name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DomainValidationOption">
            <summary>
            Contains information about the domain names that you want ACM to use to send you emails
            to validate your ownership of the domain.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidationOption.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
            A fully qualified domain name (FQDN) in the certificate request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidationOption.ValidationDomain">
            <summary>
            Gets and sets the property ValidationDomain. 
            <para>
            The domain name that you want ACM to use to send you validation emails. This domain
            name is the suffix of the email addresses that you want ACM to use. This must be the
            same as the <code>DomainName</code> value or a superdomain of the <code>DomainName</code>
            value. For example, if you request a certificate for <code>testing.example.com</code>,
            you can specify <code>example.com</code> for this value. In that case, ACM sends domain
            validation emails to the following five addresses:
            </para>
             <ul> <li> 
            <para>
            admin@example.com
            </para>
             </li> <li> 
            <para>
            administrator@example.com
            </para>
             </li> <li> 
            <para>
            hostmaster@example.com
            </para>
             </li> <li> 
            <para>
            postmaster@example.com
            </para>
             </li> <li> 
            <para>
            webmaster@example.com
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.GetCertificateRequest">
            <summary>
            Container for the parameters to the GetCertificate operation.
            Retrieves an ACM Certificate and certificate chain for the certificate specified by
            an ARN. The chain is an ordered list of certificates that contains the root certificate,
            intermediate certificates of subordinate CAs, and the ACM Certificate. The certificate
            and certificate chain are base64 encoded. If you want to decode the certificate chain
            to see the individual certificate fields, you can use OpenSSL.
            
             <note> 
            <para>
            Currently, ACM Certificates can be used only with Elastic Load Balancing and Amazon
            CloudFront.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.GetCertificateRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.GetCertificateRequest.#ctor(System.String)">
            <summary>
            Instantiates GetCertificateRequest with the parameterized properties
            </summary>
            <param name="certificateArn">String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
        </member>
        <member name="P:Amazon.CertificateManager.Model.GetCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains a certificate ARN in the following format:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.GetCertificateResponse">
            <summary>
            This is the response object from the GetCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.GetCertificateResponse.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            String that contains the ACM Certificate represented by the ARN specified at input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.GetCertificateResponse.CertificateChain">
            <summary>
            Gets and sets the property CertificateChain. 
            <para>
            The certificate chain that contains the root certificate issued by the certificate
            authority (CA).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ImportCertificateRequest">
            <summary>
            Container for the parameters to the ImportCertificate operation.
            Imports an SSL/TLS certificate into AWS Certificate Manager (ACM) to use with <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">ACM's
            integrated AWS services</a>.
            
             <note> 
            <para>
            ACM does not provide <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for certificates that you import.
            </para>
             </note> 
            <para>
            For more information about importing certificates into ACM, including the differences
            between certificates that you import and those that ACM provides, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>AWS Certificate Manager User Guide</i>.
            </para>
             
            <para>
            To import a certificate, you must provide the certificate and the matching private
            key. When the certificate is not self-signed, you must also provide a certificate
            chain. You can omit the certificate chain when importing a self-signed certificate.
            </para>
             
            <para>
            The certificate, private key, and certificate chain must be PEM-encoded. For more
            information about converting these items to PEM format, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html#import-certificate-troubleshooting">Importing
            Certificates Troubleshooting</a> in the <i>AWS Certificate Manager User Guide</i>.
            </para>
             
            <para>
            To import a new certificate, omit the <code>CertificateArn</code> field. Include this
            field only when you want to replace a previously imported certificate.
            </para>
             
            <para>
            This operation returns the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateRequest.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The certificate to import. It must meet the following requirements:
            </para>
             <ul> <li> 
            <para>
            Must be PEM-encoded.
            </para>
             </li> <li> 
            <para>
            Must contain a 1024-bit or 2048-bit RSA public key.
            </para>
             </li> <li> 
            <para>
            Must be valid at the time of import. You cannot import a certificate before its validity
            period begins (the certificate's <code>NotBefore</code> date) or after it expires
            (the certificate's <code>NotAfter</code> date).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of an imported certificate to replace. To import a new certificate,
            omit this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateRequest.CertificateChain">
            <summary>
            Gets and sets the property CertificateChain. 
            <para>
            The certificate chain. It must be PEM-encoded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateRequest.PrivateKey">
            <summary>
            Gets and sets the property PrivateKey. 
            <para>
            The private key that matches the public key in the certificate. It must meet the following
            requirements:
            </para>
             <ul> <li> 
            <para>
            Must be PEM-encoded.
            </para>
             </li> <li> 
            <para>
            Must be unencrypted. You cannot import a private key that is protected by a password
            or passphrase.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ImportCertificateResponse">
            <summary>
            This is the response object from the ImportCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateResponse.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.InvalidArnException">
            <summary>
             CertificateManager exception
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArnException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidArnException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            <summary>
             CertificateManager exception
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDomainValidationOptionsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDomainValidationOptionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDomainValidationOptionsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDomainValidationOptionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDomainValidationOptionsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDomainValidationOptionsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.InvalidStateException">
            <summary>
             CertificateManager exception
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.InvalidTagException">
            <summary>
             CertificateManager exception
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidTagException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidTagException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.LimitExceededException">
            <summary>
             CertificateManager exception
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ListCertificatesRequest">
            <summary>
            Container for the parameters to the ListCertificates operation.
            Retrieves a list of ACM Certificates and the domain name for each. You can optionally
            filter the list to return only the certificates that match the specified status.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesRequest.CertificateStatuses">
            <summary>
            Gets and sets the property CertificateStatuses. 
            <para>
            The status or statuses on which to filter the list of ACM Certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesRequest.MaxItems">
            <summary>
            Gets and sets the property MaxItems. 
            <para>
            Use this parameter when paginating results to specify the maximum number of items
            to return in the response. If additional items exist beyond the number you specify,
            the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code>
            value in a subsequent request to retrieve additional items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Use this parameter only when paginating results and only in a subsequent request after
            you receive a response with truncated results. Set it to the value of <code>NextToken</code>
            from the response you just received.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ListCertificatesResponse">
            <summary>
            This is the response object from the ListCertificates operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesResponse.CertificateSummaryList">
            <summary>
            Gets and sets the property CertificateSummaryList. 
            <para>
            A list of ACM Certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When the list is truncated, this value is present and contains the value to use for
            the <code>NextToken</code> parameter in a subsequent pagination request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ListTagsForCertificateRequest">
            <summary>
            Container for the parameters to the ListTagsForCertificate operation.
            Lists the tags that have been applied to the ACM Certificate. Use the certificate's
            Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM Certificate,
            use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListTagsForCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the ACM Certificate for which you want to list the
            tags. This has the following form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ListTagsForCertificateResponse">
            <summary>
            This is the response object from the ListTagsForCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListTagsForCertificateResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pairs that define the applied tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest">
            <summary>
            Container for the parameters to the RemoveTagsFromCertificate operation.
            Remove one or more tags from an ACM Certificate. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this function, the
            tag will be removed regardless of value. If you specify a value, the tag is removed
            only if it is associated with the specified value.
            
             
            <para>
            To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view
            all of the tags that have been applied to a specific ACM Certificate, use the <a>ListTagsForCertificate</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the ACM Certificate with one or more tags that you
            want to remove. This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pair that defines the tag to remove.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RemoveTagsFromCertificateResponse">
            <summary>
            This is the response object from the RemoveTagsFromCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RenewalSummary">
            <summary>
            Contains information about the status of ACM's <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for the certificate. This structure exists only when the certificate type
            is <code>AMAZON_ISSUED</code>.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RenewalSummary.DomainValidationOptions">
            <summary>
            Gets and sets the property DomainValidationOptions. 
            <para>
            Contains information about the validation of each domain name in the certificate,
            as it pertains to ACM's <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a>. This is different from the initial validation that occurs as a result
            of the <a>RequestCertificate</a> request. This field exists only when the certificate
            type is <code>AMAZON_ISSUED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RenewalSummary.RenewalStatus">
            <summary>
            Gets and sets the property RenewalStatus. 
            <para>
            The status of ACM's <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> of the certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RequestCertificateRequest">
            <summary>
            Container for the parameters to the RequestCertificate operation.
            Requests an ACM Certificate for use with other AWS services. To request an ACM Certificate,
            you must specify the fully qualified domain name (FQDN) for your site. You can also
            specify additional FQDNs if users can reach your site by using other names. For each
            domain name you specify, email is sent to the domain owner to request approval to
            issue the certificate. After receiving approval from the domain owner, the ACM Certificate
            is issued. For more information, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS
            Certificate Manager User Guide</a>.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
            Fully qualified domain name (FQDN), such as www.example.com, of the site that you
            want to secure with an ACM Certificate. Use an asterisk (*) to create a wildcard certificate
            that protects several sites in the same domain. For example, *.example.com protects
            www.example.com, site.example.com, and images.example.com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.DomainValidationOptions">
            <summary>
            Gets and sets the property DomainValidationOptions. 
            <para>
            The domain name that you want ACM to use to send you emails to validate your ownership
            of the domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.IdempotencyToken">
            <summary>
            Gets and sets the property IdempotencyToken. 
            <para>
            Customer chosen string that can be used to distinguish between calls to <code>RequestCertificate</code>.
            Idempotency tokens time out after one hour. Therefore, if you call <code>RequestCertificate</code>
            multiple times with the same idempotency token within one hour, ACM recognizes that
            you are requesting only one certificate and will issue only one. If you change the
            idempotency token for each call, ACM recognizes that you are requesting multiple certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.SubjectAlternativeNames">
            <summary>
            Gets and sets the property SubjectAlternativeNames. 
            <para>
            Additional FQDNs to be included in the Subject Alternative Name extension of the ACM
            Certificate. For example, add the name www.example.net to a certificate for which
            the <code>DomainName</code> field is www.example.com if users can reach your site
            by using either name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RequestCertificateResponse">
            <summary>
            This is the response object from the RequestCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateResponse.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the issued certificate. This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RequestInProgressException">
            <summary>
             CertificateManager exception
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new RequestInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RequestInProgressException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ResendValidationEmailRequest">
            <summary>
            Container for the parameters to the ResendValidationEmail operation.
            Resends the email that requests domain ownership validation. The domain owner or an
            authorized representative must approve the ACM Certificate before it can be issued.
            The certificate can be approved by clicking a link in the mail to navigate to the
            Amazon certificate approval website and then clicking <b>I Approve</b>. However, the
            validation email can be blocked by spam filters. Therefore, if you do not receive
            the original mail, you can request that the mail be resent within 72 hours of requesting
            the ACM Certificate. If more than 72 hours have elapsed since your original request
            or since your last attempt to resend validation mail, you must request a new certificate.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ResendValidationEmailRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the requested certificate. The certificate ARN is
            generated and returned by the <a>RequestCertificate</a> action as soon as the request
            is made. By default, using this parameter causes email to be sent to all top-level
            domains you specified in the certificate request.
            </para>
             
            <para>
            The ARN must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ResendValidationEmailRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The fully qualified domain name (FQDN) of the certificate that needs to be validated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ResendValidationEmailRequest.ValidationDomain">
            <summary>
            Gets and sets the property ValidationDomain. 
            <para>
            The base validation domain that will act as the suffix of the email addresses that
            are used to send the emails. This must be the same as the <code>Domain</code> value
            or a superdomain of the <code>Domain</code> value. For example, if you requested a
            certificate for <code>site.subdomain.example.com</code> and specify a <b>ValidationDomain</b>
            of <code>subdomain.example.com</code>, ACM sends email to the domain registrant, technical
            contact, and administrative contact in WHOIS and the following five addresses:
            </para>
             <ul> <li> 
            <para>
            admin@subdomain.example.com
            </para>
             </li> <li> 
            <para>
            administrator@subdomain.example.com
            </para>
             </li> <li> 
            <para>
            hostmaster@subdomain.example.com
            </para>
             </li> <li> 
            <para>
            postmaster@subdomain.example.com
            </para>
             </li> <li> 
            <para>
            webmaster@subdomain.example.com
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ResendValidationEmailResponse">
            <summary>
            This is the response object from the ResendValidationEmail operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ResourceInUseException">
            <summary>
             CertificateManager exception
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            <summary>
             CertificateManager exception
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Tag">
            <summary>
            A key-value pair that identifies or specifies metadata about an ACM resource.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key of the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.TooManyTagsException">
            <summary>
             CertificateManager exception
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyTagsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TooManyTagsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateRequestMarshaller">
            <summary>
            AddTagsToCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.AddTagsToCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddTagsToCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateDetailUnmarshaller">
            <summary>
            Response Unmarshaller for CertificateDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#CertificateDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for CertificateSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#CertificateSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller">
            <summary>
            DeleteCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.DeleteCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller">
            <summary>
            DescribeCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.DescribeCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationOptionMarshaller">
            <summary>
            DomainValidationOption Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationOptionMarshaller.Marshall(Amazon.CertificateManager.Model.DomainValidationOption,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationOptionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationUnmarshaller">
            <summary>
            Response Unmarshaller for DomainValidation Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#DomainValidation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller">
            <summary>
            GetCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.GetCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller">
            <summary>
            ImportCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.ImportCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller">
            <summary>
            ListCertificates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller.Marshall(Amazon.CertificateManager.Model.ListCertificatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListCertificates operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateRequestMarshaller">
            <summary>
            ListTagsForCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.ListTagsForCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateRequestMarshaller">
            <summary>
            RemoveTagsFromCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTagsFromCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewalSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for RenewalSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewalSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#RenewalSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewalSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewalSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateRequestMarshaller">
            <summary>
            RequestCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.RequestCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RequestCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailRequestMarshaller">
            <summary>
            ResendValidationEmail Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailRequestMarshaller.Marshall(Amazon.CertificateManager.Model.ResendValidationEmailRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResendValidationEmail operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.CertificateManager.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.AmazonCertificateManagerRequest">
            <summary>
            Base class for CertificateManager operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.AmazonCertificateManagerClient">
             <summary>
             Implementation for accessing CertificateManager
            
             AWS Certificate Manager 
             <para>
             Welcome to the AWS Certificate Manager (ACM) API documentation.
             </para>
              
             <para>
             You can use ACM to manage SSL/TLS certificates for your AWS-based websites and applications.
             For general information about using ACM, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">
             <i>AWS Certificate Manager User Guide</i> </a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor">
             <summary>
             Constructs AmazonCertificateManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonCertificateManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(Amazon.CertificateManager.AmazonCertificateManagerConfig)">
             <summary>
             Constructs AmazonCertificateManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCertificateManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CertificateManager.AmazonCertificateManagerConfig)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Credentials and an
            AmazonCertificateManagerClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCertificateManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String,Amazon.CertificateManager.AmazonCertificateManagerConfig)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCertificateManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCertificateManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String,System.String,Amazon.CertificateManager.AmazonCertificateManagerConfig)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCertificateManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCertificateManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.AddTagsToCertificate(Amazon.CertificateManager.Model.AddTagsToCertificateRequest)">
            <summary>
            Adds one or more tags to an ACM Certificate. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a <code>key</code> and an optional
            <code>value</code>. You specify the certificate on input by its Amazon Resource Name
            (ARN). You specify the tag by using a key-value pair.
            
             
            <para>
            You can apply a tag to just one certificate if you want to identify a specific characteristic
            of that certificate, or you can apply the same tag to multiple certificates if you
            want to filter for a common relationship among those certificates. Similarly, you
            can apply the same tag to multiple resources if you want to specify a relationship
            among those resources. For example, you can add the same tag to an ACM Certificate
            and an Elastic Load Balancing load balancer to indicate that they are both used by
            the same website. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging
            ACM Certificates</a>.
            </para>
             
            <para>
            To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view
            all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToCertificate service method.</param>
            
            <returns>The response from the AddTagsToCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/AddTagsToCertificate">REST API Reference for AddTagsToCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.AddTagsToCertificateAsync(Amazon.CertificateManager.Model.AddTagsToCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddTagsToCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddTagsToCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/AddTagsToCertificate">REST API Reference for AddTagsToCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DeleteCertificate(System.String)">
            <summary>
            Deletes an ACM Certificate and its associated private key. If this action succeeds,
            the certificate no longer appears in the list of ACM Certificates that can be displayed
            by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a>
            action. The certificate will not be available for use by other AWS services.
            
             <note> 
            <para>
            You cannot delete an ACM Certificate that is being used by another AWS service. To
            delete a certificate that is in use, the certificate association must first be removed.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains the ARN of the ACM Certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another AWS service in the caller's account. Remove the
            association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DeleteCertificate(Amazon.CertificateManager.Model.DeleteCertificateRequest)">
            <summary>
            Deletes an ACM Certificate and its associated private key. If this action succeeds,
            the certificate no longer appears in the list of ACM Certificates that can be displayed
            by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a>
            action. The certificate will not be available for use by other AWS services.
            
             <note> 
            <para>
            You cannot delete an ACM Certificate that is being used by another AWS service. To
            delete a certificate that is in use, the certificate association must first be removed.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate service method.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another AWS service in the caller's account. Remove the
            association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DeleteCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an ACM Certificate and its associated private key. If this action succeeds,
            the certificate no longer appears in the list of ACM Certificates that can be displayed
            by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a>
            action. The certificate will not be available for use by other AWS services.
            
             <note> 
            <para>
            You cannot delete an ACM Certificate that is being used by another AWS service. To
            delete a certificate that is in use, the certificate association must first be removed.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains the ARN of the ACM Certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another AWS service in the caller's account. Remove the
            association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DeleteCertificateAsync(Amazon.CertificateManager.Model.DeleteCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DescribeCertificate(System.String)">
            <summary>
            Returns detailed metadata about the specified ACM Certificate.
            </summary>
            <param name="certificateArn">The Amazon Resource Name (ARN) of the ACM Certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DescribeCertificate(Amazon.CertificateManager.Model.DescribeCertificateRequest)">
            <summary>
            Returns detailed metadata about the specified ACM Certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate service method.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DescribeCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns detailed metadata about the specified ACM Certificate.
            </summary>
            <param name="certificateArn">The Amazon Resource Name (ARN) of the ACM Certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DescribeCertificateAsync(Amazon.CertificateManager.Model.DescribeCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.GetCertificate(System.String)">
            <summary>
            Retrieves an ACM Certificate and certificate chain for the certificate specified by
            an ARN. The chain is an ordered list of certificates that contains the root certificate,
            intermediate certificates of subordinate CAs, and the ACM Certificate. The certificate
            and certificate chain are base64 encoded. If you want to decode the certificate chain
            to see the individual certificate fields, you can use OpenSSL.
            
             <note> 
            <para>
            Currently, ACM Certificates can be used only with Elastic Load Balancing and Amazon
            CloudFront.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.GetCertificate(Amazon.CertificateManager.Model.GetCertificateRequest)">
            <summary>
            Retrieves an ACM Certificate and certificate chain for the certificate specified by
            an ARN. The chain is an ordered list of certificates that contains the root certificate,
            intermediate certificates of subordinate CAs, and the ACM Certificate. The certificate
            and certificate chain are base64 encoded. If you want to decode the certificate chain
            to see the individual certificate fields, you can use OpenSSL.
            
             <note> 
            <para>
            Currently, ACM Certificates can be used only with Elastic Load Balancing and Amazon
            CloudFront.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificate service method.</param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.GetCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an ACM Certificate and certificate chain for the certificate specified by
            an ARN. The chain is an ordered list of certificates that contains the root certificate,
            intermediate certificates of subordinate CAs, and the ACM Certificate. The certificate
            and certificate chain are base64 encoded. If you want to decode the certificate chain
            to see the individual certificate fields, you can use OpenSSL.
            
             <note> 
            <para>
            Currently, ACM Certificates can be used only with Elastic Load Balancing and Amazon
            CloudFront.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.GetCertificateAsync(Amazon.CertificateManager.Model.GetCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ImportCertificate(Amazon.CertificateManager.Model.ImportCertificateRequest)">
            <summary>
            Imports an SSL/TLS certificate into AWS Certificate Manager (ACM) to use with <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">ACM's
            integrated AWS services</a>.
            
             <note> 
            <para>
            ACM does not provide <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for certificates that you import.
            </para>
             </note> 
            <para>
            For more information about importing certificates into ACM, including the differences
            between certificates that you import and those that ACM provides, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>AWS Certificate Manager User Guide</i>.
            </para>
             
            <para>
            To import a certificate, you must provide the certificate and the matching private
            key. When the certificate is not self-signed, you must also provide a certificate
            chain. You can omit the certificate chain when importing a self-signed certificate.
            </para>
             
            <para>
            The certificate, private key, and certificate chain must be PEM-encoded. For more
            information about converting these items to PEM format, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html#import-certificate-troubleshooting">Importing
            Certificates Troubleshooting</a> in the <i>AWS Certificate Manager User Guide</i>.
            </para>
             
            <para>
            To import a new certificate, omit the <code>CertificateArn</code> field. Include this
            field only when you want to replace a previously imported certificate.
            </para>
             
            <para>
            This operation returns the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportCertificate service method.</param>
            
            <returns>The response from the ImportCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM limit has been exceeded. For example, you may have input more domains than
            are allowed or you've requested too many certificates for your account. See the exception
            message returned by ACM to determine which limit you have violated. For more information
            about ACM limits, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>
            topic.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ImportCertificate">REST API Reference for ImportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ImportCertificateAsync(Amazon.CertificateManager.Model.ImportCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ImportCertificate">REST API Reference for ImportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListCertificates">
            <summary>
            Retrieves a list of ACM Certificates and the domain name for each. You can optionally
            filter the list to return only the certificates that match the specified status.
            </summary>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListCertificates(Amazon.CertificateManager.Model.ListCertificatesRequest)">
            <summary>
            Retrieves a list of ACM Certificates and the domain name for each. You can optionally
            filter the list to return only the certificates that match the specified status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificates service method.</param>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListCertificatesAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of ACM Certificates and the domain name for each. You can optionally
            filter the list to return only the certificates that match the specified status.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListCertificatesAsync(Amazon.CertificateManager.Model.ListCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListCertificates operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListCertificates operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListTagsForCertificate(Amazon.CertificateManager.Model.ListTagsForCertificateRequest)">
            <summary>
            Lists the tags that have been applied to the ACM Certificate. Use the certificate's
            Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM Certificate,
            use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForCertificate service method.</param>
            
            <returns>The response from the ListTagsForCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListTagsForCertificate">REST API Reference for ListTagsForCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListTagsForCertificateAsync(Amazon.CertificateManager.Model.ListTagsForCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTagsForCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTagsForCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListTagsForCertificate">REST API Reference for ListTagsForCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RemoveTagsFromCertificate(Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest)">
            <summary>
            Remove one or more tags from an ACM Certificate. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this function, the
            tag will be removed regardless of value. If you specify a value, the tag is removed
            only if it is associated with the specified value.
            
             
            <para>
            To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view
            all of the tags that have been applied to a specific ACM Certificate, use the <a>ListTagsForCertificate</a>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromCertificate service method.</param>
            
            <returns>The response from the RemoveTagsFromCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RemoveTagsFromCertificate">REST API Reference for RemoveTagsFromCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RemoveTagsFromCertificateAsync(Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveTagsFromCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RemoveTagsFromCertificate">REST API Reference for RemoveTagsFromCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RequestCertificate(System.String)">
            <summary>
            Requests an ACM Certificate for use with other AWS services. To request an ACM Certificate,
            you must specify the fully qualified domain name (FQDN) for your site. You can also
            specify additional FQDNs if users can reach your site by using other names. For each
            domain name you specify, email is sent to the domain owner to request approval to
            issue the certificate. After receiving approval from the domain owner, the ACM Certificate
            is issued. For more information, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS
            Certificate Manager User Guide</a>.
            </summary>
            <param name="domainName">Fully qualified domain name (FQDN), such as www.example.com, of the site that you want to secure with an ACM Certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.</param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM limit has been exceeded. For example, you may have input more domains than
            are allowed or you've requested too many certificates for your account. See the exception
            message returned by ACM to determine which limit you have violated. For more information
            about ACM limits, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>
            topic.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RequestCertificate(Amazon.CertificateManager.Model.RequestCertificateRequest)">
            <summary>
            Requests an ACM Certificate for use with other AWS services. To request an ACM Certificate,
            you must specify the fully qualified domain name (FQDN) for your site. You can also
            specify additional FQDNs if users can reach your site by using other names. For each
            domain name you specify, email is sent to the domain owner to request approval to
            issue the certificate. After receiving approval from the domain owner, the ACM Certificate
            is issued. For more information, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS
            Certificate Manager User Guide</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestCertificate service method.</param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM limit has been exceeded. For example, you may have input more domains than
            are allowed or you've requested too many certificates for your account. See the exception
            message returned by ACM to determine which limit you have violated. For more information
            about ACM limits, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>
            topic.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RequestCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Requests an ACM Certificate for use with other AWS services. To request an ACM Certificate,
            you must specify the fully qualified domain name (FQDN) for your site. You can also
            specify additional FQDNs if users can reach your site by using other names. For each
            domain name you specify, email is sent to the domain owner to request approval to
            issue the certificate. After receiving approval from the domain owner, the ACM Certificate
            is issued. For more information, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS
            Certificate Manager User Guide</a>.
            </summary>
            <param name="domainName">Fully qualified domain name (FQDN), such as www.example.com, of the site that you want to secure with an ACM Certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM limit has been exceeded. For example, you may have input more domains than
            are allowed or you've requested too many certificates for your account. See the exception
            message returned by ACM to determine which limit you have violated. For more information
            about ACM limits, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>
            topic.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RequestCertificateAsync(Amazon.CertificateManager.Model.RequestCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RequestCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RequestCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ResendValidationEmail(Amazon.CertificateManager.Model.ResendValidationEmailRequest)">
            <summary>
            Resends the email that requests domain ownership validation. The domain owner or an
            authorized representative must approve the ACM Certificate before it can be issued.
            The certificate can be approved by clicking a link in the mail to navigate to the
            Amazon certificate approval website and then clicking <b>I Approve</b>. However, the
            validation email can be blocked by spam filters. Therefore, if you do not receive
            the original mail, you can request that the mail be resent within 72 hours of requesting
            the ACM Certificate. If more than 72 hours have elapsed since your original request
            or since your last attempt to resend validation mail, you must request a new certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendValidationEmail service method.</param>
            
            <returns>The response from the ResendValidationEmail service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidStateException">
            Processing has reached an invalid state. For example, this exception can occur if
            the specified domain is not using email validation, or the current certificate status
            does not permit the requested operation. See the exception message returned by ACM
            to determine which state is not valid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ResendValidationEmail">REST API Reference for ResendValidationEmail Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ResendValidationEmailAsync(Amazon.CertificateManager.Model.ResendValidationEmailRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResendValidationEmail operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResendValidationEmail operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ResendValidationEmail">REST API Reference for ResendValidationEmail Operation</seealso>
        </member>
        <member name="T:Amazon.CertificateManager.IAmazonCertificateManager">
             <summary>
             Interface for accessing CertificateManager
            
             AWS Certificate Manager 
             <para>
             Welcome to the AWS Certificate Manager (ACM) API documentation.
             </para>
              
             <para>
             You can use ACM to manage SSL/TLS certificates for your AWS-based websites and applications.
             For general information about using ACM, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">
             <i>AWS Certificate Manager User Guide</i> </a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.AddTagsToCertificate(Amazon.CertificateManager.Model.AddTagsToCertificateRequest)">
            <summary>
            Adds one or more tags to an ACM Certificate. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a <code>key</code> and an optional
            <code>value</code>. You specify the certificate on input by its Amazon Resource Name
            (ARN). You specify the tag by using a key-value pair.
            
             
            <para>
            You can apply a tag to just one certificate if you want to identify a specific characteristic
            of that certificate, or you can apply the same tag to multiple certificates if you
            want to filter for a common relationship among those certificates. Similarly, you
            can apply the same tag to multiple resources if you want to specify a relationship
            among those resources. For example, you can add the same tag to an ACM Certificate
            and an Elastic Load Balancing load balancer to indicate that they are both used by
            the same website. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging
            ACM Certificates</a>.
            </para>
             
            <para>
            To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view
            all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToCertificate service method.</param>
            
            <returns>The response from the AddTagsToCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/AddTagsToCertificate">REST API Reference for AddTagsToCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.AddTagsToCertificateAsync(Amazon.CertificateManager.Model.AddTagsToCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddTagsToCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddTagsToCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/AddTagsToCertificate">REST API Reference for AddTagsToCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DeleteCertificate(System.String)">
            <summary>
            Deletes an ACM Certificate and its associated private key. If this action succeeds,
            the certificate no longer appears in the list of ACM Certificates that can be displayed
            by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a>
            action. The certificate will not be available for use by other AWS services.
            
             <note> 
            <para>
            You cannot delete an ACM Certificate that is being used by another AWS service. To
            delete a certificate that is in use, the certificate association must first be removed.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains the ARN of the ACM Certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another AWS service in the caller's account. Remove the
            association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DeleteCertificate(Amazon.CertificateManager.Model.DeleteCertificateRequest)">
            <summary>
            Deletes an ACM Certificate and its associated private key. If this action succeeds,
            the certificate no longer appears in the list of ACM Certificates that can be displayed
            by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a>
            action. The certificate will not be available for use by other AWS services.
            
             <note> 
            <para>
            You cannot delete an ACM Certificate that is being used by another AWS service. To
            delete a certificate that is in use, the certificate association must first be removed.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate service method.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another AWS service in the caller's account. Remove the
            association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DeleteCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an ACM Certificate and its associated private key. If this action succeeds,
            the certificate no longer appears in the list of ACM Certificates that can be displayed
            by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a>
            action. The certificate will not be available for use by other AWS services.
            
             <note> 
            <para>
            You cannot delete an ACM Certificate that is being used by another AWS service. To
            delete a certificate that is in use, the certificate association must first be removed.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains the ARN of the ACM Certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another AWS service in the caller's account. Remove the
            association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DeleteCertificateAsync(Amazon.CertificateManager.Model.DeleteCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DescribeCertificate(System.String)">
            <summary>
            Returns detailed metadata about the specified ACM Certificate.
            </summary>
            <param name="certificateArn">The Amazon Resource Name (ARN) of the ACM Certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DescribeCertificate(Amazon.CertificateManager.Model.DescribeCertificateRequest)">
            <summary>
            Returns detailed metadata about the specified ACM Certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate service method.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DescribeCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns detailed metadata about the specified ACM Certificate.
            </summary>
            <param name="certificateArn">The Amazon Resource Name (ARN) of the ACM Certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DescribeCertificateAsync(Amazon.CertificateManager.Model.DescribeCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.GetCertificate(System.String)">
            <summary>
            Retrieves an ACM Certificate and certificate chain for the certificate specified by
            an ARN. The chain is an ordered list of certificates that contains the root certificate,
            intermediate certificates of subordinate CAs, and the ACM Certificate. The certificate
            and certificate chain are base64 encoded. If you want to decode the certificate chain
            to see the individual certificate fields, you can use OpenSSL.
            
             <note> 
            <para>
            Currently, ACM Certificates can be used only with Elastic Load Balancing and Amazon
            CloudFront.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.GetCertificate(Amazon.CertificateManager.Model.GetCertificateRequest)">
            <summary>
            Retrieves an ACM Certificate and certificate chain for the certificate specified by
            an ARN. The chain is an ordered list of certificates that contains the root certificate,
            intermediate certificates of subordinate CAs, and the ACM Certificate. The certificate
            and certificate chain are base64 encoded. If you want to decode the certificate chain
            to see the individual certificate fields, you can use OpenSSL.
            
             <note> 
            <para>
            Currently, ACM Certificates can be used only with Elastic Load Balancing and Amazon
            CloudFront.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificate service method.</param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.GetCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an ACM Certificate and certificate chain for the certificate specified by
            an ARN. The chain is an ordered list of certificates that contains the root certificate,
            intermediate certificates of subordinate CAs, and the ACM Certificate. The certificate
            and certificate chain are base64 encoded. If you want to decode the certificate chain
            to see the individual certificate fields, you can use OpenSSL.
            
             <note> 
            <para>
            Currently, ACM Certificates can be used only with Elastic Load Balancing and Amazon
            CloudFront.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.GetCertificateAsync(Amazon.CertificateManager.Model.GetCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ImportCertificate(Amazon.CertificateManager.Model.ImportCertificateRequest)">
            <summary>
            Imports an SSL/TLS certificate into AWS Certificate Manager (ACM) to use with <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">ACM's
            integrated AWS services</a>.
            
             <note> 
            <para>
            ACM does not provide <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for certificates that you import.
            </para>
             </note> 
            <para>
            For more information about importing certificates into ACM, including the differences
            between certificates that you import and those that ACM provides, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>AWS Certificate Manager User Guide</i>.
            </para>
             
            <para>
            To import a certificate, you must provide the certificate and the matching private
            key. When the certificate is not self-signed, you must also provide a certificate
            chain. You can omit the certificate chain when importing a self-signed certificate.
            </para>
             
            <para>
            The certificate, private key, and certificate chain must be PEM-encoded. For more
            information about converting these items to PEM format, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html#import-certificate-troubleshooting">Importing
            Certificates Troubleshooting</a> in the <i>AWS Certificate Manager User Guide</i>.
            </para>
             
            <para>
            To import a new certificate, omit the <code>CertificateArn</code> field. Include this
            field only when you want to replace a previously imported certificate.
            </para>
             
            <para>
            This operation returns the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportCertificate service method.</param>
            
            <returns>The response from the ImportCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM limit has been exceeded. For example, you may have input more domains than
            are allowed or you've requested too many certificates for your account. See the exception
            message returned by ACM to determine which limit you have violated. For more information
            about ACM limits, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>
            topic.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ImportCertificate">REST API Reference for ImportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ImportCertificateAsync(Amazon.CertificateManager.Model.ImportCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ImportCertificate">REST API Reference for ImportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListCertificates">
            <summary>
            Retrieves a list of ACM Certificates and the domain name for each. You can optionally
            filter the list to return only the certificates that match the specified status.
            </summary>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListCertificates(Amazon.CertificateManager.Model.ListCertificatesRequest)">
            <summary>
            Retrieves a list of ACM Certificates and the domain name for each. You can optionally
            filter the list to return only the certificates that match the specified status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificates service method.</param>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListCertificatesAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of ACM Certificates and the domain name for each. You can optionally
            filter the list to return only the certificates that match the specified status.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListCertificatesAsync(Amazon.CertificateManager.Model.ListCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListCertificates operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListCertificates operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListTagsForCertificate(Amazon.CertificateManager.Model.ListTagsForCertificateRequest)">
            <summary>
            Lists the tags that have been applied to the ACM Certificate. Use the certificate's
            Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM Certificate,
            use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForCertificate service method.</param>
            
            <returns>The response from the ListTagsForCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListTagsForCertificate">REST API Reference for ListTagsForCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListTagsForCertificateAsync(Amazon.CertificateManager.Model.ListTagsForCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTagsForCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTagsForCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListTagsForCertificate">REST API Reference for ListTagsForCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RemoveTagsFromCertificate(Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest)">
            <summary>
            Remove one or more tags from an ACM Certificate. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this function, the
            tag will be removed regardless of value. If you specify a value, the tag is removed
            only if it is associated with the specified value.
            
             
            <para>
            To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view
            all of the tags that have been applied to a specific ACM Certificate, use the <a>ListTagsForCertificate</a>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromCertificate service method.</param>
            
            <returns>The response from the RemoveTagsFromCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RemoveTagsFromCertificate">REST API Reference for RemoveTagsFromCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RemoveTagsFromCertificateAsync(Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveTagsFromCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RemoveTagsFromCertificate">REST API Reference for RemoveTagsFromCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RequestCertificate(System.String)">
            <summary>
            Requests an ACM Certificate for use with other AWS services. To request an ACM Certificate,
            you must specify the fully qualified domain name (FQDN) for your site. You can also
            specify additional FQDNs if users can reach your site by using other names. For each
            domain name you specify, email is sent to the domain owner to request approval to
            issue the certificate. After receiving approval from the domain owner, the ACM Certificate
            is issued. For more information, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS
            Certificate Manager User Guide</a>.
            </summary>
            <param name="domainName">Fully qualified domain name (FQDN), such as www.example.com, of the site that you want to secure with an ACM Certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.</param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM limit has been exceeded. For example, you may have input more domains than
            are allowed or you've requested too many certificates for your account. See the exception
            message returned by ACM to determine which limit you have violated. For more information
            about ACM limits, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>
            topic.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RequestCertificate(Amazon.CertificateManager.Model.RequestCertificateRequest)">
            <summary>
            Requests an ACM Certificate for use with other AWS services. To request an ACM Certificate,
            you must specify the fully qualified domain name (FQDN) for your site. You can also
            specify additional FQDNs if users can reach your site by using other names. For each
            domain name you specify, email is sent to the domain owner to request approval to
            issue the certificate. After receiving approval from the domain owner, the ACM Certificate
            is issued. For more information, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS
            Certificate Manager User Guide</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestCertificate service method.</param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM limit has been exceeded. For example, you may have input more domains than
            are allowed or you've requested too many certificates for your account. See the exception
            message returned by ACM to determine which limit you have violated. For more information
            about ACM limits, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>
            topic.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RequestCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Requests an ACM Certificate for use with other AWS services. To request an ACM Certificate,
            you must specify the fully qualified domain name (FQDN) for your site. You can also
            specify additional FQDNs if users can reach your site by using other names. For each
            domain name you specify, email is sent to the domain owner to request approval to
            issue the certificate. After receiving approval from the domain owner, the ACM Certificate
            is issued. For more information, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS
            Certificate Manager User Guide</a>.
            </summary>
            <param name="domainName">Fully qualified domain name (FQDN), such as www.example.com, of the site that you want to secure with an ACM Certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM limit has been exceeded. For example, you may have input more domains than
            are allowed or you've requested too many certificates for your account. See the exception
            message returned by ACM to determine which limit you have violated. For more information
            about ACM limits, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>
            topic.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RequestCertificateAsync(Amazon.CertificateManager.Model.RequestCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RequestCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RequestCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ResendValidationEmail(Amazon.CertificateManager.Model.ResendValidationEmailRequest)">
            <summary>
            Resends the email that requests domain ownership validation. The domain owner or an
            authorized representative must approve the ACM Certificate before it can be issued.
            The certificate can be approved by clicking a link in the mail to navigate to the
            Amazon certificate approval website and then clicking <b>I Approve</b>. However, the
            validation email can be blocked by spam filters. Therefore, if you do not receive
            the original mail, you can request that the mail be resent within 72 hours of requesting
            the ACM Certificate. If more than 72 hours have elapsed since your original request
            or since your last attempt to resend validation mail, you must request a new certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendValidationEmail service method.</param>
            
            <returns>The response from the ResendValidationEmail service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidStateException">
            Processing has reached an invalid state. For example, this exception can occur if
            the specified domain is not using email validation, or the current certificate status
            does not permit the requested operation. See the exception message returned by ACM
            to determine which state is not valid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account, or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ResendValidationEmail">REST API Reference for ResendValidationEmail Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ResendValidationEmailAsync(Amazon.CertificateManager.Model.ResendValidationEmailRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResendValidationEmail operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResendValidationEmail operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ResendValidationEmail">REST API Reference for ResendValidationEmail Operation</seealso>
        </member>
    </members>
</doc>
