<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CloudWatchEvents</name>
    </assembly>
    <members>
        <member name="T:Amazon.CloudWatchEvents.AmazonCloudWatchEventsConfig">
            <summary>
            Configuration for accessing Amazon CloudWatchEvents service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.AmazonCloudWatchEventsConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.AmazonCloudWatchEventsConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.AmazonCloudWatchEventsConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.AmazonCloudWatchEventsException">
            <summary>
             Common exception for the CloudWatchEvents service.
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCloudWatchEventsException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchEventsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchEventsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchEventsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchEventsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonCloudWatchEventsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchEvents.RuleState">
            <summary>
            Constants used for properties of type RuleState.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchEvents.RuleState.DISABLED">
            <summary>
            Constant DISABLED for RuleState
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchEvents.RuleState.ENABLED">
            <summary>
            Constant ENABLED for RuleState
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.RuleState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.RuleState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.RuleState.op_Implicit(System.String)~Amazon.CloudWatchEvents.RuleState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.AmazonCloudWatchEventsRequest">
            <summary>
            Base class for CloudWatchEvents operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            <summary>
             CloudWatchEvents exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ConcurrentModificationException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentModificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ConcurrentModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ConcurrentModificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ConcurrentModificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ConcurrentModificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ConcurrentModificationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConcurrentModificationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.DeleteRuleRequest">
            <summary>
            Container for the parameters to the DeleteRule operation.
            Deletes the specified rule.
            
             
            <para>
            You must remove all targets from a rule using <a>RemoveTargets</a> before you can
            delete the rule.
            </para>
             
            <para>
            When you delete a rule, incoming events might continue to match to the deleted rule.
            Please allow a short period of time for changes to take effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.DeleteRuleRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.DeleteRuleResponse">
            <summary>
            This is the response object from the DeleteRule operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.DescribeRuleRequest">
            <summary>
            Container for the parameters to the DescribeRule operation.
            Describes the specified rule.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.DescribeRuleRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.DescribeRuleResponse">
            <summary>
            This is the response object from the DescribeRule operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.DescribeRuleResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.DescribeRuleResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.DescribeRuleResponse.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            The event pattern. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events
            and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.DescribeRuleResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.DescribeRuleResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role associated with the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.DescribeRuleResponse.ScheduleExpression">
            <summary>
            Gets and sets the property ScheduleExpression. 
            <para>
            The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.DescribeRuleResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Specifies whether the rule is enabled or disabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.DisableRuleRequest">
            <summary>
            Container for the parameters to the DisableRule operation.
            Disables the specified rule. A disabled rule won't match any events, and won't self-trigger
            if it has a schedule expression.
            
             
            <para>
            When you disable a rule, incoming events might continue to match to the disabled rule.
            Please allow a short period of time for changes to take effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.DisableRuleRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.DisableRuleResponse">
            <summary>
            This is the response object from the DisableRule operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.EcsParameters">
            <summary>
            The custom parameters to be used when the target is an Amazon ECS cluster.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.EcsParameters.TaskCount">
            <summary>
            Gets and sets the property TaskCount. 
            <para>
            The number of tasks to create based on the <code>TaskDefinition</code>. The default
            is one.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.EcsParameters.TaskDefinitionArn">
            <summary>
            Gets and sets the property TaskDefinitionArn. 
            <para>
            The ARN of the task definition to use if the event target is an Amazon ECS cluster.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.EnableRuleRequest">
            <summary>
            Container for the parameters to the EnableRule operation.
            Enables the specified rule. If the rule does not exist, the operation fails.
            
             
            <para>
            When you enable a rule, incoming events might not immediately start matching to a
            newly enabled rule. Please allow a short period of time for changes to take effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.EnableRuleRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.EnableRuleResponse">
            <summary>
            This is the response object from the EnableRule operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.InputTransformer">
            <summary>
            Contains the parameters needed for you to provide custom input to a target based on
            one or more pieces of data extracted from the event.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.InputTransformer.InputPathsMap">
            <summary>
            Gets and sets the property InputPathsMap. 
            <para>
            Map of JSON paths to be extracted from the event. These are key-value pairs, where
            each value is a JSON path. You must use JSON dot notation, not bracket notation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.InputTransformer.InputTemplate">
            <summary>
            Gets and sets the property InputTemplate. 
            <para>
            Input template where you can use the values of the keys from <code>InputPathsMap</code>
            to customize the data sent to the target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.InternalException">
            <summary>
             CloudWatchEvents exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InternalException.#ctor(System.String)">
            <summary>
            Constructs a new InternalException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InternalException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InternalException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InternalException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InternalException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.InvalidEventPatternException">
            <summary>
             CloudWatchEvents exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InvalidEventPatternException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidEventPatternException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InvalidEventPatternException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidEventPatternException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InvalidEventPatternException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidEventPatternException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InvalidEventPatternException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEventPatternException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InvalidEventPatternException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEventPatternException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.InvalidEventPatternException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidEventPatternException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.KinesisParameters">
            <summary>
            This object enables you to specify a JSON path to extract from the event and use as
            the partition key for the Amazon Kinesis stream, so that you can control the shard
            to which the event goes. If you do not include this parameter, the default is to use
            the <code>eventId</code> as the partition key.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.KinesisParameters.PartitionKeyPath">
            <summary>
            Gets and sets the property PartitionKeyPath. 
            <para>
            The JSON path to be extracted from the event and used as the partition key. For more
            information, see <a href="http://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key">Amazon
            Kinesis Streams Key Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.LimitExceededException">
            <summary>
             CloudWatchEvents exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetRequest">
            <summary>
            Container for the parameters to the ListRuleNamesByTarget operation.
            Lists the rules for the specified target. You can see which of the rules in Amazon
            CloudWatch Events can invoke a specific target in your account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetRequest.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The Amazon Resource Name (ARN) of the target resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetResponse">
            <summary>
            This is the response object from the ListRuleNamesByTarget operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Indicates whether there are additional results to retrieve. If there are no more results,
            the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetResponse.RuleNames">
            <summary>
            Gets and sets the property RuleNames. 
            <para>
            The names of the rules that can invoke the given target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.ListRulesRequest">
            <summary>
            Container for the parameters to the ListRules operation.
            Lists your Amazon CloudWatch Events rules. You can either list all the rules or you
            can provide a prefix to match to the rule names.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListRulesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListRulesRequest.NamePrefix">
            <summary>
            Gets and sets the property NamePrefix. 
            <para>
            The prefix matching the rule name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListRulesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.ListRulesResponse">
            <summary>
            This is the response object from the ListRules operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListRulesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Indicates whether there are additional results to retrieve. If there are no more results,
            the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListRulesResponse.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            The rules that match the specified criteria.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.ListTargetsByRuleRequest">
            <summary>
            Container for the parameters to the ListTargetsByRule operation.
            Lists the targets assigned to the specified rule.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListTargetsByRuleRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListTargetsByRuleRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListTargetsByRuleRequest.Rule">
            <summary>
            Gets and sets the property Rule. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.ListTargetsByRuleResponse">
            <summary>
            This is the response object from the ListTargetsByRule operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListTargetsByRuleResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Indicates whether there are additional results to retrieve. If there are no more results,
            the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.ListTargetsByRuleResponse.Targets">
            <summary>
            Gets and sets the property Targets. 
            <para>
            The targets assigned to the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.PutEventsRequest">
            <summary>
            Container for the parameters to the PutEvents operation.
            Sends custom events to Amazon CloudWatch Events so that they can be matched to rules.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            The entry that defines an event in your system. You can specify several parameters
            for the entry such as the source and type of the event, resources associated with
            the event, and so on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.PutEventsRequestEntry">
            <summary>
            Represents an event to be submitted.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsRequestEntry.Detail">
            <summary>
            Gets and sets the property Detail. 
            <para>
            In the JSON sense, an object containing fields, which may also contain nested subobjects.
            No constraints are imposed on its contents.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsRequestEntry.DetailType">
            <summary>
            Gets and sets the property DetailType. 
            <para>
            Free-form string used to decide what fields to expect in the event detail.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsRequestEntry.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            AWS resources, identified by Amazon Resource Name (ARN), which the event primarily
            concerns. Any number, including zero, may be present.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsRequestEntry.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The source of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsRequestEntry.Time">
            <summary>
            Gets and sets the property Time. 
            <para>
            The timestamp of the event, per <a href="https://www.rfc-editor.org/rfc/rfc3339.txt">RFC3339</a>.
            If no timestamp is provided, the timestamp of the <a>PutEvents</a> call is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.PutEventsResponse">
            <summary>
            This is the response object from the PutEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsResponse.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            The successfully and unsuccessfully ingested events results. If the ingestion was
            successful, the entry has the event ID in it. Otherwise, you can use the error code
            and error message to identify the problem with the entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsResponse.FailedEntryCount">
            <summary>
            Gets and sets the property FailedEntryCount. 
            <para>
            The number of failed entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.PutEventsResultEntry">
            <summary>
            Represents an event that failed to be submitted.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsResultEntry.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code that indicates why the event submission failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsResultEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            The error message that explains why the event submission failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutEventsResultEntry.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The ID of the event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.PutRuleRequest">
            <summary>
            Container for the parameters to the PutRule operation.
            Creates or updates the specified rule. Rules are enabled by default, or based on value
            of the state. You can disable a rule using <a>DisableRule</a>.
            
             
            <para>
            When you create or update a rule, incoming events might not immediately start matching
            to new or updated rules. Please allow a short period of time for changes to take effect.
            </para>
             
            <para>
            A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns
            are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger
            based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression,
            in which case the rule triggers on matching events as well as on a schedule.
            </para>
             
            <para>
            Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs).
            However, CloudWatch Events uses an exact match in event patterns and rules. Be sure
            to use the correct ARN characters when creating event patterns so that they match
            the ARN syntax in the event you want to match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutRuleRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutRuleRequest.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            The event pattern. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events
            and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutRuleRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule that you are creating or updating.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutRuleRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role associated with the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutRuleRequest.ScheduleExpression">
            <summary>
            Gets and sets the property ScheduleExpression. 
            <para>
            The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutRuleRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Indicates whether the rule is enabled or disabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.PutRuleResponse">
            <summary>
            This is the response object from the PutRule operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutRuleResponse.RuleArn">
            <summary>
            Gets and sets the property RuleArn. 
            <para>
            The Amazon Resource Name (ARN) of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.PutTargetsRequest">
            <summary>
            Container for the parameters to the PutTargets operation.
            Adds the specified targets to the specified rule, or updates the targets if they are
            already associated with the rule.
            
             
            <para>
            Targets are the resources that are invoked when a rule is triggered. Example targets
            include EC2 instances, AWS Lambda functions, Amazon Kinesis streams, Amazon ECS tasks,
            AWS Step Functions state machines, and built-in targets. Note that creating rules
            with built-in targets is supported only in the AWS Management Console.
            </para>
             
            <para>
            For some target types, <code>PutTargets</code> provides target-specific parameters.
            If the target is an Amazon Kinesis stream, you can optionally specify which shard
            the event goes to by using the <code>KinesisParameters</code> argument. To invoke
            a command on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code>
            field.
            </para>
             
            <para>
            To be able to make API calls against the resources that you own, Amazon CloudWatch
            Events needs the appropriate permissions. For AWS Lambda and Amazon SNS resources,
            CloudWatch Events relies on resource-based policies. For EC2 instances, Amazon Kinesis
            streams, and AWS Step Functions state machines, CloudWatch Events relies on IAM roles
            that you specify in the <code>RoleARN</code> argument in <code>PutTarget</code>. For
            more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/auth-and-access-control-cwe.html">Authentication
            and Access Control</a> in the <i>Amazon CloudWatch Events User Guide</i>.
            </para>
             
            <para>
             <b>Input</b>, <b>InputPath</b> and <b>InputTransformer</b> are mutually exclusive
            and optional parameters of a target. When a rule is triggered due to a matched event:
            </para>
             <ul> <li> 
            <para>
            If none of the following arguments are specified for a target, then the entire event
            is passed to the target in JSON form (unless the target is Amazon EC2 Run Command
            or Amazon ECS task, in which case nothing from the event is passed to the target).
            </para>
             </li> <li> 
            <para>
            If <b>Input</b> is specified in the form of valid JSON, then the matched event is
            overridden with this constant.
            </para>
             </li> <li> 
            <para>
            If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>),
            then only the part of the event specified in the path is passed to the target (for
            example, only the detail part of the event is passed).
            </para>
             </li> <li> 
            <para>
            If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are
            extracted from the event and used as values in a template that you specify as the
            input to the target.
            </para>
             </li> </ul> 
            <para>
            When you specify <code>Input</code>, <code>InputPath</code>, or <code>InputTransformer</code>,
            you must use JSON dot notation, not bracket notation.
            </para>
             
            <para>
            When you add targets to a rule and the associated rule triggers soon after, new or
            updated targets might not be immediately invoked. Please allow a short period of time
            for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutTargetsRequest.Rule">
            <summary>
            Gets and sets the property Rule. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutTargetsRequest.Targets">
            <summary>
            Gets and sets the property Targets. 
            <para>
            The targets to update or add to the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.PutTargetsResponse">
            <summary>
            This is the response object from the PutTargets operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutTargetsResponse.FailedEntries">
            <summary>
            Gets and sets the property FailedEntries. 
            <para>
            The failed target entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.PutTargetsResultEntry">
            <summary>
            Represents a target that failed to be added to a rule.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutTargetsResultEntry.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code that indicates why the target addition failed. If the value is <code>ConcurrentModificationException</code>,
            too many requests were made at the same time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutTargetsResultEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            The error message that explains why the target addition failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.PutTargetsResultEntry.TargetId">
            <summary>
            Gets and sets the property TargetId. 
            <para>
            The ID of the target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.RemoveTargetsRequest">
            <summary>
            Container for the parameters to the RemoveTargets operation.
            Removes the specified targets from the specified rule. When the rule is triggered,
            those targets are no longer be invoked.
            
             
            <para>
            When you remove a target, when the associated rule triggers, removed targets might
            continue to be invoked. Please allow a short period of time for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.RemoveTargetsRequest.Ids">
            <summary>
            Gets and sets the property Ids. 
            <para>
            The IDs of the targets to remove from the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.RemoveTargetsRequest.Rule">
            <summary>
            Gets and sets the property Rule. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.RemoveTargetsResponse">
            <summary>
            This is the response object from the RemoveTargets operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.RemoveTargetsResponse.FailedEntries">
            <summary>
            Gets and sets the property FailedEntries. 
            <para>
            The failed target entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.RemoveTargetsResultEntry">
            <summary>
            Represents a target that failed to be removed from a rule.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.RemoveTargetsResultEntry.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code that indicates why the target removal failed. If the value is <code>ConcurrentModificationException</code>,
            too many requests were made at the same time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.RemoveTargetsResultEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            The error message that explains why the target removal failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.RemoveTargetsResultEntry.TargetId">
            <summary>
            Gets and sets the property TargetId. 
            <para>
            The ID of the target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            <summary>
             CloudWatchEvents exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Rule">
            <summary>
            Contains information about a rule in Amazon CloudWatch Events.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Rule.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Rule.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Rule.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            The event pattern of the rule. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events
            and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Rule.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Rule.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the role that is used for target invocation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Rule.ScheduleExpression">
            <summary>
            Gets and sets the property ScheduleExpression. 
            <para>
            The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Rule.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.RunCommandParameters">
            <summary>
            This parameter contains the criteria (either InstanceIds or a tag) used to specify
            which EC2 instances are to be sent the command.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.RunCommandParameters.RunCommandTargets">
            <summary>
            Gets and sets the property RunCommandTargets. 
            <para>
            Currently, we support including only one RunCommandTarget block, which specifies either
            an array of InstanceIds or a tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.RunCommandTarget">
            <summary>
            Information about the EC2 instances that are to be sent the command, specified as
            key-value pairs. Each <code>RunCommandTarget</code> block can include only one key,
            but this key may specify multiple values.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.RunCommandTarget.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Can be either <code>tag:</code> <i>tag-key</i> or <code>InstanceIds</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.RunCommandTarget.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            If <code>Key</code> is <code>tag:</code> <i>tag-key</i>, <code>Values</code> is a
            list of tag values. If <code>Key</code> is <code>InstanceIds</code>, <code>Values</code>
            is a list of Amazon EC2 instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Target">
            <summary>
            Targets are the resources to be invoked when a rule is triggered. Target types include
            EC2 instances, AWS Lambda functions, Amazon Kinesis streams, Amazon ECS tasks, AWS
            Step Functions state machines, Run Command, and built-in targets.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Target.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Target.EcsParameters">
            <summary>
            Gets and sets the property EcsParameters. 
            <para>
            Contains the Amazon ECS task definition and task count to be used, if the event target
            is an Amazon ECS task. For more information about Amazon ECS tasks, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Task
            Definitions </a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Target.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Target.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            Valid JSON text passed to the target. In this case, nothing from the event itself
            is passed to the target. You must use JSON dot notation, not bracket notation. For
            more information, see <a href="http://www.rfc-editor.org/rfc/rfc7159.txt">The JavaScript
            Object Notation (JSON) Data Interchange Format</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Target.InputPath">
            <summary>
            Gets and sets the property InputPath. 
            <para>
            The value of the JSONPath that is used for extracting part of the matched event when
            passing it to the target. You must use JSON dot notation, not bracket notation. For
            more information about JSON paths, see <a href="http://goessner.net/articles/JsonPath/">JSONPath</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Target.InputTransformer">
            <summary>
            Gets and sets the property InputTransformer. 
            <para>
            Settings to enable you to provide custom input to a target based on certain event
            data. You can extract one or more key-value pairs from the event and then use that
            data to send customized input to the target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Target.KinesisParameters">
            <summary>
            Gets and sets the property KinesisParameters. 
            <para>
            The custom parameter you can use to control shard assignment, when the target is an
            Amazon Kinesis stream. If you do not include this parameter, the default is to use
            the <code>eventId</code> as the partition key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Target.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role to be used for this target when the
            rule is triggered. If one rule triggers multiple targets, you can use a different
            IAM role for each target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Target.RunCommandParameters">
            <summary>
            Gets and sets the property RunCommandParameters. 
            <para>
            Parameters used when you are using the rule to invoke Amazon EC2 Run Command.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.TestEventPatternRequest">
            <summary>
            Container for the parameters to the TestEventPattern operation.
            Tests whether the specified event pattern matches the provided event.
            
             
            <para>
            Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs).
            However, CloudWatch Events uses an exact match in event patterns and rules. Be sure
            to use the correct ARN characters when creating event patterns so that they match
            the ARN syntax in the event you want to match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.TestEventPatternRequest.Event">
            <summary>
            Gets and sets the property Event. 
            <para>
            The event, in JSON format, to test against the event pattern.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.TestEventPatternRequest.EventPattern">
            <summary>
            Gets and sets the property EventPattern. 
            <para>
            The event pattern. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events
            and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.TestEventPatternResponse">
            <summary>
            This is the response object from the TestEventPattern operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.TestEventPatternResponse.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            Indicates whether the event matches the event pattern.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DeleteRuleRequestMarshaller">
            <summary>
            DeleteRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DeleteRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DeleteRuleRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.DeleteRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DeleteRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRule operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DeleteRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DeleteRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DeleteRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DescribeRuleRequestMarshaller">
            <summary>
            DescribeRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DescribeRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DescribeRuleRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.DescribeRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DescribeRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeRule operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DescribeRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DescribeRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DescribeRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DisableRuleRequestMarshaller">
            <summary>
            DisableRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DisableRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DisableRuleRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.DisableRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DisableRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableRule operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DisableRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DisableRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.DisableRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EcsParametersMarshaller">
            <summary>
            EcsParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EcsParametersMarshaller.Marshall(Amazon.CloudWatchEvents.Model.EcsParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EcsParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EcsParametersUnmarshaller">
            <summary>
            Response Unmarshaller for EcsParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EcsParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchEvents#Model#EcsParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EcsParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EcsParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EnableRuleRequestMarshaller">
            <summary>
            EnableRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EnableRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EnableRuleRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.EnableRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EnableRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableRule operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EnableRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EnableRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.EnableRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.InputTransformerMarshaller">
            <summary>
            InputTransformer Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.InputTransformerMarshaller.Marshall(Amazon.CloudWatchEvents.Model.InputTransformer,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.InputTransformerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.InputTransformerUnmarshaller">
            <summary>
            Response Unmarshaller for InputTransformer Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.InputTransformerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchEvents#Model#InputTransformer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.InputTransformerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.InputTransformerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.KinesisParametersMarshaller">
            <summary>
            KinesisParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.KinesisParametersMarshaller.Marshall(Amazon.CloudWatchEvents.Model.KinesisParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.KinesisParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.KinesisParametersUnmarshaller">
            <summary>
            Response Unmarshaller for KinesisParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.KinesisParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchEvents#Model#KinesisParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.KinesisParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.KinesisParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRuleNamesByTargetRequestMarshaller">
            <summary>
            ListRuleNamesByTarget Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRuleNamesByTargetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRuleNamesByTargetRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRuleNamesByTargetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListRuleNamesByTarget operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRuleNamesByTargetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRuleNamesByTargetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRuleNamesByTargetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRulesRequestMarshaller">
            <summary>
            ListRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRulesRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.ListRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListRules operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListTargetsByRuleRequestMarshaller">
            <summary>
            ListTargetsByRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListTargetsByRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListTargetsByRuleRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.ListTargetsByRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListTargetsByRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTargetsByRule operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListTargetsByRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListTargetsByRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.ListTargetsByRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsRequestEntryMarshaller">
            <summary>
            PutEventsRequestEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsRequestEntryMarshaller.Marshall(Amazon.CloudWatchEvents.Model.PutEventsRequestEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsRequestEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsRequestMarshaller">
            <summary>
            PutEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.PutEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for PutEventsResultEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsResultEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchEvents#Model#PutEventsResultEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutEventsResultEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutRuleRequestMarshaller">
            <summary>
            PutRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutRuleRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.PutRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRule operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsRequestMarshaller">
            <summary>
            PutTargets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.PutTargetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutTargets operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for PutTargetsResultEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsResultEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchEvents#Model#PutTargetsResultEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.PutTargetsResultEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsRequestMarshaller">
            <summary>
            RemoveTargets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.RemoveTargetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTargets operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTargetsResultEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsResultEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchEvents#Model#RemoveTargetsResultEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RemoveTargetsResultEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RuleUnmarshaller">
            <summary>
            Response Unmarshaller for Rule Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchEvents#Model#Rule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandParametersMarshaller">
            <summary>
            RunCommandParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandParametersMarshaller.Marshall(Amazon.CloudWatchEvents.Model.RunCommandParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandParametersUnmarshaller">
            <summary>
            Response Unmarshaller for RunCommandParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchEvents#Model#RunCommandParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandTargetMarshaller">
            <summary>
            RunCommandTarget Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandTargetMarshaller.Marshall(Amazon.CloudWatchEvents.Model.RunCommandTarget,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandTargetMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandTargetUnmarshaller">
            <summary>
            Response Unmarshaller for RunCommandTarget Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandTargetUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchEvents#Model#RunCommandTarget,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandTargetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.RunCommandTargetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TargetMarshaller">
            <summary>
            Target Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TargetMarshaller.Marshall(Amazon.CloudWatchEvents.Model.Target,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TargetMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TargetUnmarshaller">
            <summary>
            Response Unmarshaller for Target Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TargetUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchEvents#Model#Target,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TargetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TargetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TestEventPatternRequestMarshaller">
            <summary>
            TestEventPattern Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TestEventPatternRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TestEventPatternRequestMarshaller.Marshall(Amazon.CloudWatchEvents.Model.TestEventPatternRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TestEventPatternResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TestEventPattern operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TestEventPatternResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TestEventPatternResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchEvents.Model.Internal.MarshallTransformations.TestEventPatternResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient">
             <summary>
             Implementation for accessing CloudWatchEvents
            
             Amazon CloudWatch Events helps you to respond to state changes in your AWS resources.
             When your resources change state, they automatically send events into an event stream.
             You can create rules that match selected events in the stream and route them to targets
             to take action. You can also use rules to take action on a pre-determined schedule.
             For example, you can configure rules to:
             
              <ul> <li> 
             <para>
             Automatically invoke an AWS Lambda function to update DNS entries when an event notifies
             you that Amazon EC2 instance enters the running state.
             </para>
              </li> <li> 
             <para>
             Direct specific API records from CloudTrail to an Amazon Kinesis stream for detailed
             analysis of potential security or availability risks.
             </para>
              </li> <li> 
             <para>
             Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.
             </para>
              </li> </ul> 
             <para>
             For more information about the features of Amazon CloudWatch Events, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events">Amazon
             CloudWatch Events User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor">
             <summary>
             Constructs AmazonCloudWatchEventsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonCloudWatchEventsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(Amazon.CloudWatchEvents.AmazonCloudWatchEventsConfig)">
             <summary>
             Constructs AmazonCloudWatchEventsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCloudWatchEventsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCloudWatchEventsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchEventsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CloudWatchEvents.AmazonCloudWatchEventsConfig)">
            <summary>
            Constructs AmazonCloudWatchEventsClient with AWS Credentials and an
            AmazonCloudWatchEventsClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCloudWatchEventsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchEventsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchEventsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(System.String,System.String,Amazon.CloudWatchEvents.AmazonCloudWatchEventsConfig)">
            <summary>
            Constructs AmazonCloudWatchEventsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchEventsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCloudWatchEventsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchEventsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchEventsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.#ctor(System.String,System.String,System.String,Amazon.CloudWatchEvents.AmazonCloudWatchEventsConfig)">
            <summary>
            Constructs AmazonCloudWatchEventsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchEventsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCloudWatchEventsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.DeleteRule(Amazon.CloudWatchEvents.Model.DeleteRuleRequest)">
            <summary>
            Deletes the specified rule.
            
             
            <para>
            You must remove all targets from a rule using <a>RemoveTargets</a> before you can
            delete the rule.
            </para>
             
            <para>
            When you delete a rule, incoming events might continue to match to the deleted rule.
            Please allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRule service method.</param>
            
            <returns>The response from the DeleteRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DeleteRule">REST API Reference for DeleteRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.DeleteRuleAsync(Amazon.CloudWatchEvents.Model.DeleteRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DeleteRule">REST API Reference for DeleteRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.DescribeRule(Amazon.CloudWatchEvents.Model.DescribeRuleRequest)">
            <summary>
            Describes the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRule service method.</param>
            
            <returns>The response from the DescribeRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DescribeRule">REST API Reference for DescribeRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.DescribeRuleAsync(Amazon.CloudWatchEvents.Model.DescribeRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DescribeRule">REST API Reference for DescribeRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.DisableRule(Amazon.CloudWatchEvents.Model.DisableRuleRequest)">
            <summary>
            Disables the specified rule. A disabled rule won't match any events, and won't self-trigger
            if it has a schedule expression.
            
             
            <para>
            When you disable a rule, incoming events might continue to match to the disabled rule.
            Please allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableRule service method.</param>
            
            <returns>The response from the DisableRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DisableRule">REST API Reference for DisableRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.DisableRuleAsync(Amazon.CloudWatchEvents.Model.DisableRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DisableRule">REST API Reference for DisableRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.EnableRule(Amazon.CloudWatchEvents.Model.EnableRuleRequest)">
            <summary>
            Enables the specified rule. If the rule does not exist, the operation fails.
            
             
            <para>
            When you enable a rule, incoming events might not immediately start matching to a
            newly enabled rule. Please allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableRule service method.</param>
            
            <returns>The response from the EnableRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/EnableRule">REST API Reference for EnableRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.EnableRuleAsync(Amazon.CloudWatchEvents.Model.EnableRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/EnableRule">REST API Reference for EnableRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.ListRuleNamesByTarget(Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetRequest)">
            <summary>
            Lists the rules for the specified target. You can see which of the rules in Amazon
            CloudWatch Events can invoke a specific target in your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRuleNamesByTarget service method.</param>
            
            <returns>The response from the ListRuleNamesByTarget service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRuleNamesByTarget">REST API Reference for ListRuleNamesByTarget Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.ListRuleNamesByTargetAsync(Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListRuleNamesByTarget operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRuleNamesByTarget operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRuleNamesByTarget">REST API Reference for ListRuleNamesByTarget Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.ListRules">
            <summary>
            Lists your Amazon CloudWatch Events rules. You can either list all the rules or you
            can provide a prefix to match to the rule names.
            </summary>
            
            <returns>The response from the ListRules service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.ListRules(Amazon.CloudWatchEvents.Model.ListRulesRequest)">
            <summary>
            Lists your Amazon CloudWatch Events rules. You can either list all the rules or you
            can provide a prefix to match to the rule names.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRules service method.</param>
            
            <returns>The response from the ListRules service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.ListRulesAsync(System.Threading.CancellationToken)">
            <summary>
            Lists your Amazon CloudWatch Events rules. You can either list all the rules or you
            can provide a prefix to match to the rule names.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRules service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.ListRulesAsync(Amazon.CloudWatchEvents.Model.ListRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListRules operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRules operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.ListTargetsByRule(Amazon.CloudWatchEvents.Model.ListTargetsByRuleRequest)">
            <summary>
            Lists the targets assigned to the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTargetsByRule service method.</param>
            
            <returns>The response from the ListTargetsByRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListTargetsByRule">REST API Reference for ListTargetsByRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.ListTargetsByRuleAsync(Amazon.CloudWatchEvents.Model.ListTargetsByRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTargetsByRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTargetsByRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListTargetsByRule">REST API Reference for ListTargetsByRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.PutEvents(Amazon.CloudWatchEvents.Model.PutEventsRequest)">
            <summary>
            Sends custom events to Amazon CloudWatch Events so that they can be matched to rules.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutEvents service method.</param>
            
            <returns>The response from the PutEvents service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutEvents">REST API Reference for PutEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.PutEventsAsync(Amazon.CloudWatchEvents.Model.PutEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutEvents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutEvents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutEvents">REST API Reference for PutEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.PutRule(Amazon.CloudWatchEvents.Model.PutRuleRequest)">
            <summary>
            Creates or updates the specified rule. Rules are enabled by default, or based on value
            of the state. You can disable a rule using <a>DisableRule</a>.
            
             
            <para>
            When you create or update a rule, incoming events might not immediately start matching
            to new or updated rules. Please allow a short period of time for changes to take effect.
            </para>
             
            <para>
            A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns
            are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger
            based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression,
            in which case the rule triggers on matching events as well as on a schedule.
            </para>
             
            <para>
            Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs).
            However, CloudWatch Events uses an exact match in event patterns and rules. Be sure
            to use the correct ARN characters when creating event patterns so that they match
            the ARN syntax in the event you want to match.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRule service method.</param>
            
            <returns>The response from the PutRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.LimitExceededException">
            You tried to create more rules or add more targets to a rule than is allowed.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutRule">REST API Reference for PutRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.PutRuleAsync(Amazon.CloudWatchEvents.Model.PutRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutRule">REST API Reference for PutRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.PutTargets(Amazon.CloudWatchEvents.Model.PutTargetsRequest)">
            <summary>
            Adds the specified targets to the specified rule, or updates the targets if they are
            already associated with the rule.
            
             
            <para>
            Targets are the resources that are invoked when a rule is triggered. Example targets
            include EC2 instances, AWS Lambda functions, Amazon Kinesis streams, Amazon ECS tasks,
            AWS Step Functions state machines, and built-in targets. Note that creating rules
            with built-in targets is supported only in the AWS Management Console.
            </para>
             
            <para>
            For some target types, <code>PutTargets</code> provides target-specific parameters.
            If the target is an Amazon Kinesis stream, you can optionally specify which shard
            the event goes to by using the <code>KinesisParameters</code> argument. To invoke
            a command on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code>
            field.
            </para>
             
            <para>
            To be able to make API calls against the resources that you own, Amazon CloudWatch
            Events needs the appropriate permissions. For AWS Lambda and Amazon SNS resources,
            CloudWatch Events relies on resource-based policies. For EC2 instances, Amazon Kinesis
            streams, and AWS Step Functions state machines, CloudWatch Events relies on IAM roles
            that you specify in the <code>RoleARN</code> argument in <code>PutTarget</code>. For
            more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/auth-and-access-control-cwe.html">Authentication
            and Access Control</a> in the <i>Amazon CloudWatch Events User Guide</i>.
            </para>
             
            <para>
             <b>Input</b>, <b>InputPath</b> and <b>InputTransformer</b> are mutually exclusive
            and optional parameters of a target. When a rule is triggered due to a matched event:
            </para>
             <ul> <li> 
            <para>
            If none of the following arguments are specified for a target, then the entire event
            is passed to the target in JSON form (unless the target is Amazon EC2 Run Command
            or Amazon ECS task, in which case nothing from the event is passed to the target).
            </para>
             </li> <li> 
            <para>
            If <b>Input</b> is specified in the form of valid JSON, then the matched event is
            overridden with this constant.
            </para>
             </li> <li> 
            <para>
            If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>),
            then only the part of the event specified in the path is passed to the target (for
            example, only the detail part of the event is passed).
            </para>
             </li> <li> 
            <para>
            If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are
            extracted from the event and used as values in a template that you specify as the
            input to the target.
            </para>
             </li> </ul> 
            <para>
            When you specify <code>Input</code>, <code>InputPath</code>, or <code>InputTransformer</code>,
            you must use JSON dot notation, not bracket notation.
            </para>
             
            <para>
            When you add targets to a rule and the associated rule triggers soon after, new or
            updated targets might not be immediately invoked. Please allow a short period of time
            for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutTargets service method.</param>
            
            <returns>The response from the PutTargets service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.LimitExceededException">
            You tried to create more rules or add more targets to a rule than is allowed.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutTargets">REST API Reference for PutTargets Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.PutTargetsAsync(Amazon.CloudWatchEvents.Model.PutTargetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutTargets operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutTargets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutTargets">REST API Reference for PutTargets Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.RemoveTargets(Amazon.CloudWatchEvents.Model.RemoveTargetsRequest)">
            <summary>
            Removes the specified targets from the specified rule. When the rule is triggered,
            those targets are no longer be invoked.
            
             
            <para>
            When you remove a target, when the associated rule triggers, removed targets might
            continue to be invoked. Please allow a short period of time for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTargets service method.</param>
            
            <returns>The response from the RemoveTargets service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/RemoveTargets">REST API Reference for RemoveTargets Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.RemoveTargetsAsync(Amazon.CloudWatchEvents.Model.RemoveTargetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveTargets operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveTargets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/RemoveTargets">REST API Reference for RemoveTargets Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.TestEventPattern(Amazon.CloudWatchEvents.Model.TestEventPatternRequest)">
            <summary>
            Tests whether the specified event pattern matches the provided event.
            
             
            <para>
            Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs).
            However, CloudWatch Events uses an exact match in event patterns and rules. Be sure
            to use the correct ARN characters when creating event patterns so that they match
            the ARN syntax in the event you want to match.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestEventPattern service method.</param>
            
            <returns>The response from the TestEventPattern service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/TestEventPattern">REST API Reference for TestEventPattern Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.AmazonCloudWatchEventsClient.TestEventPatternAsync(Amazon.CloudWatchEvents.Model.TestEventPatternRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TestEventPattern operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TestEventPattern operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/TestEventPattern">REST API Reference for TestEventPattern Operation</seealso>
        </member>
        <member name="T:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents">
             <summary>
             Interface for accessing CloudWatchEvents
            
             Amazon CloudWatch Events helps you to respond to state changes in your AWS resources.
             When your resources change state, they automatically send events into an event stream.
             You can create rules that match selected events in the stream and route them to targets
             to take action. You can also use rules to take action on a pre-determined schedule.
             For example, you can configure rules to:
             
              <ul> <li> 
             <para>
             Automatically invoke an AWS Lambda function to update DNS entries when an event notifies
             you that Amazon EC2 instance enters the running state.
             </para>
              </li> <li> 
             <para>
             Direct specific API records from CloudTrail to an Amazon Kinesis stream for detailed
             analysis of potential security or availability risks.
             </para>
              </li> <li> 
             <para>
             Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.
             </para>
              </li> </ul> 
             <para>
             For more information about the features of Amazon CloudWatch Events, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events">Amazon
             CloudWatch Events User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.DeleteRule(Amazon.CloudWatchEvents.Model.DeleteRuleRequest)">
            <summary>
            Deletes the specified rule.
            
             
            <para>
            You must remove all targets from a rule using <a>RemoveTargets</a> before you can
            delete the rule.
            </para>
             
            <para>
            When you delete a rule, incoming events might continue to match to the deleted rule.
            Please allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRule service method.</param>
            
            <returns>The response from the DeleteRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DeleteRule">REST API Reference for DeleteRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.DeleteRuleAsync(Amazon.CloudWatchEvents.Model.DeleteRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DeleteRule">REST API Reference for DeleteRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.DescribeRule(Amazon.CloudWatchEvents.Model.DescribeRuleRequest)">
            <summary>
            Describes the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRule service method.</param>
            
            <returns>The response from the DescribeRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DescribeRule">REST API Reference for DescribeRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.DescribeRuleAsync(Amazon.CloudWatchEvents.Model.DescribeRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DescribeRule">REST API Reference for DescribeRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.DisableRule(Amazon.CloudWatchEvents.Model.DisableRuleRequest)">
            <summary>
            Disables the specified rule. A disabled rule won't match any events, and won't self-trigger
            if it has a schedule expression.
            
             
            <para>
            When you disable a rule, incoming events might continue to match to the disabled rule.
            Please allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableRule service method.</param>
            
            <returns>The response from the DisableRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DisableRule">REST API Reference for DisableRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.DisableRuleAsync(Amazon.CloudWatchEvents.Model.DisableRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/DisableRule">REST API Reference for DisableRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.EnableRule(Amazon.CloudWatchEvents.Model.EnableRuleRequest)">
            <summary>
            Enables the specified rule. If the rule does not exist, the operation fails.
            
             
            <para>
            When you enable a rule, incoming events might not immediately start matching to a
            newly enabled rule. Please allow a short period of time for changes to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableRule service method.</param>
            
            <returns>The response from the EnableRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/EnableRule">REST API Reference for EnableRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.EnableRuleAsync(Amazon.CloudWatchEvents.Model.EnableRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/EnableRule">REST API Reference for EnableRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.ListRuleNamesByTarget(Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetRequest)">
            <summary>
            Lists the rules for the specified target. You can see which of the rules in Amazon
            CloudWatch Events can invoke a specific target in your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRuleNamesByTarget service method.</param>
            
            <returns>The response from the ListRuleNamesByTarget service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRuleNamesByTarget">REST API Reference for ListRuleNamesByTarget Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.ListRuleNamesByTargetAsync(Amazon.CloudWatchEvents.Model.ListRuleNamesByTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListRuleNamesByTarget operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRuleNamesByTarget operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRuleNamesByTarget">REST API Reference for ListRuleNamesByTarget Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.ListRules">
            <summary>
            Lists your Amazon CloudWatch Events rules. You can either list all the rules or you
            can provide a prefix to match to the rule names.
            </summary>
            
            <returns>The response from the ListRules service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.ListRules(Amazon.CloudWatchEvents.Model.ListRulesRequest)">
            <summary>
            Lists your Amazon CloudWatch Events rules. You can either list all the rules or you
            can provide a prefix to match to the rule names.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRules service method.</param>
            
            <returns>The response from the ListRules service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.ListRulesAsync(System.Threading.CancellationToken)">
            <summary>
            Lists your Amazon CloudWatch Events rules. You can either list all the rules or you
            can provide a prefix to match to the rule names.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRules service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.ListRulesAsync(Amazon.CloudWatchEvents.Model.ListRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListRules operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRules operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListRules">REST API Reference for ListRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.ListTargetsByRule(Amazon.CloudWatchEvents.Model.ListTargetsByRuleRequest)">
            <summary>
            Lists the targets assigned to the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTargetsByRule service method.</param>
            
            <returns>The response from the ListTargetsByRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListTargetsByRule">REST API Reference for ListTargetsByRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.ListTargetsByRuleAsync(Amazon.CloudWatchEvents.Model.ListTargetsByRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTargetsByRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTargetsByRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/ListTargetsByRule">REST API Reference for ListTargetsByRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.PutEvents(Amazon.CloudWatchEvents.Model.PutEventsRequest)">
            <summary>
            Sends custom events to Amazon CloudWatch Events so that they can be matched to rules.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutEvents service method.</param>
            
            <returns>The response from the PutEvents service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutEvents">REST API Reference for PutEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.PutEventsAsync(Amazon.CloudWatchEvents.Model.PutEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutEvents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutEvents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutEvents">REST API Reference for PutEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.PutRule(Amazon.CloudWatchEvents.Model.PutRuleRequest)">
            <summary>
            Creates or updates the specified rule. Rules are enabled by default, or based on value
            of the state. You can disable a rule using <a>DisableRule</a>.
            
             
            <para>
            When you create or update a rule, incoming events might not immediately start matching
            to new or updated rules. Please allow a short period of time for changes to take effect.
            </para>
             
            <para>
            A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns
            are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger
            based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression,
            in which case the rule triggers on matching events as well as on a schedule.
            </para>
             
            <para>
            Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs).
            However, CloudWatch Events uses an exact match in event patterns and rules. Be sure
            to use the correct ARN characters when creating event patterns so that they match
            the ARN syntax in the event you want to match.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRule service method.</param>
            
            <returns>The response from the PutRule service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.LimitExceededException">
            You tried to create more rules or add more targets to a rule than is allowed.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutRule">REST API Reference for PutRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.PutRuleAsync(Amazon.CloudWatchEvents.Model.PutRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRule operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutRule">REST API Reference for PutRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.PutTargets(Amazon.CloudWatchEvents.Model.PutTargetsRequest)">
            <summary>
            Adds the specified targets to the specified rule, or updates the targets if they are
            already associated with the rule.
            
             
            <para>
            Targets are the resources that are invoked when a rule is triggered. Example targets
            include EC2 instances, AWS Lambda functions, Amazon Kinesis streams, Amazon ECS tasks,
            AWS Step Functions state machines, and built-in targets. Note that creating rules
            with built-in targets is supported only in the AWS Management Console.
            </para>
             
            <para>
            For some target types, <code>PutTargets</code> provides target-specific parameters.
            If the target is an Amazon Kinesis stream, you can optionally specify which shard
            the event goes to by using the <code>KinesisParameters</code> argument. To invoke
            a command on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code>
            field.
            </para>
             
            <para>
            To be able to make API calls against the resources that you own, Amazon CloudWatch
            Events needs the appropriate permissions. For AWS Lambda and Amazon SNS resources,
            CloudWatch Events relies on resource-based policies. For EC2 instances, Amazon Kinesis
            streams, and AWS Step Functions state machines, CloudWatch Events relies on IAM roles
            that you specify in the <code>RoleARN</code> argument in <code>PutTarget</code>. For
            more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/auth-and-access-control-cwe.html">Authentication
            and Access Control</a> in the <i>Amazon CloudWatch Events User Guide</i>.
            </para>
             
            <para>
             <b>Input</b>, <b>InputPath</b> and <b>InputTransformer</b> are mutually exclusive
            and optional parameters of a target. When a rule is triggered due to a matched event:
            </para>
             <ul> <li> 
            <para>
            If none of the following arguments are specified for a target, then the entire event
            is passed to the target in JSON form (unless the target is Amazon EC2 Run Command
            or Amazon ECS task, in which case nothing from the event is passed to the target).
            </para>
             </li> <li> 
            <para>
            If <b>Input</b> is specified in the form of valid JSON, then the matched event is
            overridden with this constant.
            </para>
             </li> <li> 
            <para>
            If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>),
            then only the part of the event specified in the path is passed to the target (for
            example, only the detail part of the event is passed).
            </para>
             </li> <li> 
            <para>
            If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are
            extracted from the event and used as values in a template that you specify as the
            input to the target.
            </para>
             </li> </ul> 
            <para>
            When you specify <code>Input</code>, <code>InputPath</code>, or <code>InputTransformer</code>,
            you must use JSON dot notation, not bracket notation.
            </para>
             
            <para>
            When you add targets to a rule and the associated rule triggers soon after, new or
            updated targets might not be immediately invoked. Please allow a short period of time
            for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutTargets service method.</param>
            
            <returns>The response from the PutTargets service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.LimitExceededException">
            You tried to create more rules or add more targets to a rule than is allowed.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutTargets">REST API Reference for PutTargets Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.PutTargetsAsync(Amazon.CloudWatchEvents.Model.PutTargetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutTargets operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutTargets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/PutTargets">REST API Reference for PutTargets Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.RemoveTargets(Amazon.CloudWatchEvents.Model.RemoveTargetsRequest)">
            <summary>
            Removes the specified targets from the specified rule. When the rule is triggered,
            those targets are no longer be invoked.
            
             
            <para>
            When you remove a target, when the associated rule triggers, removed targets might
            continue to be invoked. Please allow a short period of time for changes to take effect.
            </para>
             
            <para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTargets service method.</param>
            
            <returns>The response from the RemoveTargets service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ConcurrentModificationException">
            There is concurrent modification on a rule or target.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.ResourceNotFoundException">
            The rule does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/RemoveTargets">REST API Reference for RemoveTargets Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.RemoveTargetsAsync(Amazon.CloudWatchEvents.Model.RemoveTargetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveTargets operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveTargets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/RemoveTargets">REST API Reference for RemoveTargets Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.TestEventPattern(Amazon.CloudWatchEvents.Model.TestEventPatternRequest)">
            <summary>
            Tests whether the specified event pattern matches the provided event.
            
             
            <para>
            Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs).
            However, CloudWatch Events uses an exact match in event patterns and rules. Be sure
            to use the correct ARN characters when creating event patterns so that they match
            the ARN syntax in the event you want to match.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestEventPattern service method.</param>
            
            <returns>The response from the TestEventPattern service method, as returned by CloudWatchEvents.</returns>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InternalException">
            This exception occurs due to unexpected causes.
            </exception>
            <exception cref="T:Amazon.CloudWatchEvents.Model.InvalidEventPatternException">
            The event pattern is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/TestEventPattern">REST API Reference for TestEventPattern Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchEvents.IAmazonCloudWatchEvents.TestEventPatternAsync(Amazon.CloudWatchEvents.Model.TestEventPatternRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TestEventPattern operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TestEventPattern operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/TestEventPattern">REST API Reference for TestEventPattern Operation</seealso>
        </member>
    </members>
</doc>
