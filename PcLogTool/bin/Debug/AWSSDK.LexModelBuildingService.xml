<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LexModelBuildingService</name>
    </assembly>
    <members>
        <member name="T:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig">
            <summary>
            Configuration for accessing Amazon LexModelBuildingService service
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException">
            <summary>
             Common exception for the LexModelBuildingService service.
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLexModelBuildingServiceException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLexModelBuildingServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLexModelBuildingServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLexModelBuildingServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLexModelBuildingServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonLexModelBuildingServiceException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ChannelType">
            <summary>
            Constants used for properties of type ChannelType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ChannelType.Facebook">
            <summary>
            Constant Facebook for ChannelType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ChannelType.Slack">
            <summary>
            Constant Slack for ChannelType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ChannelType.TwilioSms">
            <summary>
            Constant TwilioSms for ChannelType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ChannelType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ChannelType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ChannelType.op_Implicit(System.String)~Amazon.LexModelBuildingService.ChannelType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ContentType">
            <summary>
            Constants used for properties of type ContentType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ContentType.PlainText">
            <summary>
            Constant PlainText for ContentType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ContentType.SSML">
            <summary>
            Constant SSML for ContentType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ContentType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ContentType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ContentType.op_Implicit(System.String)~Amazon.LexModelBuildingService.ContentType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.FulfillmentActivityType">
            <summary>
            Constants used for properties of type FulfillmentActivityType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.FulfillmentActivityType.CodeHook">
            <summary>
            Constant CodeHook for FulfillmentActivityType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.FulfillmentActivityType.ReturnIntent">
            <summary>
            Constant ReturnIntent for FulfillmentActivityType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.FulfillmentActivityType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.FulfillmentActivityType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.FulfillmentActivityType.op_Implicit(System.String)~Amazon.LexModelBuildingService.FulfillmentActivityType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Locale">
            <summary>
            Constants used for properties of type Locale.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Locale.EnUS">
            <summary>
            Constant EnUS for Locale
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Locale.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Locale.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Locale.op_Implicit(System.String)~Amazon.LexModelBuildingService.Locale">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ProcessBehavior">
            <summary>
            Constants used for properties of type ProcessBehavior.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ProcessBehavior.BUILD">
            <summary>
            Constant BUILD for ProcessBehavior
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ProcessBehavior.SAVE">
            <summary>
            Constant SAVE for ProcessBehavior
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ProcessBehavior.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ProcessBehavior.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ProcessBehavior.op_Implicit(System.String)~Amazon.LexModelBuildingService.ProcessBehavior">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.ReferenceType">
            <summary>
            Constants used for properties of type ReferenceType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ReferenceType.Bot">
            <summary>
            Constant Bot for ReferenceType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ReferenceType.BotAlias">
            <summary>
            Constant BotAlias for ReferenceType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ReferenceType.BotChannel">
            <summary>
            Constant BotChannel for ReferenceType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.ReferenceType.Intent">
            <summary>
            Constant Intent for ReferenceType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ReferenceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ReferenceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.ReferenceType.op_Implicit(System.String)~Amazon.LexModelBuildingService.ReferenceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.SlotConstraint">
            <summary>
            Constants used for properties of type SlotConstraint.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.SlotConstraint.Optional">
            <summary>
            Constant Optional for SlotConstraint
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.SlotConstraint.Required">
            <summary>
            Constant Required for SlotConstraint
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SlotConstraint.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SlotConstraint.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.SlotConstraint.op_Implicit(System.String)~Amazon.LexModelBuildingService.SlotConstraint">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Status">
            <summary>
            Constants used for properties of type Status.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Status.BUILDING">
            <summary>
            Constant BUILDING for Status
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Status.FAILED">
            <summary>
            Constant FAILED for Status
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Status.NOT_BUILT">
            <summary>
            Constant NOT_BUILT for Status
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Status.READY">
            <summary>
            Constant READY for Status
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Status.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Status.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Status.op_Implicit(System.String)~Amazon.LexModelBuildingService.Status">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.StatusType">
            <summary>
            Constants used for properties of type StatusType.
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.StatusType.Detected">
            <summary>
            Constant Detected for StatusType
            </summary>
        </member>
        <member name="F:Amazon.LexModelBuildingService.StatusType.Missed">
            <summary>
            Constant Missed for StatusType
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.StatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.StatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.StatusType.op_Implicit(System.String)~Amazon.LexModelBuildingService.StatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceRequest">
            <summary>
            Base class for LexModelBuildingService operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            <summary>
             LexModelBuildingService exception
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.String)">
            <summary>
            Constructs a new BadRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.BadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BadRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BotAliasMetadata">
            <summary>
            Provides information about a bot alias.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot to which the alias points.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.BotVersion">
            <summary>
            Gets and sets the property BotVersion. 
            <para>
            The version of the Amazon Lex bot to which the alias points.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the bot alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot alias was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot alias was updated. When you create a resource, the creation
            date and last updated date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotAliasMetadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot alias.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BotChannelAssociation">
            <summary>
            Represents an association between an Amazon Lex bot and an external messaging platform.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.BotAlias">
            <summary>
            Gets and sets the property BotAlias. 
            <para>
            An alias pointing to the specific version of the Amazon Lex bot to which this association
            is being made. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.BotConfiguration">
            <summary>
            Gets and sets the property BotConfiguration. 
            <para>
            Provides information necessary to communicate with the messaging platform. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the Amazon Lex bot to which this association is being made. 
            </para>
             <note> 
            <para>
            Currently, Amazon Lex supports associations with Facebook and Slack, and Twilio.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the association between the Amazon Lex bot and the channel was created.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A text description of the association you are creating. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the association between the bot and the channel. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotChannelAssociation.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Specifies the type of association by indicating the type of channel being established
            between the Amazon Lex bot and the external messaging platform.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BotMetadata">
            <summary>
            Provides information about a bot. .
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot was updated. When you create a bot, the creation date and last
            updated date are the same. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BotMetadata.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot. For a new bot, the version is always <code>$LATEST</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BuiltinIntentMetadata">
            <summary>
            Provides metadata for a built-in intent.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BuiltinIntentMetadata.Signature">
            <summary>
            Gets and sets the property Signature. 
            <para>
            A unique identifier for the built-in intent. To find the signature for an intent,
            see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BuiltinIntentMetadata.SupportedLocales">
            <summary>
            Gets and sets the property SupportedLocales. 
            <para>
            A list of identifiers for the locales that the intent supports.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BuiltinIntentSlot">
            <summary>
            Provides information about a slot used in a built-in intent.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BuiltinIntentSlot.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A list of the slots defined for the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.BuiltinSlotTypeMetadata">
            <summary>
            Provides information about a built in slot type.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BuiltinSlotTypeMetadata.Signature">
            <summary>
            Gets and sets the property Signature. 
            <para>
            A unique identifier for the built-in slot type. To find the signature for a slot type,
            see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.BuiltinSlotTypeMetadata.SupportedLocales">
            <summary>
            Gets and sets the property SupportedLocales. 
            <para>
            A list of target locales for the slot. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CodeHook">
            <summary>
            Specifies a Lambda function that verifies requests to a bot or fulfills the user's
            request to a bot..
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CodeHook.MessageVersion">
            <summary>
            Gets and sets the property MessageVersion. 
            <para>
            The version of the request-response that you want Amazon Lex to use to invoke your
            Lambda function. For more information, see <a>using-lambda</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CodeHook.Uri">
            <summary>
            Gets and sets the property Uri. 
            <para>
            The Amazon Resource Name (ARN) of the Lambda function.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.ConflictException">
            <summary>
             LexModelBuildingService exception
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConflictException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateBotVersionRequest">
            <summary>
            Container for the parameters to the CreateBotVersion operation.
            Creates a new version of the bot based on the <code>$LATEST</code> version. If the
            <code>$LATEST</code> version of this resource hasn't changed since you created the
            last version, Amazon Lex doesn't create a new version. It returns the last created
            version.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the bot. You can't update
            the numbered versions that you create with the <code>CreateBotVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
             This operation requires permission for the <code>lex:CreateBotVersion</code> action.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Identifies a specific revision of the <code>$LATEST</code> version of the bot. If
            you specify a checksum and the <code>$LATEST</code> version of the bot has a different
            checksum, a <code>PreconditionFailedException</code> exception is returned and Amazon
            Lex doesn't publish a new version. If you don't specify a checksum, Amazon Lex publishes
            the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot that you want to create a new version of. The name is case sensitive.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse">
            <summary>
            This is the response object from the CreateBotVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.AbortStatement">
            <summary>
            Gets and sets the property AbortStatement. 
            <para>
            The message that Amazon Lex uses to abort a conversation. For more information, see
            .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum identifying the version of the bot that was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.ChildDirected">
            <summary>
            Gets and sets the property ChildDirected. 
            <para>
            For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
            specify whether your use of Amazon Lex is related to a website, program, or other
            application that is directed or targeted, in whole or in part, to children under age
            13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
            <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By
            specifying <code>true</code> in the <code>childDirected</code> field, you confirm
            that your use of Amazon Lex <b>is</b> related to a website, program, or other application
            that is directed or targeted, in whole or in part, to children under age 13 and subject
            to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field,
            you confirm that your use of Amazon Lex <b>is not</b> related to a website, program,
            or other application that is directed or targeted, in whole or in part, to children
            under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code>
            field that does not accurately reflect whether your use of Amazon Lex is related to
            a website, program, or other application that is directed or targeted, in whole or
            in part, to children under age 13 and subject to COPPA.
            </para>
             
            <para>
            If your use of Amazon Lex relates to a website, program, or other application that
            is directed in whole or in part, to children under age 13, you must obtain any required
            verifiable parental consent under COPPA. For information regarding the use of Amazon
            Lex in connection with websites, programs, or other applications that are directed
            or targeted, in whole or in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon
            Lex FAQ.</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.ClarificationPrompt">
            <summary>
            Gets and sets the property ClarificationPrompt. 
            <para>
            The message that Amazon Lex uses when it doesn't understand the user's request. For
            more information, see . 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date when the bot version was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that
            it failed to build the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.IdleSessionTTLInSeconds">
            <summary>
            Gets and sets the property IdleSessionTTLInSeconds. 
            <para>
            The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
            For more information, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>Intent</code> objects. For more information, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date when the <code>$LATEST</code> version of this bot was updated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
             Specifies the target locale for the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             When you send a request to create or update a bot, Amazon Lex sets the <code>status</code>
            response element to <code>BUILDING</code>. After Amazon Lex builds the bot, it sets
            <code>status</code> to <code>READY</code>. If Amazon Lex can't build the bot, it sets
            <code>status</code> to <code>FAILED</code>. Amazon Lex returns the reason for the
            failure in the <code>failureReason</code> response element. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateBotVersionResponse.VoiceId">
            <summary>
            Gets and sets the property VoiceId. 
            <para>
            The Amazon Parrot voice ID that Amazon Lex uses for voice interactions with the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest">
            <summary>
            Container for the parameters to the CreateIntentVersion operation.
            Creates a new version of an intent based on the <code>$LATEST</code> version of the
            intent. If the <code>$LATEST</code> version of this intent hasn't changed since you
            last updated it, Amazon Lex doesn't create a new version. It returns the last version
            you created.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the intent. You can't update
            the numbered versions that you create with the <code>CreateIntentVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create a version of an intent, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>lex:CreateIntentVersion</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the <code>$LATEST</code> version of the intent that should be used to
            create the new version. If you specify a checksum and the <code>$LATEST</code> version
            of the intent has a different checksum, Amazon Lex returns a <code>PreconditionFailedException</code>
            exception and doesn't publish a new version. If you don't specify a checksum, Amazon
            Lex publishes the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent that you want to create a new version of. The name is case
            sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse">
            <summary>
            This is the response object from the CreateIntentVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the intent version created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.ConclusionStatement">
            <summary>
            Gets and sets the property ConclusionStatement. 
            <para>
            After the Lambda function specified in the <code>fulfillmentActivity</code> field
            fulfills the intent, Amazon Lex conveys this statement to the user. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.ConfirmationPrompt">
            <summary>
            Gets and sets the property ConfirmationPrompt. 
            <para>
            If defined, the prompt that Amazon Lex uses to confirm the user's intent before fulfilling
            it. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the intent was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.DialogCodeHook">
            <summary>
            Gets and sets the property DialogCodeHook. 
            <para>
            If defined, Amazon Lex invokes this Lambda function for each user input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.FollowUpPrompt">
            <summary>
            Gets and sets the property FollowUpPrompt. 
            <para>
            If defined, Amazon Lex uses this prompt to solicit additional user activity after
            the intent is fulfilled. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.FulfillmentActivity">
            <summary>
            Gets and sets the property FulfillmentActivity. 
            <para>
             Describes how the intent is fulfilled. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the intent was updated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.ParentIntentSignature">
            <summary>
            Gets and sets the property ParentIntentSignature. 
            <para>
            A unique identifier for a built-in intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.RejectionStatement">
            <summary>
            Gets and sets the property RejectionStatement. 
            <para>
            If the user answers "no" to the question defined in <code>confirmationPrompt</code>,
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.SampleUtterances">
            <summary>
            Gets and sets the property SampleUtterances. 
            <para>
            An array of sample utterances configured for the intent. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            An array of slot types that defines the information required to fulfill the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateIntentVersionResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version number assigned to the new version of the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest">
            <summary>
            Container for the parameters to the CreateSlotTypeVersion operation.
            Creates a new version of a slot type based on the <code>$LATEST</code> version of
            the specified slot type. If the <code>$LATEST</code> version of this resource has
            not changed since the last version that you created, Amazon Lex doesn't create a new
            version. It returns the last version that you created. 
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of a slot type. You can't update
            the numbered versions that you create with the <code>CreateSlotTypeVersion</code>
            operation.
            </para>
             </note> 
            <para>
            When you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:CreateSlotTypeVersion</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum for the <code>$LATEST</code> version of the slot type that you want to publish.
            If you specify a checksum and the <code>$LATEST</code> version of the slot type has
            a different checksum, Amazon Lex returns a <code>PreconditionFailedException</code>
            exception and doesn't publish the new version. If you don't specify a checksum, Amazon
            Lex publishes the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type that you want to create a new version for. The name is case
            sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse">
            <summary>
            This is the response object from the CreateSlotTypeVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the <code>$LATEST</code> version of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the slot type was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.EnumerationValues">
            <summary>
            Gets and sets the property EnumerationValues. 
            <para>
            A list of <code>EnumerationValue</code> objects that defines the values that the slot
            type can take.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the slot type was updated. When you create a resource, the creation
            date and last update date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version assigned to the new slot type version. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest">
            <summary>
            Container for the parameters to the DeleteBotAlias operation.
            Deletes an alias for the specified bot. 
            
             
            <para>
            You can't delete an alias that is used in the association between a bot and a messaging
            channel. If an alias is used in a channel association, the <code>DeleteBot</code>
            operation returns a <code>ResourceInUseException</code> exception that includes a
            reference to the channel association that refers to the bot. You can remove the reference
            to the alias by deleting the channel association. If you get the same exception again,
            delete the referring association until the <code>DeleteBotAlias</code> operation is
            successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot that the alias points to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the alias to delete. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotAliasResponse">
            <summary>
            This is the response object from the DeleteBotAlias operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest">
            <summary>
            Container for the parameters to the DeleteBotChannelAssociation operation.
            Deletes the association between an Amazon Lex bot and a messaging platform.
            
             
            <para>
            This operation requires permission for the <code>lex:DeleteBotChannelAssociation</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest.BotAlias">
            <summary>
            Gets and sets the property BotAlias. 
            <para>
            An alias that points to the specific version of the Amazon Lex bot to which this association
            is being made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the Amazon Lex bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the association. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationResponse">
            <summary>
            This is the response object from the DeleteBotChannelAssociation operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotRequest">
            <summary>
            Container for the parameters to the DeleteBot operation.
            Deletes all versions of the bot, including the <code>$LATEST</code> version. To delete
            a specific version of the bot, use the operation.
            
             
            <para>
            If a bot has an alias, you can't delete it. Instead, the <code>DeleteBot</code> operation
            returns a <code>ResourceInUseException</code> exception that includes a reference
            to the alias that refers to the bot. To remove the reference to the bot, delete the
            alias. If you get the same exception again, delete the referring alias until the <code>DeleteBot</code>
            operation is successful.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBot</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotResponse">
            <summary>
            This is the response object from the DeleteBot operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest">
            <summary>
            Container for the parameters to the DeleteBotVersion operation.
            Deletes a specific version of a bot. To delete all versions of a bot, use the operation.
            
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBotVersion</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot to delete. You cannot delete the <code>$LATEST</code> version
            of the bot. To delete the <code>$LATEST</code> version, use the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteBotVersionResponse">
            <summary>
            This is the response object from the DeleteBotVersion operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteIntentRequest">
            <summary>
            Container for the parameters to the DeleteIntent operation.
            Deletes all versions of the intent, including the <code>$LATEST</code> version. To
            delete a specific version of the intent, use the operation.
            
             
            <para>
             You can delete a version of an intent only if it is not referenced. To delete an
            intent that is referred to in one or more bots (see <a>how-it-works</a>), you must
            remove those references first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, it provides an example
            reference that shows where the intent is referenced. To remove the reference to the
            intent, either update the bot or delete it. If you get the same exception when you
            attempt to delete the intent again, repeat until the intent has no references and
            the call to <code>DeleteIntent</code> is successful. 
            </para>
             </note> 
            <para>
             This operation requires permission for the <code>lex:DeleteIntent</code> action.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteIntentRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteIntentResponse">
            <summary>
            This is the response object from the DeleteIntent operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest">
            <summary>
            Container for the parameters to the DeleteIntentVersion operation.
            Deletes a specific version of an intent. To delete all versions of a intent, use the
            operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteIntentVersion</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the intent to delete. You cannot delete the <code>$LATEST</code> version
            of the intent. To delete the <code>$LATEST</code> version, use the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteIntentVersionResponse">
            <summary>
            This is the response object from the DeleteIntentVersion operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest">
            <summary>
            Container for the parameters to the DeleteSlotType operation.
            Deletes all versions of the slot type, including the <code>$LATEST</code> version.
            To delete a specific version of the slot type, use the operation.
            
             
            <para>
             You can delete a version of a slot type only if it is not referenced. To delete a
            slot type that is referred to in one or more intents, you must remove those references
            first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, the exception provides
            an example reference that shows the intent where the slot type is referenced. To remove
            the reference to the slot type, either update the intent or delete it. If you get
            the same exception when you attempt to delete the slot type again, repeat until the
            slot type has no references and the <code>DeleteSlotType</code> call is successful.
            
            </para>
             </note> 
            <para>
            This operation requires permission for the <code>lex:DeleteSlotType</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteSlotTypeResponse">
            <summary>
            This is the response object from the DeleteSlotType operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest">
            <summary>
            Container for the parameters to the DeleteSlotTypeVersion operation.
            Deletes a specific version of a slot type. To delete all versions of a slot type,
            use the operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteSlotTypeVersion</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the slot type to delete. You cannot delete the <code>$LATEST</code>
            version of the slot type. To delete the <code>$LATEST</code> version, use the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionResponse">
            <summary>
            This is the response object from the DeleteSlotTypeVersion operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest">
            <summary>
            Container for the parameters to the DeleteUtterances operation.
            Deletes stored utterances.
            
             
            <para>
            Amazon Lex stores the utterances that users send to your bot unless the <code>childDirected</code>
            field in the bot is set to <code>true</code>. Utterances are stored for 15 days for
            use with the operation, and then stored indefinately for use in improving the ability
            of your bot to respond to user input.
            </para>
             
            <para>
            Use the <code>DeleteStoredUtterances</code> operation to manually delete stored utterances
            for a specific user.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteUtterances</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot that stored the utterances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
             The unique identifier for the user that made the utterances. This is the user ID
            that was sent in the or operation request that contained the utterance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.DeleteUtterancesResponse">
            <summary>
            This is the response object from the DeleteUtterances operation.
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.EnumerationValue">
            <summary>
            Each slot type can have a set of values. Each enumeration value represents a value
            the slot type can take. 
            
             
            <para>
            For example, a pizza ordering bot could have a slot type that specifies the type of
            crust that the pizza should have. The slot type could include the values 
            </para>
             <ul> <li> 
            <para>
            thick
            </para>
             </li> <li> 
            <para>
            thin
            </para>
             </li> <li> 
            <para>
            stuffed
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.EnumerationValue.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the slot type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.FollowUpPrompt">
            <summary>
            After an intent is fulfilled, you might prompt the user for additional activity. For
            example, after the <code>OrderPizza</code> intent is fulfilled (the pizza order is
            placed with a pizzeria), you might prompt the user to find out whether the user wants
            to order drinks (another intent you defined in your bot).
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.FollowUpPrompt.Prompt">
            <summary>
            Gets and sets the property Prompt. 
            <para>
            Obtains information from the user. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.FollowUpPrompt.RejectionStatement">
            <summary>
            Gets and sets the property RejectionStatement. 
            <para>
            If the user answers "no" to the question defined in <code>confirmationPrompt</code>,
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.FulfillmentActivity">
            <summary>
            Describes how the intent is fulfilled after the user provides all of the information
            required for the intent. You can provide a Lambda function to process the intent,
            or you can return the intent information to the client application. We recommend that
            you use a Lambda function so that the relevant logic lives in the Cloud and limit
            the client-side code primarily to presentation. If you need to update the logic, you
            only update the Lambda function; you don't need to upgrade your client application.
            
            
             
            <para>
            Consider the following examples:
            </para>
             <ul> <li> 
            <para>
            In a pizza ordering application, after the user provides all of the information for
            placing an order, you use a Lambda function to place an order with a pizzeria. 
            </para>
             </li> <li> 
            <para>
            In a gaming application, when a user says "pick up a rock," this information must
            go back to the client application so that it can perform the operation and update
            the graphics. In this case, you want Amazon Lex to return the intent data to the client.
            
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.FulfillmentActivity.CodeHook">
            <summary>
            Gets and sets the property CodeHook. 
            <para>
             A description of the Lambda function that is run to fulfill the intent. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.FulfillmentActivity.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
             How the intent should be fulfilled, either by running a Lambda function or by returning
            the slot data to the client application. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotAliasesRequest">
            <summary>
            Container for the parameters to the GetBotAliases operation.
            Returns a list of aliases for a specified Amazon Lex bot.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAliases</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of aliases to return in the response. The default is 50. . 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesRequest.NameContains">
            <summary>
            Gets and sets the property NameContains. 
            <para>
            Substring to match in bot alias names. An alias will be returned if any part of its
            name matches the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of aliases. If the response to this
            call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of aliases, specify the pagination token in the next request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotAliasesResponse">
            <summary>
            This is the response object from the GetBotAliases operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesResponse.BotAliases">
            <summary>
            Gets and sets the property BotAliases. 
            <para>
            An array of <code>BotAliasMetadata</code> objects, each describing a bot alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching next page of aliases. If the response to this call
            is truncated, Amazon Lex returns a pagination token in the response. To fetch the
            next page of aliases, specify the pagination token in the next request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotAliasRequest">
            <summary>
            Container for the parameters to the GetBotAlias operation.
            Returns information about an Amazon Lex bot alias. For more information about aliases,
            see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAlias</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot alias. The name is case sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotAliasResponse">
            <summary>
            This is the response object from the GetBotAlias operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot that the alias points to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.BotVersion">
            <summary>
            Gets and sets the property BotVersion. 
            <para>
            The version of the bot that the alias points to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the bot alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot alias was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot alias was updated. When you create a resource, the creation
            date and the last updated date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotAliasResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot alias.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest">
            <summary>
            Container for the parameters to the GetBotChannelAssociation operation.
            Returns information about the association between an Amazon Lex bot and a messaging
            platform.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotChannelAssociation</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest.BotAlias">
            <summary>
            Gets and sets the property BotAlias. 
            <para>
            An alias pointing to the specific version of the Amazon Lex bot to which this association
            is being made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the Amazon Lex bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the association between the bot and the channel. The name is case sensitive.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse">
            <summary>
            This is the response object from the GetBotChannelAssociation operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.BotAlias">
            <summary>
            Gets and sets the property BotAlias. 
            <para>
            An alias pointing to the specific version of the Amazon Lex bot to which this association
            is being made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.BotConfiguration">
            <summary>
            Gets and sets the property BotConfiguration. 
            <para>
            Provides information that the messaging platform needs to communicate with the Amazon
            Lex bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the Amazon Lex bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the association between the bot and the channel was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the association between the bot and the channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the association between the bot and the channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationResponse.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the messaging platform.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest">
            <summary>
            Container for the parameters to the GetBotChannelAssociations operation.
            Returns a list of all of the channels associated with the specified bot. 
            
             
            <para>
            The <code>GetBotChannelAssociations</code> operation requires permissions for the
            <code>lex:GetBotChannelAssociations</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest.BotAlias">
            <summary>
            Gets and sets the property BotAlias. 
            <para>
            An alias pointing to the specific version of the Amazon Lex bot to which this association
            is being made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the Amazon Lex bot in the association.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of associations to return in the response. The default is 50. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest.NameContains">
            <summary>
            Gets and sets the property NameContains. 
            <para>
            Substring to match in channel association names. An association will be returned if
            any part of its name matches the substring. For example, "xyz" matches both "xyzabc"
            and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of associations. If the response to
            this call is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of associations, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsResponse">
            <summary>
            This is the response object from the GetBotChannelAssociations operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsResponse.BotChannelAssociations">
            <summary>
            Gets and sets the property BotChannelAssociations. 
            <para>
            An array of objects, one for each association, that provides information about the
            Amazon Lex bot and its association with the channel. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of associations. If the response to
            this call is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of associations, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotRequest">
            <summary>
            Container for the parameters to the GetBot operation.
            Returns metadata information for a specific bot. You must provide the bot name and
            the bot version or alias. 
            
             
            <para>
             The GetBot operation requires permissions for the <code>lex:GetBot</code> action.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotRequest.VersionOrAlias">
            <summary>
            Gets and sets the property VersionOrAlias. 
            <para>
            The version or alias of the bot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotResponse">
            <summary>
            This is the response object from the GetBot operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.AbortStatement">
            <summary>
            Gets and sets the property AbortStatement. 
            <para>
            The message that Amazon Lex returns when the user elects to end the conversation without
            completing it. For more information, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the bot used to identify a specific revision of the bot's <code>$LATEST</code>
            version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.ChildDirected">
            <summary>
            Gets and sets the property ChildDirected. 
            <para>
            For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
            specify whether your use of Amazon Lex is related to a website, program, or other
            application that is directed or targeted, in whole or in part, to children under age
            13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
            <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By
            specifying <code>true</code> in the <code>childDirected</code> field, you confirm
            that your use of Amazon Lex <b>is</b> related to a website, program, or other application
            that is directed or targeted, in whole or in part, to children under age 13 and subject
            to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field,
            you confirm that your use of Amazon Lex <b>is not</b> related to a website, program,
            or other application that is directed or targeted, in whole or in part, to children
            under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code>
            field that does not accurately reflect whether your use of Amazon Lex is related to
            a website, program, or other application that is directed or targeted, in whole or
            in part, to children under age 13 and subject to COPPA.
            </para>
             
            <para>
            If your use of Amazon Lex relates to a website, program, or other application that
            is directed in whole or in part, to children under age 13, you must obtain any required
            verifiable parental consent under COPPA. For information regarding the use of Amazon
            Lex in connection with websites, programs, or other applications that are directed
            or targeted, in whole or in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon
            Lex FAQ.</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.ClarificationPrompt">
            <summary>
            Gets and sets the property ClarificationPrompt. 
            <para>
            The message Amazon Lex uses when it doesn't understand the user's request. For more
            information, see . 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            If <code>status</code> is <code>FAILED</code>, Amazon Lex explains why it failed to
            build the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.IdleSessionTTLInSeconds">
            <summary>
            Gets and sets the property IdleSessionTTLInSeconds. 
            <para>
            The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
            For more information, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>intent</code> objects. For more information, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot was updated. When you create a resource, the creation date and
            last updated date are the same. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
             The target locale for the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the bot. If the bot is ready to run, the status is <code>READY</code>.
            If there was a problem with building the bot, the status is <code>FAILED</code> and
            the <code>failureReason</code> explains why the bot did not build. If the bot was
            saved but not built, the status is <code>NOT BUILT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot. For a new bot, the version is always <code>$LATEST</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotResponse.VoiceId">
            <summary>
            Gets and sets the property VoiceId. 
            <para>
            The Amazon Parrot voice ID that Amazon Lex uses for voice interaction with the user.
            For more information, see .
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotsRequest">
            <summary>
            Container for the parameters to the GetBots operation.
            Returns bot information as follows: 
            
             <ul> <li> 
            <para>
            If you provide the <code>nameContains</code> field, the response includes information
            for the <code>$LATEST</code> version of all bots whose name contains the specified
            string.
            </para>
             </li> <li> 
            <para>
            If you don't specify the <code>nameContains</code> field, the operation returns information
            about the <code>$LATEST</code> version of all of your bots.
            </para>
             </li> </ul> 
            <para>
            This operation requires permission for the <code>lex:GetBots</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of bots to return in the response that the request will return.
            The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsRequest.NameContains">
            <summary>
            Gets and sets the property NameContains. 
            <para>
            Substring to match in bot names. A bot will be returned if any part of its name matches
            the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of bots. If the response to this call
            is truncated, Amazon Lex returns a pagination token in the response. To fetch the
            next page of bots, specify the pagination token in the next request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotsResponse">
            <summary>
            This is the response object from the GetBots operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsResponse.Bots">
            <summary>
            Gets and sets the property Bots. 
            <para>
            An array of <code>botMetadata</code> objects, with one entry for each bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, it includes a pagination token that you can specify
            in your next request to fetch the next page of bots. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotVersionsRequest">
            <summary>
            Container for the parameters to the GetBotVersions operation.
            Gets information about all of the versions of a bot.
            
             
            <para>
            The <code>GetBotVersions</code> operation returns a <code>BotMetadata</code> object
            for each version of a bot. For example, if a bot has three numbered versions, the
            <code>GetBotVersions</code> operation returns four <code>BotMetadata</code> objects
            in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetBotVersions</code> operation always returns at least one version, the
            <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetBotVersions</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of bot versions to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot for which versions should be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of bot versions. If the response to
            this call is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBotVersionsResponse">
            <summary>
            This is the response object from the GetBotVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsResponse.Bots">
            <summary>
            Gets and sets the property Bots. 
            <para>
            An array of <code>BotMetadata</code> objects, one for each numbered version of the
            bot plus one for the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBotVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of bot versions. If the response to
            this call is truncated, Amazon Lex returns a pagination token in the response. To
            fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest">
            <summary>
            Container for the parameters to the GetBuiltinIntent operation.
            Returns information about a built-in intent.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntent</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest.Signature">
            <summary>
            Gets and sets the property Signature. 
            <para>
            The unique identifier for a built-in intent. To find the signature for an intent,
            see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinIntentResponse">
            <summary>
            This is the response object from the GetBuiltinIntent operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentResponse.Signature">
            <summary>
            Gets and sets the property Signature. 
            <para>
            The unique identifier for a built-in intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentResponse.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            An array of <code>BuiltinIntentSlot</code> objects, one entry for each slot type in
            the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentResponse.SupportedLocales">
            <summary>
            Gets and sets the property SupportedLocales. 
            <para>
            A list of locales that the intent supports.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest">
            <summary>
            Container for the parameters to the GetBuiltinIntents operation.
            Gets a list of built-in intents that meet the specified criteria.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntents</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
            A list of locales that the intent supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of intents to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of intents. If this API call is truncated,
            Amazon Lex returns a pagination token in the response. To fetch the next page of intents,
            use the pagination token in the next request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest.SignatureContains">
            <summary>
            Gets and sets the property SignatureContains. 
            <para>
            Substring to match in built-in intent signatures. An intent will be returned if any
            part of its signature matches the substring. For example, "xyz" matches both "xyzabc"
            and "abcxyz." To find the signature for an intent, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsResponse">
            <summary>
            This is the response object from the GetBuiltinIntents operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>builtinIntentMetadata</code> objects, one for each intent in the
            response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinIntentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of intents. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of intents, specify the pagination token in the next request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest">
            <summary>
            Container for the parameters to the GetBuiltinSlotTypes operation.
            Gets a list of built-in slot types that meet the specified criteria.
            
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltInSlotTypes</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
            A list of locales that the slot type supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of slot types to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of slot types. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of slot types, specify the pagination token in the next request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest.SignatureContains">
            <summary>
            Gets and sets the property SignatureContains. 
            <para>
            Substring to match in built-in slot type signatures. A slot type will be returned
            if any part of its signature matches the substring. For example, "xyz" matches both
            "xyzabc" and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesResponse">
            <summary>
            This is the response object from the GetBuiltinSlotTypes operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, the response includes a pagination token that you can
            use in your next request to fetch the next page of slot types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesResponse.SlotTypes">
            <summary>
            Gets and sets the property SlotTypes. 
            <para>
            An array of <code>BuiltInSlotTypeMetadata</code> objects, one entry for each slot
            type returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentRequest">
            <summary>
            Container for the parameters to the GetIntent operation.
            Returns information about an intent. In addition to the intent name, you must specify
            the intent version. 
            
             
            <para>
             This operation requires permissions to perform the <code>lex:GetIntent</code> action.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentResponse">
            <summary>
            This is the response object from the GetIntent operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.ConclusionStatement">
            <summary>
            Gets and sets the property ConclusionStatement. 
            <para>
            After the Lambda function specified in the <code>fulfillmentActivity</code> element
            fulfills the intent, Amazon Lex conveys this statement to the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.ConfirmationPrompt">
            <summary>
            Gets and sets the property ConfirmationPrompt. 
            <para>
            If defined in the bot, Amazon Lex uses prompt to confirm the intent before fulfilling
            the user's request. For more information, see . 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the intent was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.DialogCodeHook">
            <summary>
            Gets and sets the property DialogCodeHook. 
            <para>
            If defined in the bot, Amazon Amazon Lex invokes this Lambda function for each user
            input. For more information, see . 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.FollowUpPrompt">
            <summary>
            Gets and sets the property FollowUpPrompt. 
            <para>
            If defined in the bot, Amazon Lex uses this prompt to solicit additional user activity
            after the intent is fulfilled. For more information, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.FulfillmentActivity">
            <summary>
            Gets and sets the property FulfillmentActivity. 
            <para>
            Describes how the intent is fulfilled. For more information, see . 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the intent was updated. When you create a resource, the creation date
            and the last updated date are the same. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.ParentIntentSignature">
            <summary>
            Gets and sets the property ParentIntentSignature. 
            <para>
            A unique identifier for a built-in intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.RejectionStatement">
            <summary>
            Gets and sets the property RejectionStatement. 
            <para>
            If the user answers "no" to the question defined in <code>confirmationPrompt</code>,
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.SampleUtterances">
            <summary>
            Gets and sets the property SampleUtterances. 
            <para>
            An array of sample utterances configured for the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            An array of intent slots configured for the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentsRequest">
            <summary>
            Container for the parameters to the GetIntents operation.
            Returns intent information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all intents that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all intents. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetIntents</code> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of intents to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsRequest.NameContains">
            <summary>
            Gets and sets the property NameContains. 
            <para>
            Substring to match in intent names. An intent will be returned if any part of its
            name matches the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of intents. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            the next page of intents, specify the pagination token in the next request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentsResponse">
            <summary>
            This is the response object from the GetIntents operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>Intent</code> objects. For more information, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, the response includes a pagination token that you can
            specify in your next request to fetch the next page of intents. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest">
            <summary>
            Container for the parameters to the GetIntentVersions operation.
            Gets information about all of the versions of an intent.
            
             
            <para>
            The <code>GetIntentVersions</code> operation returns an <code>IntentMetadata</code>
            object for each version of an intent. For example, if an intent has three numbered
            versions, the <code>GetIntentVersions</code> operation returns four <code>IntentMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetIntentVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetIntentVersions</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of intent versions to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent for which versions should be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of intent versions. If the response
            to this call is truncated, Amazon Lex returns a pagination token in the response.
            To fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetIntentVersionsResponse">
            <summary>
            This is the response object from the GetIntentVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>IntentMetadata</code> objects, one for each numbered version of
            the intent plus one for the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetIntentVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of intent versions. If the response
            to this call is truncated, Amazon Lex returns a pagination token in the response.
            To fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypeRequest">
            <summary>
            Container for the parameters to the GetSlotType operation.
            Returns information about a specific version of a slot type. In addition to specifying
            the slot type name, you must specify the slot type version.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotType</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type. The name is case sensitive. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the slot type. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse">
            <summary>
            This is the response object from the GetSlotType operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the <code>$LATEST</code> version of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the slot type was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.EnumerationValues">
            <summary>
            Gets and sets the property EnumerationValues. 
            <para>
            A list of <code>EnumerationValue</code> objects that defines the values that the slot
            type can take.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the slot type was updated. When you create a resource, the creation
            date and last update date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the slot type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypesRequest">
            <summary>
            Container for the parameters to the GetSlotTypes operation.
            Returns slot type information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all slot types that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all slot types. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetSlotTypes</code> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of slot types to return in the response. The default is 10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesRequest.NameContains">
            <summary>
            Gets and sets the property NameContains. 
            <para>
            Substring to match in slot type names. A slot type will be returned if any part of
            its name matches the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token that fetches the next page of slot types. If the response to this
            API call is truncated, Amazon Lex returns a pagination token in the response. To fetch
            next page of slot types, specify the pagination token in the next request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypesResponse">
            <summary>
            This is the response object from the GetSlotTypes operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, it includes a pagination token that you can specify
            in your next request to fetch the next page of slot types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypesResponse.SlotTypes">
            <summary>
            Gets and sets the property SlotTypes. 
            <para>
            An array of objects, one for each slot type, that provides information such as the
            name of the slot type, the version, and a description.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest">
            <summary>
            Container for the parameters to the GetSlotTypeVersions operation.
            Gets information about all versions of a slot type.
            
             
            <para>
            The <code>GetSlotTypeVersions</code> operation returns a <code>SlotTypeMetadata</code>
            object for each version of a slot type. For example, if a slot type has three numbered
            versions, the <code>GetSlotTypeVersions</code> operation returns four <code>SlotTypeMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetSlotTypeVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotTypeVersions</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of slot type versions to return in the response. The default is
            10.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type for which versions should be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of slot type versions. If the response
            to this call is truncated, Amazon Lex returns a pagination token in the response.
            To fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsResponse">
            <summary>
            This is the response object from the GetSlotTypeVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token for fetching the next page of slot type versions. If the response
            to this call is truncated, Amazon Lex returns a pagination token in the response.
            To fetch the next page of versions, specify the pagination token in the next request.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsResponse.SlotTypes">
            <summary>
            Gets and sets the property SlotTypes. 
            <para>
            An array of <code>SlotTypeMetadata</code> objects, one for each numbered version of
            the slot type plus one for the <code>$LATEST</code> version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest">
            <summary>
            Container for the parameters to the GetUtterancesView operation.
            Use the <code>GetUtterancesView</code> operation to get information about the utterances
            that your users have made to your bot. You can use this list to tune the utterances
            that your bot responds to.
            
             
            <para>
            For example, say that you have created a bot to order flowers. After your users have
            used your bot for a while, use the <code>GetUtterancesView</code> operation to see
            the requests that they have made and whether they have been successful. You might
            find that the utterance "I want flowers" is not being recognized. You could add this
            utterance to the <code>OrderFlowers</code> intent so that your bot recognizes that
            utterance.
            </para>
             
            <para>
            After you publish a new version of a bot, you can get information about the old version
            and the new so that you can compare the performance across the two versions. 
            </para>
             
            <para>
            Data is available for the last 15 days. You can request information for up to 5 versions
            in each request. The response contains information about a maximum of 100 utterances
            for each version.
            </para>
             
            <para>
            If the bot's <code>childDirected</code> field is set to <code>true</code>, utterances
            for the bot are not stored and cannot be retrieved with the <code>GetUtterancesView</code>
            operation. For more information, see .
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetUtterancesView</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot for which utterance information should be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest.BotVersions">
            <summary>
            Gets and sets the property BotVersions. 
            <para>
            An array of bot versions for which utterance information should be returned. The limit
            is 5 versions per request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest.StatusType">
            <summary>
            Gets and sets the property StatusType. 
            <para>
            To return utterances that were recognized and handled, use<code>Detected</code>. To
            return utterances that were not recognized, use <code>Missed</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.GetUtterancesViewResponse">
            <summary>
            This is the response object from the GetUtterancesView operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetUtterancesViewResponse.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot for which utterance information was returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.GetUtterancesViewResponse.Utterances">
            <summary>
            Gets and sets the property Utterances. 
            <para>
            An array of objects, each containing a list of objects describing the utterances that
            were processed by your bot. The response contains a maximum of 100 <code>UtteranceData</code>
            objects for each version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Intent">
            <summary>
            Identifies the specific version of an intent.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Intent.IntentName">
            <summary>
            Gets and sets the property IntentName. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Intent.IntentVersion">
            <summary>
            Gets and sets the property IntentVersion. 
            <para>
            The version of the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.IntentMetadata">
            <summary>
            Provides information about an intent.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IntentMetadata.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the intent was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IntentMetadata.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IntentMetadata.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the intent was updated. When you create an intent, the creation date
            and last updated date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IntentMetadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.IntentMetadata.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the intent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            <summary>
             LexModelBuildingService exception
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.String)">
            <summary>
            Constructs a new InternalFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.InternalFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalFailureException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            <summary>
             LexModelBuildingService exception
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Message">
            <summary>
            The message object that provides the message text and its type.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Message.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The text of the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Message.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            The content type of the message string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            <summary>
             LexModelBuildingService exception
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            <summary>
             LexModelBuildingService exception
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.String)">
            <summary>
            Constructs a new PreconditionFailedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PreconditionFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.Exception)">
            <summary>
            Construct instance of PreconditionFailedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionFailedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.PreconditionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PreconditionFailedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Prompt">
            <summary>
            Obtains information from the user. To define a prompt, provide one or more messages
            and specify the number of attempts to get information from the user. If you provide
            more than one message, Amazon Lex chooses one of the messages to use to prompt the
            user. For more information, see <a>how-it-works</a>.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Prompt.MaxAttempts">
            <summary>
            Gets and sets the property MaxAttempts. 
            <para>
            The number of times to prompt the user for information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Prompt.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            An array of objects, each of which provides a message string and its type. You can
            specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Prompt.ResponseCard">
            <summary>
            Gets and sets the property ResponseCard. 
            <para>
            A response card. Amazon Lex uses this prompt at runtime, in the <code>PostText</code>
            API response. It substitutes session attributes and slot values for placeholders in
            the response card. For more information, see <a>ex-resp-card</a>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutBotAliasRequest">
            <summary>
            Container for the parameters to the PutBotAlias operation.
            Creates an alias for the specified version of the bot or replaces an alias for the
            specified bot. To change the version of the bot that the alias points to, replace
            the alias. For more information about aliases, see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:PutBotAlias</code> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.BotVersion">
            <summary>
            Gets and sets the property BotVersion. 
            <para>
            The version of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Identifies a specific revision of the <code>$LATEST</code> version.
            </para>
             
            <para>
            When you create a new bot alias, leave the <code>checksum</code> field blank. If you
            specify a checksum you get a <code>BadRequestException</code> exception.
            </para>
             
            <para>
            When you want to update a bot alias, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the alias. The name is <i>not</i> case sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutBotAliasResponse">
            <summary>
            This is the response object from the PutBotAlias operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.BotName">
            <summary>
            Gets and sets the property BotName. 
            <para>
            The name of the bot that the alias points to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.BotVersion">
            <summary>
            Gets and sets the property BotVersion. 
            <para>
            The version of the bot that the alias points to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            The checksum for the current version of the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot alias was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot alias was updated. When you create a resource, the creation
            date and the last updated date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotAliasResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the alias.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutBotRequest">
            <summary>
            Container for the parameters to the PutBot operation.
            Creates an Amazon Lex conversational bot or replaces an existing bot. When you create
            or update a bot you only required to specify a name. You can use this to add intents
            later, or to remove intents from an existing bot. When you create a bot with a name
            only, the bot is created or updated but Amazon Lex returns the <code/> response <code>FAILED</code>.
            You can build the bot after you add one or more intents. For more information about
            Amazon Lex bots, see <a>how-it-works</a>. 
            
             
            <para>
            If you specify the name of an existing bot, the fields in the request replace the
            existing values in the <code>$LATEST</code> version of the bot. Amazon Lex removes
            any fields that you don't provide values for in the request, except for the <code>idleTTLInSeconds</code>
            and <code>privacySettings</code> fields, which are set to their default values. If
            you don't specify values for required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutBot</code> action. For more
            information, see <a>auth-and-access-control</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.AbortStatement">
            <summary>
            Gets and sets the property AbortStatement. 
            <para>
            When Amazon Lex can't understand the user's input in context, it tries to elicit the
            information a few times. After that, Amazon Lex sends the message defined in <code>abortStatement</code>
            to the user, and then aborts the conversation. To set the number of retries, use the
            <code>valueElicitationPrompt</code> field for the slot type. 
            </para>
             
            <para>
            For example, in a pizza ordering bot, Amazon Lex might ask a user "What type of crust
            would you like?" If the user's response is not one of the expected responses (for
            example, "thin crust, "deep dish," etc.), Amazon Lex tries to elicit a correct response
            a few more times. 
            </para>
             
            <para>
            For example, in a pizza ordering application, <code>OrderPizza</code> might be one
            of the intents. This intent might require the <code>CrustType</code> slot. You specify
            the <code>valueElicitationPrompt</code> field when you create the <code>CrustType</code>
            slot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Identifies a specific revision of the <code>$LATEST</code> version.
            </para>
             
            <para>
            When you create a new bot, leave the <code>checksum</code> field blank. If you specify
            a checksum you get a <code>BadRequestException</code> exception.
            </para>
             
            <para>
            When you want to update a bot, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.ChildDirected">
            <summary>
            Gets and sets the property ChildDirected. 
            <para>
            For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
            specify whether your use of Amazon Lex is related to a website, program, or other
            application that is directed or targeted, in whole or in part, to children under age
            13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
            <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By
            specifying <code>true</code> in the <code>childDirected</code> field, you confirm
            that your use of Amazon Lex <b>is</b> related to a website, program, or other application
            that is directed or targeted, in whole or in part, to children under age 13 and subject
            to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field,
            you confirm that your use of Amazon Lex <b>is not</b> related to a website, program,
            or other application that is directed or targeted, in whole or in part, to children
            under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code>
            field that does not accurately reflect whether your use of Amazon Lex is related to
            a website, program, or other application that is directed or targeted, in whole or
            in part, to children under age 13 and subject to COPPA.
            </para>
             
            <para>
            If your use of Amazon Lex relates to a website, program, or other application that
            is directed in whole or in part, to children under age 13, you must obtain any required
            verifiable parental consent under COPPA. For information regarding the use of Amazon
            Lex in connection with websites, programs, or other applications that are directed
            or targeted, in whole or in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon
            Lex FAQ.</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.ClarificationPrompt">
            <summary>
            Gets and sets the property ClarificationPrompt. 
            <para>
            When Amazon Lex doesn't understand the user's intent, it uses one of these messages
            to get clarification. For example, "Sorry, I didn't understand. Please repeat." Amazon
            Lex repeats the clarification prompt the number of times specified in <code>maxAttempts</code>.
            If Amazon Lex still can't understand, it sends the message specified in <code>abortStatement</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.IdleSessionTTLInSeconds">
            <summary>
            Gets and sets the property IdleSessionTTLInSeconds. 
            <para>
            The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
            </para>
             
            <para>
            A user interaction session remains active for the amount of time specified. If no
            conversation occurs during this time, the session expires and Amazon Lex deletes any
            data provided before the timeout.
            </para>
             
            <para>
            For example, suppose that a user chooses the OrderPizza intent, but gets sidetracked
            halfway through placing an order. If the user doesn't complete the order within the
            specified time, Amazon Lex discards the slot information that it gathered, and the
            user must start over.
            </para>
             
            <para>
            If you don't include the <code>idleSessionTTLInSeconds</code> element in a <code>PutBot</code>
            operation request, Amazon Lex uses the default value. This is also true if the request
            replaces an existing bot.
            </para>
             
            <para>
            The default is 300 seconds (5 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>Intent</code> objects. Each intent represents a command that a user
            can express. For example, a pizza ordering bot might support an OrderPizza intent.
            For more information, see <a>how-it-works</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
             Specifies the target locale for the bot. Any intent used in the bot must be compatible
            with the locale of the bot. 
            </para>
             
            <para>
            The default is <code>en-US</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot. The name is <i>not</i> case sensitive. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.ProcessBehavior">
            <summary>
            Gets and sets the property ProcessBehavior. 
            <para>
            If you set the <code>processBehavior</code> element to <code>Build</code>, Amazon
            Lex builds the bot so that it can be run. If you set the element to <code>Save</code>Amazon
            Lex saves the bot, but doesn't build it. 
            </para>
             
            <para>
            If you don't specify this value, the default value is <code>Save</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotRequest.VoiceId">
            <summary>
            Gets and sets the property VoiceId. 
            <para>
            The Amazon Parrot voice ID that you want Amazon Lex to use for voice interactions
            with the user. The locale configured for the voice must match the locale of the bot.
            For more information, see <a href="http://docs.aws.amazon.com/polly/latest/dg/API_Voice.html">Voice</a>
            in the <i>Amazon Polly Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutBotResponse">
            <summary>
            This is the response object from the PutBot operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.AbortStatement">
            <summary>
            Gets and sets the property AbortStatement. 
            <para>
            The message that Amazon Lex uses to abort a conversation. For more information, see
            .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the bot that you created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.ChildDirected">
            <summary>
            Gets and sets the property ChildDirected. 
            <para>
            For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
            specify whether your use of Amazon Lex is related to a website, program, or other
            application that is directed or targeted, in whole or in part, to children under age
            13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
            <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By
            specifying <code>true</code> in the <code>childDirected</code> field, you confirm
            that your use of Amazon Lex <b>is</b> related to a website, program, or other application
            that is directed or targeted, in whole or in part, to children under age 13 and subject
            to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field,
            you confirm that your use of Amazon Lex <b>is not</b> related to a website, program,
            or other application that is directed or targeted, in whole or in part, to children
            under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code>
            field that does not accurately reflect whether your use of Amazon Lex is related to
            a website, program, or other application that is directed or targeted, in whole or
            in part, to children under age 13 and subject to COPPA.
            </para>
             
            <para>
            If your use of Amazon Lex relates to a website, program, or other application that
            is directed in whole or in part, to children under age 13, you must obtain any required
            verifiable parental consent under COPPA. For information regarding the use of Amazon
            Lex in connection with websites, programs, or other applications that are directed
            or targeted, in whole or in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon
            Lex FAQ.</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.ClarificationPrompt">
            <summary>
            Gets and sets the property ClarificationPrompt. 
            <para>
             The prompts that Amazon Lex uses when it doesn't understand the user's intent. For
            more information, see . 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the bot was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that
            it failed to build the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.IdleSessionTTLInSeconds">
            <summary>
            Gets and sets the property IdleSessionTTLInSeconds. 
            <para>
            The maximum length of time that Amazon Lex retains the data gathered in a conversation.
            For more information, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Intents">
            <summary>
            Gets and sets the property Intents. 
            <para>
            An array of <code>Intent</code> objects. For more information, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the bot was updated. When you create a resource, the creation date and
            last updated date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
             The target locale for the bot. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the bot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             When you send a request to create a bot with <code>processBehavior</code> set to
            <code>BUILD</code>, Amazon Lex sets the <code>status</code> response element to <code>BUILDING</code>.
            After Amazon Lex builds the bot, it sets <code>status</code> to <code>READY</code>.
            If Amazon Lex can't build the bot, Amazon Lex sets <code>status</code> to <code>FAILED</code>.
            Amazon Lex returns the reason for the failure in the <code>failureReason</code> response
            element. 
            </para>
             
            <para>
            When you set <code>processBehavior</code>to <code>SAVE</code>, Amazon Lex sets the
            status code to <code>NOT BUILT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the bot. For a new bot, the version is always <code>$LATEST</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutBotResponse.VoiceId">
            <summary>
            Gets and sets the property VoiceId. 
            <para>
            The Amazon Parrot voice ID that Amazon Lex uses for voice interaction with the user.
            For more information, see .
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutIntentRequest">
            <summary>
            Container for the parameters to the PutIntent operation.
            Creates an intent or replaces an existing intent.
            
             
            <para>
            To define the interaction between the user and your bot, you use one or more intents.
            For a pizza ordering bot, for example, you would create an <code>OrderPizza</code>
            intent. 
            </para>
             
            <para>
            To create an intent or replace an existing intent, you must provide the following:
            </para>
             <ul> <li> 
            <para>
            Intent name. For example, <code>OrderPizza</code>.
            </para>
             </li> <li> 
            <para>
            Sample utterances. For example, "Can I order a pizza, please." and "I want to order
            a pizza."
            </para>
             </li> <li> 
            <para>
            Information to be gathered. You specify slot types for the information that your bot
            will request from the user. You can specify standard slot types, such as a date or
            a time, or custom slot types such as the size and crust of a pizza.
            </para>
             </li> <li> 
            <para>
            How the intent will be fulfilled. You can provide a Lambda function or configure the
            intent to return the intent information to the client application. If you use a Lambda
            function, when all of the intent information is available, Amazon Lex invokes your
            Lambda function. If you configure your intent to return the intent information to
            the client application. 
            </para>
             </li> </ul> 
            <para>
            You can specify other optional information in the request, such as:
            </para>
             <ul> <li> 
            <para>
            A confirmation prompt to ask the user to confirm an intent. For example, "Shall I
            order your pizza?"
            </para>
             </li> <li> 
            <para>
            A conclusion statement to send to the user after the intent has been fulfilled. For
            example, "I placed your pizza order."
            </para>
             </li> <li> 
            <para>
            A follow-up prompt that asks the user for additional activity. For example, asking
            "Do you want to order a drink with your pizza?"
            </para>
             </li> </ul> 
            <para>
            If you specify an existing intent name to update the intent, Amazon Lex replaces the
            values in the <code>$LATEST</code> version of the slot type with the values in the
            request. Amazon Lex removes fields that you don't provide in the request. If you don't
            specify the required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            For more information, see <a>how-it-works</a>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutIntent</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Identifies a specific revision of the <code>$LATEST</code> version.
            </para>
             
            <para>
            When you create a new intent, leave the <code>checksum</code> field blank. If you
            specify a checksum you get a <code>BadRequestException</code> exception.
            </para>
             
            <para>
            When you want to update a intent, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.ConclusionStatement">
            <summary>
            Gets and sets the property ConclusionStatement. 
            <para>
             The statement that you want Amazon Lex to convey to the user after the intent is
            successfully fulfilled by the Lambda function. 
            </para>
             
            <para>
            This element is relevant only if you provide a Lambda function in the <code>fulfillmentActivity</code>.
            If you return the intent to the client application, you can't specify this element.
            </para>
             <note> 
            <para>
            The <code>followUpPrompt</code> and <code>conclusionStatement</code> are mutually
            exclusive. You can specify only one.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.ConfirmationPrompt">
            <summary>
            Gets and sets the property ConfirmationPrompt. 
            <para>
            Prompts the user to confirm the intent. This question should have a yes or no answer.
            </para>
             
            <para>
            Amazon Lex uses this prompt to ensure that the user acknowledges that the intent is
            ready for fulfillment. For example, with the <code>OrderPizza</code> intent, you might
            want to confirm that the order is correct before placing it. For other intents, such
            as intents that simply respond to user questions, you might not need to ask the user
            for confirmation before providing the information. 
            </para>
             <note> 
            <para>
            You you must provide both the <code>rejectionStatement</code> and the <code>confirmationPrompt</code>,
            or neither.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.DialogCodeHook">
            <summary>
            Gets and sets the property DialogCodeHook. 
            <para>
             Specifies a Lambda function to invoke for each user input. You can invoke this Lambda
            function to personalize user interaction. 
            </para>
             
            <para>
            For example, suppose your bot determines that the user is John. Your Lambda function
            might retrieve John's information from a backend database and prepopulate some of
            the values. For example, if you find that John is gluten intolerant, you might set
            the corresponding intent slot, <code>GlutenIntolerant</code>, to true. You might find
            John's phone number and set the corresponding session attribute. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.FollowUpPrompt">
            <summary>
            Gets and sets the property FollowUpPrompt. 
            <para>
            A user prompt for additional activity after an intent is fulfilled. For example, after
            the <code>OrderPizza</code> intent is fulfilled (your Lambda function placed an order
            with a pizzeria), you might prompt the user to find if they want to order a drink
            (assuming that you have defined an <code>OrderDrink</code> intent in your bot).
            </para>
             <note> 
            <para>
            The <code>followUpPrompt</code> and <code>conclusionStatement</code> are mutually
            exclusive. You can specify only one. For example, your bot may not solicit both the
            following: 
            </para>
             
            <para>
             Follow up prompt - "<code>$session.FirstName</code>, your pizza order has been placed.
            Would you like to order a drink or a dessert?" 
            </para>
             
            <para>
             Conclusion statement - "<code>$session.FirstName</code>, your pizza order has been
            placed." 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.FulfillmentActivity">
            <summary>
            Gets and sets the property FulfillmentActivity. 
            <para>
             Describes how the intent is fulfilled. For example, after a user provides all of
            the information for a pizza order, <code>fulfillmentActivity</code> defines how the
            bot places an order with a local pizza store. 
            </para>
             
            <para>
             You might configure Amazon Lex to return all of the intent information to the client
            application, or direct it to invoke a Lambda function that can process the intent
            (for example, place an order with a pizzeria). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent. The name is <i>not</i> case sensitive. 
            </para>
             
            <para>
            The name can't match a built-in intent name, or a built-in intent name with "AMAZON."
            removed. For example, because there is a built-in intent called <code>AMAZON.HelpIntent</code>,
            you can't create a custom intent called <code>HelpIntent</code>.
            </para>
             
            <para>
            For a list of built-in intents, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.ParentIntentSignature">
            <summary>
            Gets and sets the property ParentIntentSignature. 
            <para>
            A unique identifier for the built-in intent to base this intent on. To find the signature
            for an intent, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents">Standard
            Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.RejectionStatement">
            <summary>
            Gets and sets the property RejectionStatement. 
            <para>
            When the user answers "no" to the question defined in <code>confirmationPrompt</code>,
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            
            </para>
             <note> 
            <para>
            You must provide both the <code>rejectionStatement</code> and the <code>confirmationPrompt</code>,
            or neither.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.SampleUtterances">
            <summary>
            Gets and sets the property SampleUtterances. 
            <para>
            An array of utterances (strings) that a user might say to signal the intent. For example,
            "I want {PizzaSize} pizza", "Order {Quantity} {PizzaSize} pizzas". 
            </para>
             
            <para>
            In each utterance, a slot name is enclosed in curly braces. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentRequest.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            An array of intent slots. At runtime, Amazon Lex elicits required slot values from
            the user using prompts defined in the slots. For more information, see &lt;xref linkend="how-it-works"/&gt;.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutIntentResponse">
            <summary>
            This is the response object from the PutIntent operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the <code>$LATEST</code>version of the intent created or updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.ConclusionStatement">
            <summary>
            Gets and sets the property ConclusionStatement. 
            <para>
            After the Lambda function specified in the<code>fulfillmentActivity</code>intent fulfills
            the intent, Amazon Lex conveys this statement to the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.ConfirmationPrompt">
            <summary>
            Gets and sets the property ConfirmationPrompt. 
            <para>
            If defined in the intent, Amazon Lex prompts the user to confirm the intent before
            fulfilling it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the intent was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.DialogCodeHook">
            <summary>
            Gets and sets the property DialogCodeHook. 
            <para>
            If defined in the intent, Amazon Lex invokes this Lambda function for each user input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.FollowUpPrompt">
            <summary>
            Gets and sets the property FollowUpPrompt. 
            <para>
            If defined in the intent, Amazon Lex uses this prompt to solicit additional user activity
            after the intent is fulfilled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.FulfillmentActivity">
            <summary>
            Gets and sets the property FulfillmentActivity. 
            <para>
            If defined in the intent, Amazon Lex invokes this Lambda function to fulfill the intent
            after the user provides all of the information required by the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the intent was updated. When you create a resource, the creation date
            and last update dates are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.ParentIntentSignature">
            <summary>
            Gets and sets the property ParentIntentSignature. 
            <para>
            A unique identifier for the built-in intent that this intent is based on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.RejectionStatement">
            <summary>
            Gets and sets the property RejectionStatement. 
            <para>
            If the user answers "no" to the question defined in <code>confirmationPrompt</code>
            Amazon Lex responds with this statement to acknowledge that the intent was canceled.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.SampleUtterances">
            <summary>
            Gets and sets the property SampleUtterances. 
            <para>
             An array of sample utterances that are configured for the intent. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.Slots">
            <summary>
            Gets and sets the property Slots. 
            <para>
            An array of intent slots that are configured for the intent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutIntentResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the intent. For a new intent, the version is always <code>$LATEST</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest">
            <summary>
            Container for the parameters to the PutSlotType operation.
            Creates a custom slot type or replaces an existing custom slot type.
            
             
            <para>
            To create a custom slot type, specify a name for the slot type and a set of enumeration
            values, which are the values that a slot of this type can assume. For more information,
            see <a>how-it-works</a>.
            </para>
             
            <para>
            If you specify the name of an existing slot type, the fields in the request replace
            the existing values in the <code>$LATEST</code> version of the slot type. Amazon Lex
            removes the fields that you don't provide in the request. If you don't specify required
            fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutSlotType</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Identifies a specific revision of the <code>$LATEST</code> version.
            </para>
             
            <para>
            When you create a new slot type, leave the <code>checksum</code> field blank. If you
            specify a checksum you get a <code>BadRequestException</code> exception.
            </para>
             
            <para>
            When you want to update a slot type, set the <code>checksum</code> field to the checksum
            of the most recent revision of the <code>$LATEST</code> version. If you don't specify
            the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code>
            version, you get a <code>PreconditionFailedException</code> exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.EnumerationValues">
            <summary>
            Gets and sets the property EnumerationValues. 
            <para>
            A list of <code>EnumerationValue</code> objects that defines the values that the slot
            type can take.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type. The name is <i>not</i> case sensitive. 
            </para>
             
            <para>
            The name can't match a built-in slot type name, or a built-in slot type name with
            "AMAZON." removed. For example, because there is a built-in slot type called <code>AMAZON.DATE</code>,
            you can't create a custom slot type called <code>DATE</code>.
            </para>
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse">
            <summary>
            This is the response object from the PutSlotType operation.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            Checksum of the <code>$LATEST</code> version of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the slot type was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.EnumerationValues">
            <summary>
            Gets and sets the property EnumerationValues. 
            <para>
            A list of <code>EnumerationValue</code> objects that defines the values that the slot
            type can take.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the slot type was updated. When you create a slot type, the creation
            date and last update date are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.PutSlotTypeResponse.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the slot type. For a new slot type, the version is always <code>$LATEST</code>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            <summary>
             LexModelBuildingService exception
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.ResourceInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Slot">
            <summary>
            Identifies the version of a specific slot.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.Priority">
            <summary>
            Gets and sets the property Priority. 
            <para>
             Directs Lex the order in which to elicit this slot value from the user. For example,
            if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value
            for the slot with priority 1.
            </para>
             
            <para>
            If multiple slots share the same priority, the order in which Lex elicits values is
            arbitrary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.ResponseCard">
            <summary>
            Gets and sets the property ResponseCard. 
            <para>
             A set of possible responses for the slot type used by text-based clients. A user
            chooses an option from the response card, instead of using text to reply. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.SampleUtterances">
            <summary>
            Gets and sets the property SampleUtterances. 
            <para>
             If you know a specific pattern with which users might respond to an Amazon Lex request
            for a slot value, you can provide those utterances to improve accuracy. This is optional.
            In most cases, Amazon Lex is capable of understanding user utterances. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.SlotConstraint">
            <summary>
            Gets and sets the property SlotConstraint. 
            <para>
            Specifies whether the slot is required or optional. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.SlotType">
            <summary>
            Gets and sets the property SlotType. 
            <para>
            The type of the slot, either a custom slot type that you defined or one of the built-in
            slot types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.SlotTypeVersion">
            <summary>
            Gets and sets the property SlotTypeVersion. 
            <para>
            The version of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Slot.ValueElicitationPrompt">
            <summary>
            Gets and sets the property ValueElicitationPrompt. 
            <para>
            The prompt that Amazon Lex uses to elicit the slot value from the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.SlotTypeMetadata">
            <summary>
            Provides information about a slot type..
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeMetadata.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date that the slot type was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeMetadata.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeMetadata.LastUpdatedDate">
            <summary>
            Gets and sets the property LastUpdatedDate. 
            <para>
            The date that the slot type was updated. When you create a resource, the creation
            date and last updated date are the same. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeMetadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the slot type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.SlotTypeMetadata.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the slot type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Statement">
            <summary>
            A collection of messages that convey information to the user. At runtime, Amazon Lex
            selects the message to convey.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Statement.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            A collection of message objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Statement.ResponseCard">
            <summary>
            Gets and sets the property ResponseCard. 
            <para>
             At runtime, if the client is using the API, Amazon Lex includes the response card
            in the response. It substitutes all of the session attributes and slot values for
            placeholders in the response card. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.UtteranceData">
            <summary>
            Provides information about a single utterance that was made to your bot.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceData.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of times that the utterance was processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceData.DistinctUsers">
            <summary>
            Gets and sets the property DistinctUsers. 
            <para>
            The total number of individuals that used the utterance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceData.FirstUtteredDate">
            <summary>
            Gets and sets the property FirstUtteredDate. 
            <para>
            The date that the utterance was first recorded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceData.LastUtteredDate">
            <summary>
            Gets and sets the property LastUtteredDate. 
            <para>
            The date that the utterance was last recorded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceData.UtteranceString">
            <summary>
            Gets and sets the property UtteranceString. 
            <para>
            The text that was entered by the user or the text representation of an audio clip.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.UtteranceList">
            <summary>
            Provides a list of utterances that have been made to a specific version of your bot.
            The list contains a maximum of 100 utterances.
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceList.BotVersion">
            <summary>
            Gets and sets the property BotVersion. 
            <para>
            The version of the bot that processed the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.UtteranceList.Utterances">
            <summary>
            Gets and sets the property Utterances. 
            <para>
            One or more objects that contain information about the utterances that have been made
            to a bot. The maximum number of object is 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotAliasMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for BotAliasMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotAliasMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BotAliasMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotAliasMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotAliasMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotChannelAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for BotChannelAssociation Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotChannelAssociationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BotChannelAssociation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotChannelAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotChannelAssociationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for BotMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BotMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BotMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for BuiltinIntentMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BuiltinIntentMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentSlotUnmarshaller">
            <summary>
            Response Unmarshaller for BuiltinIntentSlot Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentSlotUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BuiltinIntentSlot,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentSlotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinIntentSlotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinSlotTypeMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for BuiltinSlotTypeMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinSlotTypeMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#BuiltinSlotTypeMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinSlotTypeMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.BuiltinSlotTypeMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookMarshaller">
            <summary>
            CodeHook Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookMarshaller.Marshall(Amazon.LexModelBuildingService.Model.CodeHook,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookUnmarshaller">
            <summary>
            Response Unmarshaller for CodeHook Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#CodeHook,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CodeHookUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionRequestMarshaller">
            <summary>
            CreateBotVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.CreateBotVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateBotVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateBotVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionRequestMarshaller">
            <summary>
            CreateIntentVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateIntentVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateIntentVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionRequestMarshaller">
            <summary>
            CreateSlotTypeVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSlotTypeVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.CreateSlotTypeVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasRequestMarshaller">
            <summary>
            DeleteBotAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBotAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationRequestMarshaller">
            <summary>
            DeleteBotChannelAssociation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBotChannelAssociation operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotChannelAssociationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotRequestMarshaller">
            <summary>
            DeleteBot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteBotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBot operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionRequestMarshaller">
            <summary>
            DeleteBotVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBotVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteBotVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentRequestMarshaller">
            <summary>
            DeleteIntent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteIntentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIntent operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionRequestMarshaller">
            <summary>
            DeleteIntentVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIntentVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteIntentVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeRequestMarshaller">
            <summary>
            DeleteSlotType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSlotType operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionRequestMarshaller">
            <summary>
            DeleteSlotTypeVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSlotTypeVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteSlotTypeVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesRequestMarshaller">
            <summary>
            DeleteUtterances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUtterances operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.DeleteUtterancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueMarshaller">
            <summary>
            EnumerationValue Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueMarshaller.Marshall(Amazon.LexModelBuildingService.Model.EnumerationValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueUnmarshaller">
            <summary>
            Response Unmarshaller for EnumerationValue Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#EnumerationValue,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.EnumerationValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptMarshaller">
            <summary>
            FollowUpPrompt Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptMarshaller.Marshall(Amazon.LexModelBuildingService.Model.FollowUpPrompt,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptUnmarshaller">
            <summary>
            Response Unmarshaller for FollowUpPrompt Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#FollowUpPrompt,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FollowUpPromptUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityMarshaller">
            <summary>
            FulfillmentActivity Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityMarshaller.Marshall(Amazon.LexModelBuildingService.Model.FulfillmentActivity,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityUnmarshaller">
            <summary>
            Response Unmarshaller for FulfillmentActivity Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#FulfillmentActivity,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.FulfillmentActivityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesRequestMarshaller">
            <summary>
            GetBotAliases Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBotAliases operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasRequestMarshaller">
            <summary>
            GetBotAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBotAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationRequestMarshaller">
            <summary>
            GetBotChannelAssociation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBotChannelAssociation operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsRequestMarshaller">
            <summary>
            GetBotChannelAssociations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBotChannelAssociations operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotChannelAssociationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotRequestMarshaller">
            <summary>
            GetBot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBot operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsRequestMarshaller">
            <summary>
            GetBots Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBots operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsRequestMarshaller">
            <summary>
            GetBotVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBotVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBotVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentRequestMarshaller">
            <summary>
            GetBuiltinIntent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBuiltinIntent operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsRequestMarshaller">
            <summary>
            GetBuiltinIntents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBuiltinIntents operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinIntentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesRequestMarshaller">
            <summary>
            GetBuiltinSlotTypes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBuiltinSlotTypes operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetBuiltinSlotTypesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentRequestMarshaller">
            <summary>
            GetIntent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetIntentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIntent operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsRequestMarshaller">
            <summary>
            GetIntents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetIntentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIntents operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsRequestMarshaller">
            <summary>
            GetIntentVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIntentVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetIntentVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeRequestMarshaller">
            <summary>
            GetSlotType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetSlotTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSlotType operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesRequestMarshaller">
            <summary>
            GetSlotTypes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSlotTypes operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsRequestMarshaller">
            <summary>
            GetSlotTypeVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSlotTypeVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetSlotTypeVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewRequestMarshaller">
            <summary>
            GetUtterancesView Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetUtterancesView operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.GetUtterancesViewResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMarshaller">
            <summary>
            Intent Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Intent,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for IntentMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#IntentMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentUnmarshaller">
            <summary>
            Response Unmarshaller for Intent Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Intent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.IntentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageMarshaller">
            <summary>
            Message Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Message,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageUnmarshaller">
            <summary>
            Response Unmarshaller for Message Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Message,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.MessageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptMarshaller">
            <summary>
            Prompt Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Prompt,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptUnmarshaller">
            <summary>
            Response Unmarshaller for Prompt Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Prompt,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PromptUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasRequestMarshaller">
            <summary>
            PutBotAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.PutBotAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutBotAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotRequestMarshaller">
            <summary>
            PutBot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.PutBotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutBot operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutBotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentRequestMarshaller">
            <summary>
            PutIntent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.PutIntentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutIntent operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutIntentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeRequestMarshaller">
            <summary>
            PutSlotType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeRequestMarshaller.Marshall(Amazon.LexModelBuildingService.Model.PutSlotTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSlotType operation
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.PutSlotTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotMarshaller">
            <summary>
            Slot Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Slot,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for SlotTypeMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#SlotTypeMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotTypeMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotUnmarshaller">
            <summary>
            Response Unmarshaller for Slot Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Slot,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.SlotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementMarshaller">
            <summary>
            Statement Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementMarshaller.Marshall(Amazon.LexModelBuildingService.Model.Statement,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementUnmarshaller">
            <summary>
            Response Unmarshaller for Statement Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#Statement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.StatementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceDataUnmarshaller">
            <summary>
            Response Unmarshaller for UtteranceData Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#UtteranceData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceListUnmarshaller">
            <summary>
            Response Unmarshaller for UtteranceList Object
            </summary>  
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceListUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LexModelBuildingService#Model#UtteranceList,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceListUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LexModelBuildingService.Model.Internal.MarshallTransformations.UtteranceListUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient">
             <summary>
             Implementation for accessing LexModelBuildingService
            
             Amazon Lex Build-Time Actions 
             <para>
              Amazon Lex is an AWS service for building conversational voice and text interfaces.
             Use these actions to create, update, and delete conversational bots for new and existing
             client applications. 
             </para>
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor">
             <summary>
             Constructs AmazonLexModelBuildingServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLexModelBuildingServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig)">
             <summary>
             Constructs AmazonLexModelBuildingServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLexModelBuildingServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Credentials and an
            AmazonLexModelBuildingServiceClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLexModelBuildingServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String,Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLexModelBuildingServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLexModelBuildingServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.#ctor(System.String,System.String,System.String,Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceConfig)">
            <summary>
            Constructs AmazonLexModelBuildingServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLexModelBuildingServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLexModelBuildingServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateBotVersion(Amazon.LexModelBuildingService.Model.CreateBotVersionRequest)">
            <summary>
            Creates a new version of the bot based on the <code>$LATEST</code> version. If the
            <code>$LATEST</code> version of this resource hasn't changed since you created the
            last version, Amazon Lex doesn't create a new version. It returns the last created
            version.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the bot. You can't update
            the numbered versions that you create with the <code>CreateBotVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
             This operation requires permission for the <code>lex:CreateBotVersion</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBotVersion service method.</param>
            
            <returns>The response from the CreateBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateBotVersion">REST API Reference for CreateBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateBotVersionAsync(Amazon.LexModelBuildingService.Model.CreateBotVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateBotVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateBotVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateBotVersion">REST API Reference for CreateBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateIntentVersion(Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest)">
            <summary>
            Creates a new version of an intent based on the <code>$LATEST</code> version of the
            intent. If the <code>$LATEST</code> version of this intent hasn't changed since you
            last updated it, Amazon Lex doesn't create a new version. It returns the last version
            you created.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the intent. You can't update
            the numbered versions that you create with the <code>CreateIntentVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create a version of an intent, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>lex:CreateIntentVersion</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIntentVersion service method.</param>
            
            <returns>The response from the CreateIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateIntentVersion">REST API Reference for CreateIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateIntentVersionAsync(Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateIntentVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateIntentVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateIntentVersion">REST API Reference for CreateIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateSlotTypeVersion(Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest)">
            <summary>
            Creates a new version of a slot type based on the <code>$LATEST</code> version of
            the specified slot type. If the <code>$LATEST</code> version of this resource has
            not changed since the last version that you created, Amazon Lex doesn't create a new
            version. It returns the last version that you created. 
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of a slot type. You can't update
            the numbered versions that you create with the <code>CreateSlotTypeVersion</code>
            operation.
            </para>
             </note> 
            <para>
            When you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:CreateSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSlotTypeVersion service method.</param>
            
            <returns>The response from the CreateSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateSlotTypeVersion">REST API Reference for CreateSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.CreateSlotTypeVersionAsync(Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSlotTypeVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSlotTypeVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateSlotTypeVersion">REST API Reference for CreateSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBot(Amazon.LexModelBuildingService.Model.DeleteBotRequest)">
            <summary>
            Deletes all versions of the bot, including the <code>$LATEST</code> version. To delete
            a specific version of the bot, use the operation.
            
             
            <para>
            If a bot has an alias, you can't delete it. Instead, the <code>DeleteBot</code> operation
            returns a <code>ResourceInUseException</code> exception that includes a reference
            to the alias that refers to the bot. To remove the reference to the bot, delete the
            alias. If you get the same exception again, delete the referring alias until the <code>DeleteBot</code>
            operation is successful.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBot</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBot service method.</param>
            
            <returns>The response from the DeleteBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBot">REST API Reference for DeleteBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotAsync(Amazon.LexModelBuildingService.Model.DeleteBotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBot">REST API Reference for DeleteBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotAlias(Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest)">
            <summary>
            Deletes an alias for the specified bot. 
            
             
            <para>
            You can't delete an alias that is used in the association between a bot and a messaging
            channel. If an alias is used in a channel association, the <code>DeleteBot</code>
            operation returns a <code>ResourceInUseException</code> exception that includes a
            reference to the channel association that refers to the bot. You can remove the reference
            to the alias by deleting the channel association. If you get the same exception again,
            delete the referring association until the <code>DeleteBotAlias</code> operation is
            successful.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotAlias service method.</param>
            
            <returns>The response from the DeleteBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotAlias">REST API Reference for DeleteBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotAliasAsync(Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBotAlias operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBotAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotAlias">REST API Reference for DeleteBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotChannelAssociation(Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest)">
            <summary>
            Deletes the association between an Amazon Lex bot and a messaging platform.
            
             
            <para>
            This operation requires permission for the <code>lex:DeleteBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotChannelAssociation service method.</param>
            
            <returns>The response from the DeleteBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotChannelAssociation">REST API Reference for DeleteBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotChannelAssociationAsync(Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBotChannelAssociation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBotChannelAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotChannelAssociation">REST API Reference for DeleteBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotVersion(Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest)">
            <summary>
            Deletes a specific version of a bot. To delete all versions of a bot, use the operation.
            
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBotVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotVersion service method.</param>
            
            <returns>The response from the DeleteBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotVersion">REST API Reference for DeleteBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteBotVersionAsync(Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBotVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBotVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotVersion">REST API Reference for DeleteBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteIntent(Amazon.LexModelBuildingService.Model.DeleteIntentRequest)">
            <summary>
            Deletes all versions of the intent, including the <code>$LATEST</code> version. To
            delete a specific version of the intent, use the operation.
            
             
            <para>
             You can delete a version of an intent only if it is not referenced. To delete an
            intent that is referred to in one or more bots (see <a>how-it-works</a>), you must
            remove those references first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, it provides an example
            reference that shows where the intent is referenced. To remove the reference to the
            intent, either update the bot or delete it. If you get the same exception when you
            attempt to delete the intent again, repeat until the intent has no references and
            the call to <code>DeleteIntent</code> is successful. 
            </para>
             </note> 
            <para>
             This operation requires permission for the <code>lex:DeleteIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntent service method.</param>
            
            <returns>The response from the DeleteIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntent">REST API Reference for DeleteIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteIntentAsync(Amazon.LexModelBuildingService.Model.DeleteIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteIntent operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIntent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntent">REST API Reference for DeleteIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteIntentVersion(Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest)">
            <summary>
            Deletes a specific version of an intent. To delete all versions of a intent, use the
            operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteIntentVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntentVersion service method.</param>
            
            <returns>The response from the DeleteIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntentVersion">REST API Reference for DeleteIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteIntentVersionAsync(Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteIntentVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIntentVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntentVersion">REST API Reference for DeleteIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteSlotType(Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest)">
            <summary>
            Deletes all versions of the slot type, including the <code>$LATEST</code> version.
            To delete a specific version of the slot type, use the operation.
            
             
            <para>
             You can delete a version of a slot type only if it is not referenced. To delete a
            slot type that is referred to in one or more intents, you must remove those references
            first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, the exception provides
            an example reference that shows the intent where the slot type is referenced. To remove
            the reference to the slot type, either update the intent or delete it. If you get
            the same exception when you attempt to delete the slot type again, repeat until the
            slot type has no references and the <code>DeleteSlotType</code> call is successful.
            
            </para>
             </note> 
            <para>
            This operation requires permission for the <code>lex:DeleteSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotType service method.</param>
            
            <returns>The response from the DeleteSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotType">REST API Reference for DeleteSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteSlotTypeAsync(Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSlotType operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSlotType operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotType">REST API Reference for DeleteSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteSlotTypeVersion(Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest)">
            <summary>
            Deletes a specific version of a slot type. To delete all versions of a slot type,
            use the operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotTypeVersion service method.</param>
            
            <returns>The response from the DeleteSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotTypeVersion">REST API Reference for DeleteSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteSlotTypeVersionAsync(Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSlotTypeVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSlotTypeVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotTypeVersion">REST API Reference for DeleteSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteUtterances(Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest)">
            <summary>
            Deletes stored utterances.
            
             
            <para>
            Amazon Lex stores the utterances that users send to your bot unless the <code>childDirected</code>
            field in the bot is set to <code>true</code>. Utterances are stored for 15 days for
            use with the operation, and then stored indefinately for use in improving the ability
            of your bot to respond to user input.
            </para>
             
            <para>
            Use the <code>DeleteStoredUtterances</code> operation to manually delete stored utterances
            for a specific user.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteUtterances</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUtterances service method.</param>
            
            <returns>The response from the DeleteUtterances service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteUtterances">REST API Reference for DeleteUtterances Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.DeleteUtterancesAsync(Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUtterances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUtterances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteUtterances">REST API Reference for DeleteUtterances Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBot(Amazon.LexModelBuildingService.Model.GetBotRequest)">
            <summary>
            Returns metadata information for a specific bot. You must provide the bot name and
            the bot version or alias. 
            
             
            <para>
             The GetBot operation requires permissions for the <code>lex:GetBot</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBot service method.</param>
            
            <returns>The response from the GetBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBot">REST API Reference for GetBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotAsync(Amazon.LexModelBuildingService.Model.GetBotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBot">REST API Reference for GetBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotAlias(Amazon.LexModelBuildingService.Model.GetBotAliasRequest)">
            <summary>
            Returns information about an Amazon Lex bot alias. For more information about aliases,
            see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAlias</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAlias service method.</param>
            
            <returns>The response from the GetBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAlias">REST API Reference for GetBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotAliasAsync(Amazon.LexModelBuildingService.Model.GetBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBotAlias operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBotAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAlias">REST API Reference for GetBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotAliases(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest)">
            <summary>
            Returns a list of aliases for a specified Amazon Lex bot.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAliases</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAliases service method.</param>
            
            <returns>The response from the GetBotAliases service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAliases">REST API Reference for GetBotAliases Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotAliasesAsync(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBotAliases operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBotAliases operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAliases">REST API Reference for GetBotAliases Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotChannelAssociation(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest)">
            <summary>
            Returns information about the association between an Amazon Lex bot and a messaging
            platform.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociation service method.</param>
            
            <returns>The response from the GetBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociation">REST API Reference for GetBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotChannelAssociationAsync(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBotChannelAssociation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociation">REST API Reference for GetBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotChannelAssociations(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest)">
            <summary>
            Returns a list of all of the channels associated with the specified bot. 
            
             
            <para>
            The <code>GetBotChannelAssociations</code> operation requires permissions for the
            <code>lex:GetBotChannelAssociations</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociations service method.</param>
            
            <returns>The response from the GetBotChannelAssociations service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociations">REST API Reference for GetBotChannelAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotChannelAssociationsAsync(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBotChannelAssociations operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociations operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociations">REST API Reference for GetBotChannelAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBots(Amazon.LexModelBuildingService.Model.GetBotsRequest)">
            <summary>
            Returns bot information as follows: 
            
             <ul> <li> 
            <para>
            If you provide the <code>nameContains</code> field, the response includes information
            for the <code>$LATEST</code> version of all bots whose name contains the specified
            string.
            </para>
             </li> <li> 
            <para>
            If you don't specify the <code>nameContains</code> field, the operation returns information
            about the <code>$LATEST</code> version of all of your bots.
            </para>
             </li> </ul> 
            <para>
            This operation requires permission for the <code>lex:GetBots</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBots service method.</param>
            
            <returns>The response from the GetBots service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBots">REST API Reference for GetBots Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotsAsync(Amazon.LexModelBuildingService.Model.GetBotsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBots operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBots operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBots">REST API Reference for GetBots Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotVersions(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest)">
            <summary>
            Gets information about all of the versions of a bot.
            
             
            <para>
            The <code>GetBotVersions</code> operation returns a <code>BotMetadata</code> object
            for each version of a bot. For example, if a bot has three numbered versions, the
            <code>GetBotVersions</code> operation returns four <code>BotMetadata</code> objects
            in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetBotVersions</code> operation always returns at least one version, the
            <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetBotVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotVersions service method.</param>
            
            <returns>The response from the GetBotVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotVersions">REST API Reference for GetBotVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBotVersionsAsync(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBotVersions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBotVersions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotVersions">REST API Reference for GetBotVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinIntent(Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest)">
            <summary>
            Returns information about a built-in intent.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntent service method.</param>
            
            <returns>The response from the GetBuiltinIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntent">REST API Reference for GetBuiltinIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinIntentAsync(Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBuiltinIntent operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntent">REST API Reference for GetBuiltinIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinIntents(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest)">
            <summary>
            Gets a list of built-in intents that meet the specified criteria.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntents</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntents service method.</param>
            
            <returns>The response from the GetBuiltinIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntents">REST API Reference for GetBuiltinIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinIntentsAsync(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBuiltinIntents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntents">REST API Reference for GetBuiltinIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinSlotTypes(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest)">
            <summary>
            Gets a list of built-in slot types that meet the specified criteria.
            
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltInSlotTypes</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinSlotTypes service method.</param>
            
            <returns>The response from the GetBuiltinSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinSlotTypes">REST API Reference for GetBuiltinSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetBuiltinSlotTypesAsync(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBuiltinSlotTypes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBuiltinSlotTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinSlotTypes">REST API Reference for GetBuiltinSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntent(Amazon.LexModelBuildingService.Model.GetIntentRequest)">
            <summary>
            Returns information about an intent. In addition to the intent name, you must specify
            the intent version. 
            
             
            <para>
             This operation requires permissions to perform the <code>lex:GetIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntent service method.</param>
            
            <returns>The response from the GetIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntent">REST API Reference for GetIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntentAsync(Amazon.LexModelBuildingService.Model.GetIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIntent operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIntent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntent">REST API Reference for GetIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntents(Amazon.LexModelBuildingService.Model.GetIntentsRequest)">
            <summary>
            Returns intent information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all intents that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all intents. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetIntents</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntents service method.</param>
            
            <returns>The response from the GetIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntents">REST API Reference for GetIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntentsAsync(Amazon.LexModelBuildingService.Model.GetIntentsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIntents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIntents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntents">REST API Reference for GetIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntentVersions(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest)">
            <summary>
            Gets information about all of the versions of an intent.
            
             
            <para>
            The <code>GetIntentVersions</code> operation returns an <code>IntentMetadata</code>
            object for each version of an intent. For example, if an intent has three numbered
            versions, the <code>GetIntentVersions</code> operation returns four <code>IntentMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetIntentVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetIntentVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntentVersions service method.</param>
            
            <returns>The response from the GetIntentVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntentVersions">REST API Reference for GetIntentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetIntentVersionsAsync(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIntentVersions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIntentVersions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntentVersions">REST API Reference for GetIntentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotType(Amazon.LexModelBuildingService.Model.GetSlotTypeRequest)">
            <summary>
            Returns information about a specific version of a slot type. In addition to specifying
            the slot type name, you must specify the slot type version.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotType service method.</param>
            
            <returns>The response from the GetSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotType">REST API Reference for GetSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotTypeAsync(Amazon.LexModelBuildingService.Model.GetSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSlotType operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSlotType operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotType">REST API Reference for GetSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotTypes(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest)">
            <summary>
            Returns slot type information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all slot types that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all slot types. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetSlotTypes</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypes service method.</param>
            
            <returns>The response from the GetSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypes">REST API Reference for GetSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotTypesAsync(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSlotTypes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSlotTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypes">REST API Reference for GetSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotTypeVersions(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest)">
            <summary>
            Gets information about all versions of a slot type.
            
             
            <para>
            The <code>GetSlotTypeVersions</code> operation returns a <code>SlotTypeMetadata</code>
            object for each version of a slot type. For example, if a slot type has three numbered
            versions, the <code>GetSlotTypeVersions</code> operation returns four <code>SlotTypeMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetSlotTypeVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotTypeVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypeVersions service method.</param>
            
            <returns>The response from the GetSlotTypeVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypeVersions">REST API Reference for GetSlotTypeVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetSlotTypeVersionsAsync(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSlotTypeVersions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSlotTypeVersions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypeVersions">REST API Reference for GetSlotTypeVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetUtterancesView(Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest)">
            <summary>
            Use the <code>GetUtterancesView</code> operation to get information about the utterances
            that your users have made to your bot. You can use this list to tune the utterances
            that your bot responds to.
            
             
            <para>
            For example, say that you have created a bot to order flowers. After your users have
            used your bot for a while, use the <code>GetUtterancesView</code> operation to see
            the requests that they have made and whether they have been successful. You might
            find that the utterance "I want flowers" is not being recognized. You could add this
            utterance to the <code>OrderFlowers</code> intent so that your bot recognizes that
            utterance.
            </para>
             
            <para>
            After you publish a new version of a bot, you can get information about the old version
            and the new so that you can compare the performance across the two versions. 
            </para>
             
            <para>
            Data is available for the last 15 days. You can request information for up to 5 versions
            in each request. The response contains information about a maximum of 100 utterances
            for each version.
            </para>
             
            <para>
            If the bot's <code>childDirected</code> field is set to <code>true</code>, utterances
            for the bot are not stored and cannot be retrieved with the <code>GetUtterancesView</code>
            operation. For more information, see .
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetUtterancesView</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUtterancesView service method.</param>
            
            <returns>The response from the GetUtterancesView service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetUtterancesView">REST API Reference for GetUtterancesView Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.GetUtterancesViewAsync(Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetUtterancesView operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUtterancesView operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetUtterancesView">REST API Reference for GetUtterancesView Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutBot(Amazon.LexModelBuildingService.Model.PutBotRequest)">
            <summary>
            Creates an Amazon Lex conversational bot or replaces an existing bot. When you create
            or update a bot you only required to specify a name. You can use this to add intents
            later, or to remove intents from an existing bot. When you create a bot with a name
            only, the bot is created or updated but Amazon Lex returns the <code/> response <code>FAILED</code>.
            You can build the bot after you add one or more intents. For more information about
            Amazon Lex bots, see <a>how-it-works</a>. 
            
             
            <para>
            If you specify the name of an existing bot, the fields in the request replace the
            existing values in the <code>$LATEST</code> version of the bot. Amazon Lex removes
            any fields that you don't provide values for in the request, except for the <code>idleTTLInSeconds</code>
            and <code>privacySettings</code> fields, which are set to their default values. If
            you don't specify values for required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutBot</code> action. For more
            information, see <a>auth-and-access-control</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBot service method.</param>
            
            <returns>The response from the PutBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBot">REST API Reference for PutBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutBotAsync(Amazon.LexModelBuildingService.Model.PutBotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBot">REST API Reference for PutBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutBotAlias(Amazon.LexModelBuildingService.Model.PutBotAliasRequest)">
            <summary>
            Creates an alias for the specified version of the bot or replaces an alias for the
            specified bot. To change the version of the bot that the alias points to, replace
            the alias. For more information about aliases, see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:PutBotAlias</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBotAlias service method.</param>
            
            <returns>The response from the PutBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBotAlias">REST API Reference for PutBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutBotAliasAsync(Amazon.LexModelBuildingService.Model.PutBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBotAlias operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBotAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBotAlias">REST API Reference for PutBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutIntent(Amazon.LexModelBuildingService.Model.PutIntentRequest)">
            <summary>
            Creates an intent or replaces an existing intent.
            
             
            <para>
            To define the interaction between the user and your bot, you use one or more intents.
            For a pizza ordering bot, for example, you would create an <code>OrderPizza</code>
            intent. 
            </para>
             
            <para>
            To create an intent or replace an existing intent, you must provide the following:
            </para>
             <ul> <li> 
            <para>
            Intent name. For example, <code>OrderPizza</code>.
            </para>
             </li> <li> 
            <para>
            Sample utterances. For example, "Can I order a pizza, please." and "I want to order
            a pizza."
            </para>
             </li> <li> 
            <para>
            Information to be gathered. You specify slot types for the information that your bot
            will request from the user. You can specify standard slot types, such as a date or
            a time, or custom slot types such as the size and crust of a pizza.
            </para>
             </li> <li> 
            <para>
            How the intent will be fulfilled. You can provide a Lambda function or configure the
            intent to return the intent information to the client application. If you use a Lambda
            function, when all of the intent information is available, Amazon Lex invokes your
            Lambda function. If you configure your intent to return the intent information to
            the client application. 
            </para>
             </li> </ul> 
            <para>
            You can specify other optional information in the request, such as:
            </para>
             <ul> <li> 
            <para>
            A confirmation prompt to ask the user to confirm an intent. For example, "Shall I
            order your pizza?"
            </para>
             </li> <li> 
            <para>
            A conclusion statement to send to the user after the intent has been fulfilled. For
            example, "I placed your pizza order."
            </para>
             </li> <li> 
            <para>
            A follow-up prompt that asks the user for additional activity. For example, asking
            "Do you want to order a drink with your pizza?"
            </para>
             </li> </ul> 
            <para>
            If you specify an existing intent name to update the intent, Amazon Lex replaces the
            values in the <code>$LATEST</code> version of the slot type with the values in the
            request. Amazon Lex removes fields that you don't provide in the request. If you don't
            specify the required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            For more information, see <a>how-it-works</a>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutIntent service method.</param>
            
            <returns>The response from the PutIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutIntent">REST API Reference for PutIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutIntentAsync(Amazon.LexModelBuildingService.Model.PutIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutIntent operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutIntent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutIntent">REST API Reference for PutIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutSlotType(Amazon.LexModelBuildingService.Model.PutSlotTypeRequest)">
            <summary>
            Creates a custom slot type or replaces an existing custom slot type.
            
             
            <para>
            To create a custom slot type, specify a name for the slot type and a set of enumeration
            values, which are the values that a slot of this type can assume. For more information,
            see <a>how-it-works</a>.
            </para>
             
            <para>
            If you specify the name of an existing slot type, the fields in the request replace
            the existing values in the <code>$LATEST</code> version of the slot type. Amazon Lex
            removes the fields that you don't provide in the request. If you don't specify required
            fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSlotType service method.</param>
            
            <returns>The response from the PutSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutSlotType">REST API Reference for PutSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.AmazonLexModelBuildingServiceClient.PutSlotTypeAsync(Amazon.LexModelBuildingService.Model.PutSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutSlotType operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutSlotType operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutSlotType">REST API Reference for PutSlotType Operation</seealso>
        </member>
        <member name="T:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService">
             <summary>
             Interface for accessing LexModelBuildingService
            
             Amazon Lex Build-Time Actions 
             <para>
              Amazon Lex is an AWS service for building conversational voice and text interfaces.
             Use these actions to create, update, and delete conversational bots for new and existing
             client applications. 
             </para>
             </summary>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateBotVersion(Amazon.LexModelBuildingService.Model.CreateBotVersionRequest)">
            <summary>
            Creates a new version of the bot based on the <code>$LATEST</code> version. If the
            <code>$LATEST</code> version of this resource hasn't changed since you created the
            last version, Amazon Lex doesn't create a new version. It returns the last created
            version.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the bot. You can't update
            the numbered versions that you create with the <code>CreateBotVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
             This operation requires permission for the <code>lex:CreateBotVersion</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBotVersion service method.</param>
            
            <returns>The response from the CreateBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateBotVersion">REST API Reference for CreateBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateBotVersionAsync(Amazon.LexModelBuildingService.Model.CreateBotVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateBotVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateBotVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateBotVersion">REST API Reference for CreateBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateIntentVersion(Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest)">
            <summary>
            Creates a new version of an intent based on the <code>$LATEST</code> version of the
            intent. If the <code>$LATEST</code> version of this intent hasn't changed since you
            last updated it, Amazon Lex doesn't create a new version. It returns the last version
            you created.
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of the intent. You can't update
            the numbered versions that you create with the <code>CreateIntentVersion</code> operation.
            </para>
             </note> 
            <para>
             When you create a version of an intent, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>lex:CreateIntentVersion</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIntentVersion service method.</param>
            
            <returns>The response from the CreateIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateIntentVersion">REST API Reference for CreateIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateIntentVersionAsync(Amazon.LexModelBuildingService.Model.CreateIntentVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateIntentVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateIntentVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateIntentVersion">REST API Reference for CreateIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateSlotTypeVersion(Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest)">
            <summary>
            Creates a new version of a slot type based on the <code>$LATEST</code> version of
            the specified slot type. If the <code>$LATEST</code> version of this resource has
            not changed since the last version that you created, Amazon Lex doesn't create a new
            version. It returns the last version that you created. 
            
             <note> 
            <para>
            You can update only the <code>$LATEST</code> version of a slot type. You can't update
            the numbered versions that you create with the <code>CreateSlotTypeVersion</code>
            operation.
            </para>
             </note> 
            <para>
            When you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent
            versions increment by 1. For more information, see <a>versioning-intro</a>. 
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:CreateSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSlotTypeVersion service method.</param>
            
            <returns>The response from the CreateSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateSlotTypeVersion">REST API Reference for CreateSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.CreateSlotTypeVersionAsync(Amazon.LexModelBuildingService.Model.CreateSlotTypeVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSlotTypeVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSlotTypeVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateSlotTypeVersion">REST API Reference for CreateSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBot(Amazon.LexModelBuildingService.Model.DeleteBotRequest)">
            <summary>
            Deletes all versions of the bot, including the <code>$LATEST</code> version. To delete
            a specific version of the bot, use the operation.
            
             
            <para>
            If a bot has an alias, you can't delete it. Instead, the <code>DeleteBot</code> operation
            returns a <code>ResourceInUseException</code> exception that includes a reference
            to the alias that refers to the bot. To remove the reference to the bot, delete the
            alias. If you get the same exception again, delete the referring alias until the <code>DeleteBot</code>
            operation is successful.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBot</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBot service method.</param>
            
            <returns>The response from the DeleteBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBot">REST API Reference for DeleteBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotAsync(Amazon.LexModelBuildingService.Model.DeleteBotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBot">REST API Reference for DeleteBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotAlias(Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest)">
            <summary>
            Deletes an alias for the specified bot. 
            
             
            <para>
            You can't delete an alias that is used in the association between a bot and a messaging
            channel. If an alias is used in a channel association, the <code>DeleteBot</code>
            operation returns a <code>ResourceInUseException</code> exception that includes a
            reference to the channel association that refers to the bot. You can remove the reference
            to the alias by deleting the channel association. If you get the same exception again,
            delete the referring association until the <code>DeleteBotAlias</code> operation is
            successful.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotAlias service method.</param>
            
            <returns>The response from the DeleteBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotAlias">REST API Reference for DeleteBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotAliasAsync(Amazon.LexModelBuildingService.Model.DeleteBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBotAlias operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBotAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotAlias">REST API Reference for DeleteBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotChannelAssociation(Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest)">
            <summary>
            Deletes the association between an Amazon Lex bot and a messaging platform.
            
             
            <para>
            This operation requires permission for the <code>lex:DeleteBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotChannelAssociation service method.</param>
            
            <returns>The response from the DeleteBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotChannelAssociation">REST API Reference for DeleteBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotChannelAssociationAsync(Amazon.LexModelBuildingService.Model.DeleteBotChannelAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBotChannelAssociation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBotChannelAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotChannelAssociation">REST API Reference for DeleteBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotVersion(Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest)">
            <summary>
            Deletes a specific version of a bot. To delete all versions of a bot, use the operation.
            
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteBotVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBotVersion service method.</param>
            
            <returns>The response from the DeleteBotVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotVersion">REST API Reference for DeleteBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteBotVersionAsync(Amazon.LexModelBuildingService.Model.DeleteBotVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBotVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBotVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotVersion">REST API Reference for DeleteBotVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteIntent(Amazon.LexModelBuildingService.Model.DeleteIntentRequest)">
            <summary>
            Deletes all versions of the intent, including the <code>$LATEST</code> version. To
            delete a specific version of the intent, use the operation.
            
             
            <para>
             You can delete a version of an intent only if it is not referenced. To delete an
            intent that is referred to in one or more bots (see <a>how-it-works</a>), you must
            remove those references first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, it provides an example
            reference that shows where the intent is referenced. To remove the reference to the
            intent, either update the bot or delete it. If you get the same exception when you
            attempt to delete the intent again, repeat until the intent has no references and
            the call to <code>DeleteIntent</code> is successful. 
            </para>
             </note> 
            <para>
             This operation requires permission for the <code>lex:DeleteIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntent service method.</param>
            
            <returns>The response from the DeleteIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntent">REST API Reference for DeleteIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteIntentAsync(Amazon.LexModelBuildingService.Model.DeleteIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteIntent operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIntent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntent">REST API Reference for DeleteIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteIntentVersion(Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest)">
            <summary>
            Deletes a specific version of an intent. To delete all versions of a intent, use the
            operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteIntentVersion</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIntentVersion service method.</param>
            
            <returns>The response from the DeleteIntentVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntentVersion">REST API Reference for DeleteIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteIntentVersionAsync(Amazon.LexModelBuildingService.Model.DeleteIntentVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteIntentVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIntentVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntentVersion">REST API Reference for DeleteIntentVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteSlotType(Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest)">
            <summary>
            Deletes all versions of the slot type, including the <code>$LATEST</code> version.
            To delete a specific version of the slot type, use the operation.
            
             
            <para>
             You can delete a version of a slot type only if it is not referenced. To delete a
            slot type that is referred to in one or more intents, you must remove those references
            first. 
            </para>
             <note> 
            <para>
             If you get the <code>ResourceInUseException</code> exception, the exception provides
            an example reference that shows the intent where the slot type is referenced. To remove
            the reference to the slot type, either update the intent or delete it. If you get
            the same exception when you attempt to delete the slot type again, repeat until the
            slot type has no references and the <code>DeleteSlotType</code> call is successful.
            
            </para>
             </note> 
            <para>
            This operation requires permission for the <code>lex:DeleteSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotType service method.</param>
            
            <returns>The response from the DeleteSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotType">REST API Reference for DeleteSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteSlotTypeAsync(Amazon.LexModelBuildingService.Model.DeleteSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSlotType operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSlotType operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotType">REST API Reference for DeleteSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteSlotTypeVersion(Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest)">
            <summary>
            Deletes a specific version of a slot type. To delete all versions of a slot type,
            use the operation. 
            
             
            <para>
            This operation requires permissions for the <code>lex:DeleteSlotTypeVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSlotTypeVersion service method.</param>
            
            <returns>The response from the DeleteSlotTypeVersion service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ResourceInUseException">
            The resource that you are attempting to delete is referred to by another resource.
            Use this information to remove references to the resource that you are trying to delete.
            
             
            <para>
            The body of the exception contains a JSON object that describes the resource.
            </para>
             
            <para>
             <code>{ "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> 
            </para>
             
            <para>
             <code>"resourceReference": {</code> 
            </para>
             
            <para>
             <code>"name": <i>string</i>, "version": <i>string</i> } }</code> 
            </para>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotTypeVersion">REST API Reference for DeleteSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteSlotTypeVersionAsync(Amazon.LexModelBuildingService.Model.DeleteSlotTypeVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSlotTypeVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSlotTypeVersion operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteSlotTypeVersion">REST API Reference for DeleteSlotTypeVersion Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteUtterances(Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest)">
            <summary>
            Deletes stored utterances.
            
             
            <para>
            Amazon Lex stores the utterances that users send to your bot unless the <code>childDirected</code>
            field in the bot is set to <code>true</code>. Utterances are stored for 15 days for
            use with the operation, and then stored indefinately for use in improving the ability
            of your bot to respond to user input.
            </para>
             
            <para>
            Use the <code>DeleteStoredUtterances</code> operation to manually delete stored utterances
            for a specific user.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:DeleteUtterances</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUtterances service method.</param>
            
            <returns>The response from the DeleteUtterances service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteUtterances">REST API Reference for DeleteUtterances Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.DeleteUtterancesAsync(Amazon.LexModelBuildingService.Model.DeleteUtterancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUtterances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUtterances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteUtterances">REST API Reference for DeleteUtterances Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBot(Amazon.LexModelBuildingService.Model.GetBotRequest)">
            <summary>
            Returns metadata information for a specific bot. You must provide the bot name and
            the bot version or alias. 
            
             
            <para>
             The GetBot operation requires permissions for the <code>lex:GetBot</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBot service method.</param>
            
            <returns>The response from the GetBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBot">REST API Reference for GetBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotAsync(Amazon.LexModelBuildingService.Model.GetBotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBot">REST API Reference for GetBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotAlias(Amazon.LexModelBuildingService.Model.GetBotAliasRequest)">
            <summary>
            Returns information about an Amazon Lex bot alias. For more information about aliases,
            see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAlias</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAlias service method.</param>
            
            <returns>The response from the GetBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAlias">REST API Reference for GetBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotAliasAsync(Amazon.LexModelBuildingService.Model.GetBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBotAlias operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBotAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAlias">REST API Reference for GetBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotAliases(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest)">
            <summary>
            Returns a list of aliases for a specified Amazon Lex bot.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotAliases</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotAliases service method.</param>
            
            <returns>The response from the GetBotAliases service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAliases">REST API Reference for GetBotAliases Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotAliasesAsync(Amazon.LexModelBuildingService.Model.GetBotAliasesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBotAliases operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBotAliases operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotAliases">REST API Reference for GetBotAliases Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotChannelAssociation(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest)">
            <summary>
            Returns information about the association between an Amazon Lex bot and a messaging
            platform.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetBotChannelAssociation</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociation service method.</param>
            
            <returns>The response from the GetBotChannelAssociation service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociation">REST API Reference for GetBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotChannelAssociationAsync(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBotChannelAssociation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociation">REST API Reference for GetBotChannelAssociation Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotChannelAssociations(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest)">
            <summary>
            Returns a list of all of the channels associated with the specified bot. 
            
             
            <para>
            The <code>GetBotChannelAssociations</code> operation requires permissions for the
            <code>lex:GetBotChannelAssociations</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociations service method.</param>
            
            <returns>The response from the GetBotChannelAssociations service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociations">REST API Reference for GetBotChannelAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotChannelAssociationsAsync(Amazon.LexModelBuildingService.Model.GetBotChannelAssociationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBotChannelAssociations operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBotChannelAssociations operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotChannelAssociations">REST API Reference for GetBotChannelAssociations Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBots(Amazon.LexModelBuildingService.Model.GetBotsRequest)">
            <summary>
            Returns bot information as follows: 
            
             <ul> <li> 
            <para>
            If you provide the <code>nameContains</code> field, the response includes information
            for the <code>$LATEST</code> version of all bots whose name contains the specified
            string.
            </para>
             </li> <li> 
            <para>
            If you don't specify the <code>nameContains</code> field, the operation returns information
            about the <code>$LATEST</code> version of all of your bots.
            </para>
             </li> </ul> 
            <para>
            This operation requires permission for the <code>lex:GetBots</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBots service method.</param>
            
            <returns>The response from the GetBots service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBots">REST API Reference for GetBots Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotsAsync(Amazon.LexModelBuildingService.Model.GetBotsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBots operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBots operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBots">REST API Reference for GetBots Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotVersions(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest)">
            <summary>
            Gets information about all of the versions of a bot.
            
             
            <para>
            The <code>GetBotVersions</code> operation returns a <code>BotMetadata</code> object
            for each version of a bot. For example, if a bot has three numbered versions, the
            <code>GetBotVersions</code> operation returns four <code>BotMetadata</code> objects
            in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetBotVersions</code> operation always returns at least one version, the
            <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetBotVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBotVersions service method.</param>
            
            <returns>The response from the GetBotVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotVersions">REST API Reference for GetBotVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBotVersionsAsync(Amazon.LexModelBuildingService.Model.GetBotVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBotVersions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBotVersions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotVersions">REST API Reference for GetBotVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinIntent(Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest)">
            <summary>
            Returns information about a built-in intent.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntent service method.</param>
            
            <returns>The response from the GetBuiltinIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntent">REST API Reference for GetBuiltinIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinIntentAsync(Amazon.LexModelBuildingService.Model.GetBuiltinIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBuiltinIntent operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntent">REST API Reference for GetBuiltinIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinIntents(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest)">
            <summary>
            Gets a list of built-in intents that meet the specified criteria.
            
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltinIntents</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntents service method.</param>
            
            <returns>The response from the GetBuiltinIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntents">REST API Reference for GetBuiltinIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinIntentsAsync(Amazon.LexModelBuildingService.Model.GetBuiltinIntentsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBuiltinIntents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBuiltinIntents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinIntents">REST API Reference for GetBuiltinIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinSlotTypes(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest)">
            <summary>
            Gets a list of built-in slot types that meet the specified criteria.
            
             
            <para>
            For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot
            Type Reference</a> in the <i>Alexa Skills Kit</i>.
            </para>
             
            <para>
            This operation requires permission for the <code>lex:GetBuiltInSlotTypes</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBuiltinSlotTypes service method.</param>
            
            <returns>The response from the GetBuiltinSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinSlotTypes">REST API Reference for GetBuiltinSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetBuiltinSlotTypesAsync(Amazon.LexModelBuildingService.Model.GetBuiltinSlotTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBuiltinSlotTypes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBuiltinSlotTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBuiltinSlotTypes">REST API Reference for GetBuiltinSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntent(Amazon.LexModelBuildingService.Model.GetIntentRequest)">
            <summary>
            Returns information about an intent. In addition to the intent name, you must specify
            the intent version. 
            
             
            <para>
             This operation requires permissions to perform the <code>lex:GetIntent</code> action.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntent service method.</param>
            
            <returns>The response from the GetIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntent">REST API Reference for GetIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntentAsync(Amazon.LexModelBuildingService.Model.GetIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIntent operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIntent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntent">REST API Reference for GetIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntents(Amazon.LexModelBuildingService.Model.GetIntentsRequest)">
            <summary>
            Returns intent information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all intents that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all intents. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetIntents</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntents service method.</param>
            
            <returns>The response from the GetIntents service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntents">REST API Reference for GetIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntentsAsync(Amazon.LexModelBuildingService.Model.GetIntentsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIntents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIntents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntents">REST API Reference for GetIntents Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntentVersions(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest)">
            <summary>
            Gets information about all of the versions of an intent.
            
             
            <para>
            The <code>GetIntentVersions</code> operation returns an <code>IntentMetadata</code>
            object for each version of an intent. For example, if an intent has three numbered
            versions, the <code>GetIntentVersions</code> operation returns four <code>IntentMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetIntentVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetIntentVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIntentVersions service method.</param>
            
            <returns>The response from the GetIntentVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntentVersions">REST API Reference for GetIntentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetIntentVersionsAsync(Amazon.LexModelBuildingService.Model.GetIntentVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIntentVersions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIntentVersions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetIntentVersions">REST API Reference for GetIntentVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotType(Amazon.LexModelBuildingService.Model.GetSlotTypeRequest)">
            <summary>
            Returns information about a specific version of a slot type. In addition to specifying
            the slot type name, you must specify the slot type version.
            
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotType service method.</param>
            
            <returns>The response from the GetSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotType">REST API Reference for GetSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotTypeAsync(Amazon.LexModelBuildingService.Model.GetSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSlotType operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSlotType operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotType">REST API Reference for GetSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotTypes(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest)">
            <summary>
            Returns slot type information as follows: 
            
             <ul> <li> 
            <para>
            If you specify the <code>nameContains</code> field, returns the <code>$LATEST</code>
            version of all slot types that contain the specified string.
            </para>
             </li> <li> 
            <para>
             If you don't specify the <code>nameContains</code> field, returns information about
            the <code>$LATEST</code> version of all slot types. 
            </para>
             </li> </ul> 
            <para>
             The operation requires permission for the <code>lex:GetSlotTypes</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypes service method.</param>
            
            <returns>The response from the GetSlotTypes service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypes">REST API Reference for GetSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotTypesAsync(Amazon.LexModelBuildingService.Model.GetSlotTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSlotTypes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSlotTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypes">REST API Reference for GetSlotTypes Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotTypeVersions(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest)">
            <summary>
            Gets information about all versions of a slot type.
            
             
            <para>
            The <code>GetSlotTypeVersions</code> operation returns a <code>SlotTypeMetadata</code>
            object for each version of a slot type. For example, if a slot type has three numbered
            versions, the <code>GetSlotTypeVersions</code> operation returns four <code>SlotTypeMetadata</code>
            objects in the response, one for each numbered version and one for the <code>$LATEST</code>
            version. 
            </para>
             
            <para>
            The <code>GetSlotTypeVersions</code> operation always returns at least one version,
            the <code>$LATEST</code> version.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetSlotTypeVersions</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSlotTypeVersions service method.</param>
            
            <returns>The response from the GetSlotTypeVersions service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.NotFoundException">
            The resource specified in the request was not found. Check the resource and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypeVersions">REST API Reference for GetSlotTypeVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetSlotTypeVersionsAsync(Amazon.LexModelBuildingService.Model.GetSlotTypeVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSlotTypeVersions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSlotTypeVersions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetSlotTypeVersions">REST API Reference for GetSlotTypeVersions Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetUtterancesView(Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest)">
            <summary>
            Use the <code>GetUtterancesView</code> operation to get information about the utterances
            that your users have made to your bot. You can use this list to tune the utterances
            that your bot responds to.
            
             
            <para>
            For example, say that you have created a bot to order flowers. After your users have
            used your bot for a while, use the <code>GetUtterancesView</code> operation to see
            the requests that they have made and whether they have been successful. You might
            find that the utterance "I want flowers" is not being recognized. You could add this
            utterance to the <code>OrderFlowers</code> intent so that your bot recognizes that
            utterance.
            </para>
             
            <para>
            After you publish a new version of a bot, you can get information about the old version
            and the new so that you can compare the performance across the two versions. 
            </para>
             
            <para>
            Data is available for the last 15 days. You can request information for up to 5 versions
            in each request. The response contains information about a maximum of 100 utterances
            for each version.
            </para>
             
            <para>
            If the bot's <code>childDirected</code> field is set to <code>true</code>, utterances
            for the bot are not stored and cannot be retrieved with the <code>GetUtterancesView</code>
            operation. For more information, see .
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:GetUtterancesView</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUtterancesView service method.</param>
            
            <returns>The response from the GetUtterancesView service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetUtterancesView">REST API Reference for GetUtterancesView Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.GetUtterancesViewAsync(Amazon.LexModelBuildingService.Model.GetUtterancesViewRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetUtterancesView operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUtterancesView operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetUtterancesView">REST API Reference for GetUtterancesView Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutBot(Amazon.LexModelBuildingService.Model.PutBotRequest)">
            <summary>
            Creates an Amazon Lex conversational bot or replaces an existing bot. When you create
            or update a bot you only required to specify a name. You can use this to add intents
            later, or to remove intents from an existing bot. When you create a bot with a name
            only, the bot is created or updated but Amazon Lex returns the <code/> response <code>FAILED</code>.
            You can build the bot after you add one or more intents. For more information about
            Amazon Lex bots, see <a>how-it-works</a>. 
            
             
            <para>
            If you specify the name of an existing bot, the fields in the request replace the
            existing values in the <code>$LATEST</code> version of the bot. Amazon Lex removes
            any fields that you don't provide values for in the request, except for the <code>idleTTLInSeconds</code>
            and <code>privacySettings</code> fields, which are set to their default values. If
            you don't specify values for required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutBot</code> action. For more
            information, see <a>auth-and-access-control</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBot service method.</param>
            
            <returns>The response from the PutBot service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBot">REST API Reference for PutBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutBotAsync(Amazon.LexModelBuildingService.Model.PutBotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBot">REST API Reference for PutBot Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutBotAlias(Amazon.LexModelBuildingService.Model.PutBotAliasRequest)">
            <summary>
            Creates an alias for the specified version of the bot or replaces an alias for the
            specified bot. To change the version of the bot that the alias points to, replace
            the alias. For more information about aliases, see <a>versioning-aliases</a>.
            
             
            <para>
            This operation requires permissions for the <code>lex:PutBotAlias</code> action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutBotAlias service method.</param>
            
            <returns>The response from the PutBotAlias service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBotAlias">REST API Reference for PutBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutBotAliasAsync(Amazon.LexModelBuildingService.Model.PutBotAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBotAlias operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBotAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutBotAlias">REST API Reference for PutBotAlias Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutIntent(Amazon.LexModelBuildingService.Model.PutIntentRequest)">
            <summary>
            Creates an intent or replaces an existing intent.
            
             
            <para>
            To define the interaction between the user and your bot, you use one or more intents.
            For a pizza ordering bot, for example, you would create an <code>OrderPizza</code>
            intent. 
            </para>
             
            <para>
            To create an intent or replace an existing intent, you must provide the following:
            </para>
             <ul> <li> 
            <para>
            Intent name. For example, <code>OrderPizza</code>.
            </para>
             </li> <li> 
            <para>
            Sample utterances. For example, "Can I order a pizza, please." and "I want to order
            a pizza."
            </para>
             </li> <li> 
            <para>
            Information to be gathered. You specify slot types for the information that your bot
            will request from the user. You can specify standard slot types, such as a date or
            a time, or custom slot types such as the size and crust of a pizza.
            </para>
             </li> <li> 
            <para>
            How the intent will be fulfilled. You can provide a Lambda function or configure the
            intent to return the intent information to the client application. If you use a Lambda
            function, when all of the intent information is available, Amazon Lex invokes your
            Lambda function. If you configure your intent to return the intent information to
            the client application. 
            </para>
             </li> </ul> 
            <para>
            You can specify other optional information in the request, such as:
            </para>
             <ul> <li> 
            <para>
            A confirmation prompt to ask the user to confirm an intent. For example, "Shall I
            order your pizza?"
            </para>
             </li> <li> 
            <para>
            A conclusion statement to send to the user after the intent has been fulfilled. For
            example, "I placed your pizza order."
            </para>
             </li> <li> 
            <para>
            A follow-up prompt that asks the user for additional activity. For example, asking
            "Do you want to order a drink with your pizza?"
            </para>
             </li> </ul> 
            <para>
            If you specify an existing intent name to update the intent, Amazon Lex replaces the
            values in the <code>$LATEST</code> version of the slot type with the values in the
            request. Amazon Lex removes fields that you don't provide in the request. If you don't
            specify the required fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            For more information, see <a>how-it-works</a>.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutIntent</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutIntent service method.</param>
            
            <returns>The response from the PutIntent service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutIntent">REST API Reference for PutIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutIntentAsync(Amazon.LexModelBuildingService.Model.PutIntentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutIntent operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutIntent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutIntent">REST API Reference for PutIntent Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutSlotType(Amazon.LexModelBuildingService.Model.PutSlotTypeRequest)">
            <summary>
            Creates a custom slot type or replaces an existing custom slot type.
            
             
            <para>
            To create a custom slot type, specify a name for the slot type and a set of enumeration
            values, which are the values that a slot of this type can assume. For more information,
            see <a>how-it-works</a>.
            </para>
             
            <para>
            If you specify the name of an existing slot type, the fields in the request replace
            the existing values in the <code>$LATEST</code> version of the slot type. Amazon Lex
            removes the fields that you don't provide in the request. If you don't specify required
            fields, Amazon Lex throws an exception.
            </para>
             
            <para>
            This operation requires permissions for the <code>lex:PutSlotType</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSlotType service method.</param>
            
            <returns>The response from the PutSlotType service method, as returned by LexModelBuildingService.</returns>
            <exception cref="T:Amazon.LexModelBuildingService.Model.BadRequestException">
            The request is not well formed. For example, a value is invalid or a required field
            is missing. Check the field values, and try again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.ConflictException">
            There was a conflict processing the request. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.InternalFailureException">
            An internal Amazon Lex error occurred. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.LimitExceededException">
            The request exceeded a limit. Try your request again.
            </exception>
            <exception cref="T:Amazon.LexModelBuildingService.Model.PreconditionFailedException">
            The checksum of the resource that you are trying to change does not match the checksum
            in the request. Check the resource's checksum and try again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutSlotType">REST API Reference for PutSlotType Operation</seealso>
        </member>
        <member name="M:Amazon.LexModelBuildingService.IAmazonLexModelBuildingService.PutSlotTypeAsync(Amazon.LexModelBuildingService.Model.PutSlotTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutSlotType operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutSlotType operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/PutSlotType">REST API Reference for PutSlotType Operation</seealso>
        </member>
    </members>
</doc>
