<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CognitoIdentityProvider</name>
    </assembly>
    <members>
        <member name="T:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig">
            <summary>
            Configuration for accessing Amazon CognitoIdentityProvider service
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException">
            <summary>
             Common exception for the CognitoIdentityProvider service.
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCognitoIdentityProviderException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCognitoIdentityProviderException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCognitoIdentityProviderException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCognitoIdentityProviderException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCognitoIdentityProviderException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonCognitoIdentityProviderException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AliasAttributeType">
            <summary>
            Constants used for properties of type AliasAttributeType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AliasAttributeType.Email">
            <summary>
            Constant Email for AliasAttributeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AliasAttributeType.Phone_number">
            <summary>
            Constant Phone_number for AliasAttributeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AliasAttributeType.Preferred_username">
            <summary>
            Constant Preferred_username for AliasAttributeType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AliasAttributeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AliasAttributeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AliasAttributeType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.AliasAttributeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AttributeDataType">
            <summary>
            Constants used for properties of type AttributeDataType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AttributeDataType.Boolean">
            <summary>
            Constant Boolean for AttributeDataType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AttributeDataType.DateTime">
            <summary>
            Constant DateTime for AttributeDataType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AttributeDataType.Number">
            <summary>
            Constant Number for AttributeDataType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AttributeDataType.String">
            <summary>
            Constant String for AttributeDataType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AttributeDataType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AttributeDataType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AttributeDataType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.AttributeDataType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AuthFlowType">
            <summary>
            Constants used for properties of type AuthFlowType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.ADMIN_NO_SRP_AUTH">
            <summary>
            Constant ADMIN_NO_SRP_AUTH for AuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.CUSTOM_AUTH">
            <summary>
            Constant CUSTOM_AUTH for AuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.REFRESH_TOKEN">
            <summary>
            Constant REFRESH_TOKEN for AuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.REFRESH_TOKEN_AUTH">
            <summary>
            Constant REFRESH_TOKEN_AUTH for AuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.USER_SRP_AUTH">
            <summary>
            Constant USER_SRP_AUTH for AuthFlowType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AuthFlowType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AuthFlowType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AuthFlowType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.AuthFlowType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.ChallengeNameType">
            <summary>
            Constants used for properties of type ChallengeNameType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.ADMIN_NO_SRP_AUTH">
            <summary>
            Constant ADMIN_NO_SRP_AUTH for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.CUSTOM_CHALLENGE">
            <summary>
            Constant CUSTOM_CHALLENGE for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.DEVICE_PASSWORD_VERIFIER">
            <summary>
            Constant DEVICE_PASSWORD_VERIFIER for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.DEVICE_SRP_AUTH">
            <summary>
            Constant DEVICE_SRP_AUTH for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.NEW_PASSWORD_REQUIRED">
            <summary>
            Constant NEW_PASSWORD_REQUIRED for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.PASSWORD_VERIFIER">
            <summary>
            Constant PASSWORD_VERIFIER for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.SMS_MFA">
            <summary>
            Constant SMS_MFA for ChallengeNameType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeNameType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeNameType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeNameType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.ChallengeNameType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.DeliveryMediumType">
            <summary>
            Constants used for properties of type DeliveryMediumType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DeliveryMediumType.EMAIL">
            <summary>
            Constant EMAIL for DeliveryMediumType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DeliveryMediumType.SMS">
            <summary>
            Constant SMS for DeliveryMediumType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeliveryMediumType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeliveryMediumType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeliveryMediumType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.DeliveryMediumType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType">
            <summary>
            Constants used for properties of type DeviceRememberedStatusType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType.Not_remembered">
            <summary>
            Constant Not_remembered for DeviceRememberedStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType.Remembered">
            <summary>
            Constant Remembered for DeviceRememberedStatusType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.DeviceRememberedStatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType">
            <summary>
            Constants used for properties of type ExplicitAuthFlowsType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.ADMIN_NO_SRP_AUTH">
            <summary>
            Constant ADMIN_NO_SRP_AUTH for ExplicitAuthFlowsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.CUSTOM_AUTH_FLOW_ONLY">
            <summary>
            Constant CUSTOM_AUTH_FLOW_ONLY for ExplicitAuthFlowsType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.MessageActionType">
            <summary>
            Constants used for properties of type MessageActionType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.MessageActionType.RESEND">
            <summary>
            Constant RESEND for MessageActionType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.MessageActionType.SUPPRESS">
            <summary>
            Constant SUPPRESS for MessageActionType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.MessageActionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.MessageActionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.MessageActionType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.MessageActionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.StatusType">
            <summary>
            Constants used for properties of type StatusType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.StatusType.Disabled">
            <summary>
            Constant Disabled for StatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.StatusType.Enabled">
            <summary>
            Constant Enabled for StatusType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.StatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.StatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.StatusType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.StatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.UserImportJobStatusType">
            <summary>
            Constants used for properties of type UserImportJobStatusType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Created">
            <summary>
            Constant Created for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Expired">
            <summary>
            Constant Expired for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Failed">
            <summary>
            Constant Failed for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.InProgress">
            <summary>
            Constant InProgress for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Pending">
            <summary>
            Constant Pending for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Stopped">
            <summary>
            Constant Stopped for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Stopping">
            <summary>
            Constant Stopping for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Succeeded">
            <summary>
            Constant Succeeded for UserImportJobStatusType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserImportJobStatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserImportJobStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserImportJobStatusType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.UserImportJobStatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.UserPoolMfaType">
            <summary>
            Constants used for properties of type UserPoolMfaType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserPoolMfaType.OFF">
            <summary>
            Constant OFF for UserPoolMfaType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserPoolMfaType.ON">
            <summary>
            Constant ON for UserPoolMfaType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserPoolMfaType.OPTIONAL">
            <summary>
            Constant OPTIONAL for UserPoolMfaType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserPoolMfaType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserPoolMfaType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserPoolMfaType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.UserPoolMfaType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.UserStatusType">
            <summary>
            Constants used for properties of type UserStatusType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.ARCHIVED">
            <summary>
            Constant ARCHIVED for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.COMPROMISED">
            <summary>
            Constant COMPROMISED for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.CONFIRMED">
            <summary>
            Constant CONFIRMED for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.FORCE_CHANGE_PASSWORD">
            <summary>
            Constant FORCE_CHANGE_PASSWORD for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.RESET_REQUIRED">
            <summary>
            Constant RESET_REQUIRED for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.UNCONFIRMED">
            <summary>
            Constant UNCONFIRMED for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.UNKNOWN">
            <summary>
            Constant UNKNOWN for UserStatusType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserStatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserStatusType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.UserStatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.VerifiedAttributeType">
            <summary>
            Constants used for properties of type VerifiedAttributeType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.VerifiedAttributeType.Email">
            <summary>
            Constant Email for VerifiedAttributeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.VerifiedAttributeType.Phone_number">
            <summary>
            Constant Phone_number for VerifiedAttributeType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.VerifiedAttributeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.VerifiedAttributeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.VerifiedAttributeType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.VerifiedAttributeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest">
            <summary>
            Container for the parameters to the AddCustomAttributes operation.
            Adds additional user attributes to the user pool schema.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest.CustomAttributes">
            <summary>
            Gets and sets the property CustomAttributes. 
            <para>
            An array of custom attributes, such as Mutable and Name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to add custom attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AddCustomAttributesResponse">
            <summary>
            Represents the response from the server for the request to add custom attributes.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest">
            <summary>
            Container for the parameters to the AdminAddUserToGroup operation.
            Adds the specified user to the specified group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The group name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupResponse">
            <summary>
            This is the response object from the AdminAddUserToGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest">
            <summary>
            Container for the parameters to the AdminConfirmSignUp operation.
            Confirms user registration as an admin without using a confirmation code. Works on
            any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name for which you want to confirm user registration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for which you want to confirm user registration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpResponse">
            <summary>
            Represents the response from the server for the request to confirm registration.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType">
            <summary>
            The type of configuration for creating a new user profile.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType.AllowAdminCreateUserOnly">
            <summary>
            Gets and sets the property AllowAdminCreateUserOnly. 
            <para>
            Set to True if only the administrator is allowed to create user profiles. Set to False
            if users can sign themselves up via an app.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType.InviteMessageTemplate">
            <summary>
            Gets and sets the property InviteMessageTemplate. 
            <para>
            The message template to be used for the welcome message to new users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType.UnusedAccountValidityDays">
            <summary>
            Gets and sets the property UnusedAccountValidityDays. 
            <para>
            The user account expiration limit, in days, after which the account is no longer usable.
            To reset the account after that time limit, you must call AdminCreateUser again, specifying
            "RESEND" for the MessageAction parameter. The default value for this paameter is 7.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest">
            <summary>
            Container for the parameters to the AdminCreateUser operation.
            Creates a new user in the specified user pool and sends a welcome message via email
            or phone (SMS). This message is based on a template that you configured in your call
            to CreateUserPool or UpdateUserPool. This template includes your custom sign-up instructions
            and placeholders for user name and temporary password.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.DesiredDeliveryMediums">
            <summary>
            Gets and sets the property DesiredDeliveryMediums. 
            <para>
            Specify "EMAIL" if email will be used to send the welcome message. Specify "SMS" if
            the phone number will be used. The default value is "SMS". More than one value can
            be specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.ForceAliasCreation">
            <summary>
            Gets and sets the property ForceAliasCreation. 
            <para>
            This parameter is only used if the phone_number_verified or email_verified attribute
            is set to True. Otherwise, it is ignored.
            </para>
             
            <para>
            If this parameter is set to True and the phone number or email address specified in
            the UserAttributes parameter already exists as an alias with a different user, the
            API call will migrate the alias from the previous user to the newly created user.
            The previous user will no longer be able to log in using that alias.
            </para>
             
            <para>
            If this parameter is set to False, the API throws an AliasExistsException error if
            the alias already exists. The default value is False.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.MessageAction">
            <summary>
            Gets and sets the property MessageAction. 
            <para>
            Set to "RESEND" to resend the invitation message to a user that already exists and
            reset the expiration limit on the user's account. Set to "SUPPRESS" to suppress sending
            the message. Only one value can be specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.TemporaryPassword">
            <summary>
            Gets and sets the property TemporaryPassword. 
            <para>
            The user's temporary password. This password must conform to the password policy that
            you specified when you created the user pool.
            </para>
             
            <para>
            The temporary password is valid only once. To complete the Admin Create User flow,
            the user must enter the temporary password in the sign-in page along with a new password
            to be used in all future sign-ins.
            </para>
             
            <para>
            This parameter is not required. If you do not specify a value, Amazon Cognito generates
            one for you.
            </para>
             
            <para>
            The temporary password can only be used until the user account expiration limit that
            you specified when you created the user pool. To reset the account after that time
            limit, you must call AdminCreateUser again, specifying "RESEND" for the MessageAction
            parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs that contain user attributes and attribute values to
            be set for the user to be created. You can create a user without specifying any attributes
            other than Username. However, any attributes that you specify as required (in CreateUserPool
            or in the <b>Attributes</b> tab of the console) must be supplied either by you (in
            your call to AdminCreateUser) or by the user (when he or she signs up in response
            to your welcome message).
            </para>
             
            <para>
            To send a message inviting the user to sign up, you must specify the user's email
            address or phone number. This can be done in your call to AdminCreateUser or in the
            <b>Users</b> tab of the Amazon Cognito console for managing your user pools.
            </para>
             
            <para>
            In your call to AdminCreateUser, you can set the email_verified attribute to True,
            and you can set the phone_number_verified attribute to True. (You cannot do this by
            calling other operations such as AdminUpdateUserAttributes.)
            </para>
             <ul> <li> 
            <para>
             <b>email</b>: The email address of the user to whom the message that contains the
            code and username will be sent. Required if the email_verified attribute is set to
            True, or if "EMAIL" is specified in the DesiredDeliveryMediums parameter.
            </para>
             </li> <li> 
            <para>
             <b>phone_number</b>: The phone number of the user to whom the message that contains
            the code and username will be sent. Required if the phone_number_verified attribute
            is set to True, or if "SMS" is specified in the DesiredDeliveryMediums parameter.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username for the user. Must be unique within the user pool. Must be a UTF-8 string
            between 1 and 128 characters. After the user is created, the username cannot be changed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where the user will be created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.ValidationData">
            <summary>
            Gets and sets the property ValidationData. 
            <para>
            The user's validation data. This is an array of name-value pairs that contain user
            attributes and attribute values that you can use for custom validation, such as restricting
            the types of user accounts that can be registered. For example, you might choose to
            allow or disallow user sign-up based on the user's domain.
            </para>
             
            <para>
            To configure custom validation, you must create a Pre Sign-up Lambda trigger for the
            user pool as described in the Amazon Cognito Developer Guide. The Lambda trigger receives
            the validation data and uses it in the validation process.
            </para>
             
            <para>
            The user's validation data is not persisted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminCreateUserResponse">
            <summary>
            Represents the response from the server to the request to create the user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserResponse.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user returned in the request to create a new user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest">
            <summary>
            Container for the parameters to the AdminDeleteUserAttributes operation.
            Deletes the user attributes in a user pool as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest.UserAttributeNames">
            <summary>
            Gets and sets the property UserAttributeNames. 
            <para>
            An array of strings representing the user attribute names you wish to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user from which you would like to delete attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to delete user attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesResponse">
            <summary>
            Represents the response received from the server for a request to delete user attributes.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest">
            <summary>
            Container for the parameters to the AdminDeleteUser operation.
            Deletes a user as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you wish to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to delete the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserResponse">
            <summary>
            This is the response object from the AdminDeleteUser operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest">
            <summary>
            Container for the parameters to the AdminDisableUser operation.
            Disables the specified user as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you wish to disable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to disable the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDisableUserResponse">
            <summary>
            Represents the response received from the server to disable the user as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest">
            <summary>
            Container for the parameters to the AdminEnableUser operation.
            Enables the specified user as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you wish to ebable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to enable the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminEnableUserResponse">
            <summary>
            Represents the response from the server for the request to enable a user as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest">
            <summary>
            Container for the parameters to the AdminForgetDevice operation.
            Forgets the device, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceResponse">
            <summary>
            This is the response object from the AdminForgetDevice operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest">
            <summary>
            Container for the parameters to the AdminGetDevice operation.
            Gets the device, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceResponse">
            <summary>
            Gets the device response, as an administrator.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceResponse.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            The device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest">
            <summary>
            Container for the parameters to the AdminGetUser operation.
            Gets the specified user by user name in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you wish to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to get information about the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse">
            <summary>
            Represents the response from the server from the request to get the specified user
            as an administrator.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Indicates that the status is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.MFAOptions">
            <summary>
            Gets and sets the property MFAOptions. 
            <para>
            Specifies the options for MFA (e.g., email or phone number).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs representing user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.UserCreateDate">
            <summary>
            Gets and sets the property UserCreateDate. 
            <para>
            The date the user was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.UserLastModifiedDate">
            <summary>
            Gets and sets the property UserLastModifiedDate. 
            <para>
            The date the user was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user about whom you are receiving information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.UserStatus">
            <summary>
            Gets and sets the property UserStatus. 
            <para>
            The user status. Can be one of the following:
            </para>
             <ul> <li> 
            <para>
            UNCONFIRMED - User has been created but not confirmed.
            </para>
             </li> <li> 
            <para>
            CONFIRMED - User has been confirmed.
            </para>
             </li> <li> 
            <para>
            ARCHIVED - User is no longer active.
            </para>
             </li> <li> 
            <para>
            COMPROMISED - User is disabled due to a potential security threat.
            </para>
             </li> <li> 
            <para>
            UNKNOWN - User status is not known.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest">
            <summary>
            Container for the parameters to the AdminInitiateAuth operation.
            Initiates the authentication flow, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.AuthFlow">
            <summary>
            Gets and sets the property AuthFlow. 
            <para>
            The authentication flow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.AuthParameters">
            <summary>
            Gets and sets the property AuthParameters. 
            <para>
            The authentication parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The client app ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            The client app metadata.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The ID of the Amazon Cognito user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse">
            <summary>
            Initiates the authentication response, as an administrator.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse.AuthenticationResult">
            <summary>
            Gets and sets the property AuthenticationResult. 
            <para>
            The result of the authentication response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The name of the challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse.ChallengeParameters">
            <summary>
            Gets and sets the property ChallengeParameters. 
            <para>
            The challenge parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest">
            <summary>
            Container for the parameters to the AdminListDevices operation.
            Lists devices, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the devices request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            The pagination token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListDevicesResponse">
            <summary>
            Lists the device's response, as an administrator.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesResponse.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            The devices in the list of devices response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesResponse.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            The pagination token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest">
            <summary>
            Container for the parameters to the AdminListGroupsForUser operation.
            Lists the groups that the user belongs to.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the request to list groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserResponse">
            <summary>
            This is the response object from the AdminListGroupsForUser operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserResponse.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The groups that the user belongs to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest">
            <summary>
            Container for the parameters to the AdminRemoveUserFromGroup operation.
            Removes the specified user from the specified group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The group name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupResponse">
            <summary>
            This is the response object from the AdminRemoveUserFromGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest">
            <summary>
            Container for the parameters to the AdminResetUserPassword operation.
            Resets the specified user's password in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            When a developer calls this API, the current password is invalidated, so it must be
            changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException
            exception back and should direct the user down the flow to reset the password, which
            is the same as the forgot password flow. In addition, if the user pool has phone verification
            selected and a verified phone number exists for the user, or if email verification
            is selected and a verified email exists for the user, calling this API will also result
            in sending a message to the end user with the code to change their password.
            </para>
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user whose password you wish to reset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to reset the user's password.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordResponse">
            <summary>
            Represents the response from the server to reset a user password as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest">
            <summary>
            Container for the parameters to the AdminRespondToAuthChallenge operation.
            Responds to an authentication challenge, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The name of the challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.ChallengeResponses">
            <summary>
            Gets and sets the property ChallengeResponses. 
            <para>
            The challenge response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The client ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The ID of the Amazon Cognito user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse">
            <summary>
            Responds to the authentication challenge, as an administrator.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse.AuthenticationResult">
            <summary>
            Gets and sets the property AuthenticationResult. 
            <para>
            The result returned by the server in response to the authentication request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The name of the challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse.ChallengeParameters">
            <summary>
            Gets and sets the property ChallengeParameters. 
            <para>
            The challenge parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest">
            <summary>
            Container for the parameters to the AdminSetUserSettings operation.
            Sets all the user settings for a specified user name. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest.MFAOptions">
            <summary>
            Gets and sets the property MFAOptions. 
            <para>
            Specifies the options for MFA (e.g., email or phone number).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user for whom you wish to set user settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to set the user's settings, such
            as MFA options.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsResponse">
            <summary>
            Represents the response from the server to set user settings as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest">
            <summary>
            Container for the parameters to the AdminUpdateDeviceStatus operation.
            Updates the device status as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest.DeviceRememberedStatus">
            <summary>
            Gets and sets the property DeviceRememberedStatus. 
            <para>
            The status indicating whether a device has been remembered or not.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID&gt;
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusResponse">
            <summary>
            The status response from the request to update the device, as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest">
            <summary>
            Container for the parameters to the AdminUpdateUserAttributes operation.
            Updates the specified user's attributes, including developer attributes, as an administrator.
            Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs representing user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user for whom you want to update user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to update user attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesResponse">
            <summary>
            Represents the response from the server for the request to update user attributes
            as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest">
            <summary>
            Container for the parameters to the AdminUserGlobalSignOut operation.
            Signs out users from all devices, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutResponse">
            <summary>
            The global sign-out response, as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.String)">
            <summary>
            Constructs a new AliasExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AliasExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AliasExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AliasExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AliasExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AliasExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AttributeType">
            <summary>
            Specifies whether the attribute is standard or custom.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AttributeType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AttributeType.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType">
            <summary>
            The result type of the authentication result.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token of the authentication result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.ExpiresIn">
            <summary>
            Gets and sets the property ExpiresIn. 
            <para>
            The expiration period of the authentication result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.IdToken">
            <summary>
            Gets and sets the property IdToken. 
            <para>
            The ID token of the authentication result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.NewDeviceMetadata">
            <summary>
            Gets and sets the property NewDeviceMetadata. 
            <para>
            The new device metadata from an authentication result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.RefreshToken">
            <summary>
            Gets and sets the property RefreshToken. 
            <para>
            The refresh token of the authentication result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.TokenType">
            <summary>
            Gets and sets the property TokenType. 
            <para>
            The token type of the authentication result.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest">
            <summary>
            Container for the parameters to the ChangePassword operation.
            Changes the password for a specified user in a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token in the change password request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest.PreviousPassword">
            <summary>
            Gets and sets the property PreviousPassword. 
            <para>
            The old password in the change password request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest.ProposedPassword">
            <summary>
            Gets and sets the property ProposedPassword. 
            <para>
            The new password in the change password request.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ChangePasswordResponse">
            <summary>
            The response from the server to the change password request.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryDetailsType">
            <summary>
            The type of code delivery details being returned from the server.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CodeDeliveryDetailsType.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the attribute in the code delivery details type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CodeDeliveryDetailsType.DeliveryMedium">
            <summary>
            Gets and sets the property DeliveryMedium. 
            <para>
            The delivery medium (email message or phone number).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CodeDeliveryDetailsType.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination for the code delivery details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.String)">
            <summary>
            Constructs a new CodeDeliveryFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CodeDeliveryFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of CodeDeliveryFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CodeDeliveryFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CodeDeliveryFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CodeDeliveryFailureException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new CodeMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CodeMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of CodeMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CodeMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CodeMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CodeMismatchException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentModificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConcurrentModificationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest">
            <summary>
            Container for the parameters to the ConfirmDevice operation.
            Confirms tracking of the device. This API call is the call that beings device tracking.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The device name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest.DeviceSecretVerifierConfig">
            <summary>
            Gets and sets the property DeviceSecretVerifierConfig. 
            <para>
            The configuration of the device secret verifier.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceResponse">
            <summary>
            Confirms the device response.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceResponse.UserConfirmationNecessary">
            <summary>
            Gets and sets the property UserConfirmationNecessary. 
            <para>
            Indicates whether the user confirmation is necessary to confirm the device response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest">
            <summary>
            Container for the parameters to the ConfirmForgotPassword operation.
            Allows a user to enter a code provided when they reset their password to update their
            password.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.ConfirmationCode">
            <summary>
            Gets and sets the property ConfirmationCode. 
            <para>
            The confirmation code sent by a user's request to retrieve a forgotten password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password sent by sent by a user's request to retrieve a forgotten password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.SecretHash">
            <summary>
            Gets and sets the property SecretHash. 
            <para>
            A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user for whom you want to enter a code to retrieve a forgotten
            password.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordResponse">
            <summary>
            The response from the server that results from a user's request to retrieve a forgotten
            password.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest">
            <summary>
            Container for the parameters to the ConfirmSignUp operation.
            Confirms registration of a user and handles the existing alias from a previous user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.ConfirmationCode">
            <summary>
            Gets and sets the property ConfirmationCode. 
            <para>
            The confirmation code sent by a user's request to confirm registration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.ForceAliasCreation">
            <summary>
            Gets and sets the property ForceAliasCreation. 
            <para>
            Boolean to be specified to force user confirmation irrespective of existing alias.
            By default set to False. If this parameter is set to True and the phone number/email
            used for sign up confirmation already exists as an alias with a different user, the
            API call will migrate the alias from the previous user to the newly created user being
            confirmed. If set to False, the API will throw an <b>AliasExistsException</b> error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.SecretHash">
            <summary>
            Gets and sets the property SecretHash. 
            <para>
            A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user whose registration you wish to confirm.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpResponse">
            <summary>
            Represents the response from the server for the registration confirmation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest">
            <summary>
            Container for the parameters to the CreateGroup operation.
            Creates a new group in the specified user pool.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string containing the description of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group. Must be unique.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest.Precedence">
            <summary>
            Gets and sets the property Precedence. 
            <para>
            A nonnegative integer value that specifies the precedence of this group relative to
            the other groups that a user can belong to in the user pool. Zero is the highest precedence
            value. Groups with lower <code>Precedence</code> values take precedence over groups
            with higher or null <code>Precedence</code> values. If a user belongs to two or more
            groups, it is the group with the lowest precedence value whose role ARN will be used
            in the <code>cognito:roles</code> and <code>cognito:preferred_role</code> claims in
            the user's tokens.
            </para>
             
            <para>
            Two groups can have the same <code>Precedence</code> value. If this happens, neither
            group takes precedence over the other. If two groups with the same <code>Precedence</code>
            have the same role ARN, that role is used in the <code>cognito:preferred_role</code>
            claim in tokens for users in each group. If the two groups have different role ARNs,
            the <code>cognito:preferred_role</code> claim is not set in users' tokens.
            </para>
             
            <para>
            The default <code>Precedence</code> value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The role ARN for the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateGroupResponse">
            <summary>
            This is the response object from the CreateGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupResponse.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The group object for the group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest">
            <summary>
            Container for the parameters to the CreateUserImportJob operation.
            Creates the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest.CloudWatchLogsRoleArn">
            <summary>
            Gets and sets the property CloudWatchLogsRoleArn. 
            <para>
            The role ARN for the Amazon CloudWatch Logging role for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The job name for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobResponse">
            <summary>
            Represents the response from the server to the request to create the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobResponse.UserImportJob">
            <summary>
            Gets and sets the property UserImportJob. 
            <para>
            The job object that represents the user import job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest">
            <summary>
            Container for the parameters to the CreateUserPoolClient operation.
            Creates the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.ClientName">
            <summary>
            Gets and sets the property ClientName. 
            <para>
            The client name for the user pool client you would like to create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.ExplicitAuthFlows">
            <summary>
            Gets and sets the property ExplicitAuthFlows. 
            <para>
            The explicit authentication flows.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.GenerateSecret">
            <summary>
            Gets and sets the property GenerateSecret. 
            <para>
            Boolean to specify whether you want to generate a secret for the user pool client
            being created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.ReadAttributes">
            <summary>
            Gets and sets the property ReadAttributes. 
            <para>
            The read attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.RefreshTokenValidity">
            <summary>
            Gets and sets the property RefreshTokenValidity. 
            <para>
            The validity of the refresh token, in days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to create a user pool client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.WriteAttributes">
            <summary>
            Gets and sets the property WriteAttributes. 
            <para>
            The write attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientResponse">
            <summary>
            Represents the response from the server to create a user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientResponse.UserPoolClient">
            <summary>
            Gets and sets the property UserPoolClient. 
            <para>
            The user pool client that was just created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest">
            <summary>
            Container for the parameters to the CreateUserPool operation.
            Creates a new Amazon Cognito user pool and sets the password policy for the pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.AdminCreateUserConfig">
            <summary>
            Gets and sets the property AdminCreateUserConfig. 
            <para>
            The configuration for AdminCreateUser requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.AliasAttributes">
            <summary>
            Gets and sets the property AliasAttributes. 
            <para>
            Attributes supported as an alias for this user pool. Possible values: <b>phone_number</b>,
            <b>email</b>, or <b>preferred_username</b>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.AutoVerifiedAttributes">
            <summary>
            Gets and sets the property AutoVerifiedAttributes. 
            <para>
            The attributes to be auto-verified. Possible values: <b>email</b>, <b>phone_number</b>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.DeviceConfiguration">
            <summary>
            Gets and sets the property DeviceConfiguration. 
            <para>
            The device configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.EmailConfiguration">
            <summary>
            Gets and sets the property EmailConfiguration. 
            <para>
            The email configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.EmailVerificationMessage">
            <summary>
            Gets and sets the property EmailVerificationMessage. 
            <para>
            A string representing the email verification message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.EmailVerificationSubject">
            <summary>
            Gets and sets the property EmailVerificationSubject. 
            <para>
            A string representing the email verification subject.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.LambdaConfig">
            <summary>
            Gets and sets the property LambdaConfig. 
            <para>
            The Lambda trigger configuration information for the new user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.MfaConfiguration">
            <summary>
            Gets and sets the property MfaConfiguration. 
            <para>
            Specifies MFA configuration details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
            The policies associated with the new user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.PoolName">
            <summary>
            Gets and sets the property PoolName. 
            <para>
            A string used to name the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.Schema">
            <summary>
            Gets and sets the property Schema. 
            <para>
            An array of schema attributes for the new user pool. These attributes can be standard
            or custom attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.SmsAuthenticationMessage">
            <summary>
            Gets and sets the property SmsAuthenticationMessage. 
            <para>
            A string representing the SMS authentication message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.SmsConfiguration">
            <summary>
            Gets and sets the property SmsConfiguration. 
            <para>
            The SMS configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.SmsVerificationMessage">
            <summary>
            Gets and sets the property SmsVerificationMessage. 
            <para>
            A string representing the SMS verification message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.UserPoolTags">
            <summary>
            Gets and sets the property UserPoolTags. 
            <para>
            The cost allocation tags for the user pool. For more information, see <a href="http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-cost-allocation-tagging.html">Adding
            Cost Allocation Tags to Your User Pool</a> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserPoolResponse">
            <summary>
            Represents the response from the server for the request to create a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolResponse.UserPool">
            <summary>
            Gets and sets the property UserPool. 
            <para>
            A container for the user pool details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest">
            <summary>
            Container for the parameters to the DeleteGroup operation.
            Deletes a group. Currently only groups with no members can be deleted.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteGroupResponse">
            <summary>
            This is the response object from the DeleteGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest">
            <summary>
            Container for the parameters to the DeleteUserAttributes operation.
            Deletes the attributes for a user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token used in the request to delete user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest.UserAttributeNames">
            <summary>
            Gets and sets the property UserAttributeNames. 
            <para>
            An array of strings representing the user attribute names you wish to delete.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesResponse">
            <summary>
            Represents the response from the server to delete user attributes.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest">
            <summary>
            Container for the parameters to the DeleteUserPoolClient operation.
            Allows the developer to delete the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to delete the client.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientResponse">
            <summary>
            This is the response object from the DeleteUserPoolClient operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest">
            <summary>
            Container for the parameters to the DeleteUserPool operation.
            Deletes the specified Amazon Cognito user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolResponse">
            <summary>
            This is the response object from the DeleteUserPool operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserRequest">
            <summary>
            Container for the parameters to the DeleteUser operation.
            Allows a user to delete one's self.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token from a request to delete a user.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DeleteUserRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserResponse">
            <summary>
            This is the response object from the DeleteUser operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest">
            <summary>
            Container for the parameters to the DescribeUserImportJob operation.
            Describes the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobResponse">
            <summary>
            Represents the response from the server to the request to describe the user import
            job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobResponse.UserImportJob">
            <summary>
            Gets and sets the property UserImportJob. 
            <para>
            The job object that represents the user import job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest">
            <summary>
            Container for the parameters to the DescribeUserPoolClient operation.
            Client method for returning the configuration information and metadata of the specified
            user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool you want to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientResponse">
            <summary>
            Represents the response from the server from a request to describe the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientResponse.UserPoolClient">
            <summary>
            Gets and sets the property UserPoolClient. 
            <para>
            The user pool client from a server response to describe the user pool client.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest">
            <summary>
            Container for the parameters to the DescribeUserPool operation.
            Returns the configuration information and metadata of the specified user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool you want to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolResponse">
            <summary>
            Represents the response to describe the user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolResponse.UserPool">
            <summary>
            Gets and sets the property UserPool. 
            <para>
            The container of metadata returned by the server to describe the pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeviceConfigurationType">
            <summary>
            The type of configuration for the user pool's device tracking.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceConfigurationType.ChallengeRequiredOnNewDevice">
            <summary>
            Gets and sets the property ChallengeRequiredOnNewDevice. 
            <para>
            Indicates whether a challenge is required on a new device. Only applicable to a new
            device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceConfigurationType.DeviceOnlyRememberedOnUserPrompt">
            <summary>
            Gets and sets the property DeviceOnlyRememberedOnUserPrompt. 
            <para>
            If true, a device is only remembered on user prompt.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeviceSecretVerifierConfigType">
            <summary>
            The device verifier against which it will be authenticated.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceSecretVerifierConfigType.PasswordVerifier">
            <summary>
            Gets and sets the property PasswordVerifier. 
            <para>
            The password verifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceSecretVerifierConfigType.Salt">
            <summary>
            Gets and sets the property Salt. 
            <para>
            The salt.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeviceType">
            <summary>
            The device type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceType.DeviceAttributes">
            <summary>
            Gets and sets the property DeviceAttributes. 
            <para>
            The device attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceType.DeviceCreateDate">
            <summary>
            Gets and sets the property DeviceCreateDate. 
            <para>
            The creation date of the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceType.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceType.DeviceLastAuthenticatedDate">
            <summary>
            Gets and sets the property DeviceLastAuthenticatedDate. 
            <para>
            The date in which the device was last authenticated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceType.DeviceLastModifiedDate">
            <summary>
            Gets and sets the property DeviceLastModifiedDate. 
            <para>
            The last modified date of the device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.EmailConfigurationType">
            <summary>
            The email configuration type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EmailConfigurationType.ReplyToEmailAddress">
            <summary>
            Gets and sets the property ReplyToEmailAddress. 
            <para>
            The REPLY-TO email address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EmailConfigurationType.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the email source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.String)">
            <summary>
            Constructs a new ExpiredCodeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ExpiredCodeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.Exception)">
            <summary>
            Construct instance of ExpiredCodeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ExpiredCodeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ExpiredCodeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ExpiredCodeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest">
            <summary>
            Container for the parameters to the ForgetDevice operation.
            Forgets the specified device.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token for the forgotten device request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ForgetDeviceResponse">
            <summary>
            This is the response object from the ForgetDevice operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest">
            <summary>
            Container for the parameters to the ForgotPassword operation.
            Retrieves the password for the specified client ID or username.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.SecretHash">
            <summary>
            Gets and sets the property SecretHash. 
            <para>
            A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user for whom you want to enter a code to reset a forgotten password.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ForgotPasswordResponse">
            <summary>
            Respresents the response from the server regarding the request to reset a password.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordResponse.CodeDeliveryDetails">
            <summary>
            Gets and sets the property CodeDeliveryDetails. 
            <para>
            The code delivery details returned by the server in response to the request to reset
            a password.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest">
            <summary>
            Container for the parameters to the GetCSVHeader operation.
            Gets the header information for the .csv file to be used as input for the user import
            job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are to be imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetCSVHeaderResponse">
            <summary>
            Represents the response from the server to the request to get the header information
            for the .csv file for the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetCSVHeaderResponse.CSVHeader">
            <summary>
            Gets and sets the property CSVHeader. 
            <para>
            The header information for the .csv file for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetCSVHeaderResponse.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are to be imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetDeviceRequest">
            <summary>
            Container for the parameters to the GetDevice operation.
            Gets the device.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetDeviceRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetDeviceRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetDeviceResponse">
            <summary>
            Gets the device response.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetDeviceResponse.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            The device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetGroupRequest">
            <summary>
            Container for the parameters to the GetGroup operation.
            Gets a group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetGroupResponse">
            <summary>
            This is the response object from the GetGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetGroupResponse.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The group object for the group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest">
            <summary>
            Container for the parameters to the GetUserAttributeVerificationCode operation.
            Gets the user attribute verification code for the specified attribute name.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token returned by the server response to get the user attribute verification
            code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The attribute name returned by the server response to get the user attribute verification
            code.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeResponse">
            <summary>
            The verification code response returned by the server response to get the user attribute
            verification code.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeResponse.CodeDeliveryDetails">
            <summary>
            Gets and sets the property CodeDeliveryDetails. 
            <para>
            The code delivery details returned by the server in response to the request to get
            the user attribute verification code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUserRequest">
            <summary>
            Container for the parameters to the GetUser operation.
            Gets the user attributes and metadata for a user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token returned by the server response to get information about the user.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GetUserRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUserResponse">
            <summary>
            Represents the response from the server from the request to get information about
            the user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserResponse.MFAOptions">
            <summary>
            Gets and sets the property MFAOptions. 
            <para>
            Specifies the options for MFA (e.g., email or phone number).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserResponse.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs representing user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserResponse.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you wish to retrieve from the get user request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest">
            <summary>
            Container for the parameters to the GlobalSignOut operation.
            Signs out users from all devices.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GlobalSignOutResponse">
            <summary>
            The response to the request to sign out all devices.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GroupExistsException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.String)">
            <summary>
            Constructs a new GroupExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of GroupExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of GroupExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GroupExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GroupExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the GroupExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GroupType">
            <summary>
            The group type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date the group was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string containing the description of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date the group was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.Precedence">
            <summary>
            Gets and sets the property Precedence. 
            <para>
            A nonnegative integer value that specifies the precedence of this group relative to
            the other groups that a user can belong to in the user pool. If a user belongs to
            two or more groups, it is the group with the highest precedence whose role ARN will
            be used in the <code>cognito:roles</code> and <code>cognito:preferred_role</code>
            claims in the user's tokens. Groups with higher <code>Precedence</code> values take
            precedence over groups with lower <code>Precedence</code> values or with null <code>Precedence</code>
            values.
            </para>
             
            <para>
            Two groups can have the same <code>Precedence</code> value. If this happens, neither
            group takes precedence over the other. If two groups with the same <code>Precedence</code>
            have the same role ARN, that role is used in the <code>cognito:preferred_role</code>
            claim in tokens for users in each group. If the two groups have different role ARNs,
            the <code>cognito:preferred_role</code> claim is not set in users' tokens.
            </para>
             
            <para>
            The default <code>Precedence</code> value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The role ARN for the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest">
            <summary>
            Container for the parameters to the InitiateAuth operation.
            Initiates the authentication flow.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.AuthFlow">
            <summary>
            Gets and sets the property AuthFlow. 
            <para>
            The authentication flow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.AuthParameters">
            <summary>
            Gets and sets the property AuthParameters. 
            <para>
            The authentication parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The client ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            The client app's metadata.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse">
            <summary>
            Initiates the authentication response.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse.AuthenticationResult">
            <summary>
            Gets and sets the property AuthenticationResult. 
            <para>
            The result returned by the server in response to the request to initiate authentication.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The name of the challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse.ChallengeParameters">
            <summary>
            Gets and sets the property ChallengeParameters. 
            <para>
            The challenge parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalErrorException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidEmailRoleAccessPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidEmailRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidEmailRoleAccessPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEmailRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEmailRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidEmailRoleAccessPolicyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidLambdaResponseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidLambdaResponseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidLambdaResponseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidLambdaResponseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidLambdaResponseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidLambdaResponseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPasswordException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPasswordException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPasswordException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPasswordException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPasswordException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidPasswordException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSmsRoleAccessPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSmsRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSmsRoleAccessPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSmsRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSmsRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSmsRoleAccessPolicyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSmsRoleTrustRelationshipException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSmsRoleTrustRelationshipException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSmsRoleTrustRelationshipException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSmsRoleTrustRelationshipException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSmsRoleTrustRelationshipException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSmsRoleTrustRelationshipException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidUserPoolConfigurationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidUserPoolConfigurationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidUserPoolConfigurationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidUserPoolConfigurationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidUserPoolConfigurationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidUserPoolConfigurationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.LambdaConfigType">
            <summary>
            Specifies the type of configuration for AWS Lambda triggers.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.CreateAuthChallenge">
            <summary>
            Gets and sets the property CreateAuthChallenge. 
            <para>
            Creates an authentication challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.CustomMessage">
            <summary>
            Gets and sets the property CustomMessage. 
            <para>
            A custom Message AWS Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.DefineAuthChallenge">
            <summary>
            Gets and sets the property DefineAuthChallenge. 
            <para>
            Defines the authentication challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.PostAuthentication">
            <summary>
            Gets and sets the property PostAuthentication. 
            <para>
            A post-authentication AWS Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.PostConfirmation">
            <summary>
            Gets and sets the property PostConfirmation. 
            <para>
            A post-confirmation AWS Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.PreAuthentication">
            <summary>
            Gets and sets the property PreAuthentication. 
            <para>
            A pre-authentication AWS Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.PreSignUp">
            <summary>
            Gets and sets the property PreSignUp. 
            <para>
            A pre-registration AWS Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.VerifyAuthChallengeResponse">
            <summary>
            Gets and sets the property VerifyAuthChallengeResponse. 
            <para>
            Verifies the authentication challenge response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListDevicesRequest">
            <summary>
            Container for the parameters to the ListDevices operation.
            Lists the devices.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListDevicesRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access tokens for the request to list devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListDevicesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the device request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListDevicesRequest.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            The pagination token for the list request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListDevicesResponse">
            <summary>
            Represents the response to list devices.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListDevicesResponse.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            The devices returned in the list devices response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListDevicesResponse.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            The pagination token for the list device response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListGroupsRequest">
            <summary>
            Container for the parameters to the ListGroups operation.
            Lists the groups associated with a user pool.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the request to list groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListGroupsResponse">
            <summary>
            This is the response object from the ListGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsResponse.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The group objects for the groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest">
            <summary>
            Container for the parameters to the ListUserImportJobs operation.
            Lists the user import jobs.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of import jobs you want the request to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            An identifier that was returned from the previous call to ListUserImportJobs, which
            can be used to return the next set of import jobs in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsResponse">
            <summary>
            Represents the response from the server to the request to list the user import jobs.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsResponse.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            An identifier that can be used to return the next set of user import jobs in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsResponse.UserImportJobs">
            <summary>
            Gets and sets the property UserImportJobs. 
            <para>
            The user import jobs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest">
            <summary>
            Container for the parameters to the ListUserPoolClients operation.
            Lists the clients that have been created for the specified user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results you want the request to return when listing the user
            pool clients.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to list user pool clients.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsResponse">
            <summary>
            Represents the response from the server that lists user pool clients.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsResponse.UserPoolClients">
            <summary>
            Gets and sets the property UserPoolClients. 
            <para>
            The user pool clients in the response that lists user pool clients.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest">
            <summary>
            Container for the parameters to the ListUserPools operation.
            Lists the user pools associated with an AWS account.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results you want the request to return when listing the user
            pools.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserPoolsResponse">
            <summary>
            Represents the response to list user pools.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolsResponse.UserPools">
            <summary>
            Gets and sets the property UserPools. 
            <para>
            The user pools from the response to list users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest">
            <summary>
            Container for the parameters to the ListUsersInGroup operation.
            Lists the users in the specified group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the request to list users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupResponse">
            <summary>
            This is the response object from the ListUsersInGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupResponse.Users">
            <summary>
            Gets and sets the property Users. 
            <para>
            The users returned in the request to list users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUsersRequest">
            <summary>
            Container for the parameters to the ListUsers operation.
            Lists the users in the Amazon Cognito user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersRequest.AttributesToGet">
            <summary>
            Gets and sets the property AttributesToGet. 
            <para>
            The attributes to get from the request to list users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            The filter for the list users request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the request to list users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersRequest.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for which you want to list users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUsersResponse">
            <summary>
            The response from the request to list users.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersResponse.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersResponse.Users">
            <summary>
            Gets and sets the property Users. 
            <para>
            The users returned in the request to list users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.MessageTemplateType">
            <summary>
            The message template structure.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.MessageTemplateType.EmailMessage">
            <summary>
            Gets and sets the property EmailMessage. 
            <para>
            The message template for email messages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.MessageTemplateType.EmailSubject">
            <summary>
            Gets and sets the property EmailSubject. 
            <para>
            The subject line for email messages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.MessageTemplateType.SMSMessage">
            <summary>
            Gets and sets the property SMSMessage. 
            <para>
            The message template for SMS messages.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new MFAMethodNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MFAMethodNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of MFAMethodNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MFAMethodNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MFAMethodNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MFAMethodNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.MFAOptionType">
            <summary>
            Specifies the different settings for multi-factor authentication (MFA).
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.MFAOptionType.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The attribute name of the MFA option type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.MFAOptionType.DeliveryMedium">
            <summary>
            Gets and sets the property DeliveryMedium. 
            <para>
            The delivery medium (email message or SMS message) to send the MFA code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.NewDeviceMetadataType">
            <summary>
            The new device metadata type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NewDeviceMetadataType.DeviceGroupKey">
            <summary>
            Gets and sets the property DeviceGroupKey. 
            <para>
            The device group key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NewDeviceMetadataType.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.String)">
            <summary>
            Constructs a new NotAuthorizedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NotAuthorizedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.NumberAttributeConstraintsType">
            <summary>
            The minimum and maximum value of an attribute that is of the number data type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NumberAttributeConstraintsType.MaxValue">
            <summary>
            Gets and sets the property MaxValue. 
            <para>
            The maximum value of an attribute that is of the number data type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NumberAttributeConstraintsType.MinValue">
            <summary>
            Gets and sets the property MinValue. 
            <para>
            The minimum value of an attribute that is of the number data type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType">
            <summary>
            The password policy type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.MinimumLength">
            <summary>
            Gets and sets the property MinimumLength. 
            <para>
            The minimum length of the password policy that you have set. Cannot be less than 6.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.RequireLowercase">
            <summary>
            Gets and sets the property RequireLowercase. 
            <para>
            In the password policy that you have set, refers to whether you have required users
            to use at least one lowercase letter in their password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.RequireNumbers">
            <summary>
            Gets and sets the property RequireNumbers. 
            <para>
            In the password policy that you have set, refers to whether you have required users
            to use at least one number in their password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.RequireSymbols">
            <summary>
            Gets and sets the property RequireSymbols. 
            <para>
            In the password policy that you have set, refers to whether you have required users
            to use at least one symbol in their password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.RequireUppercase">
            <summary>
            Gets and sets the property RequireUppercase. 
            <para>
            In the password policy that you have set, refers to whether you have required users
            to use at least one uppercase letter in their password.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new PasswordResetRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PasswordResetRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of PasswordResetRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PasswordResetRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PasswordResetRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PasswordResetRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.String)">
            <summary>
            Constructs a new PreconditionNotMetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.Exception)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PreconditionNotMetException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest">
            <summary>
            Container for the parameters to the ResendConfirmationCode operation.
            Resends the confirmation (for confirmation of registration) to a specific user in
            the user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.SecretHash">
            <summary>
            Gets and sets the property SecretHash. 
            <para>
            A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user to whom you wish to resend a confirmation code.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeResponse">
            <summary>
            The response from the server when the Amazon Cognito Your User Pools service makes
            the request to resend a confirmation code.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeResponse.CodeDeliveryDetails">
            <summary>
            Gets and sets the property CodeDeliveryDetails. 
            <para>
            The code delivery details returned by the server in response to the request to resend
            the confirmation code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest">
            <summary>
            Container for the parameters to the RespondToAuthChallenge operation.
            Responds to the authentication challenge.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The name of the challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.ChallengeResponses">
            <summary>
            Gets and sets the property ChallengeResponses. 
            <para>
            The responses to the authentication challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The client ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse">
            <summary>
            The response to respond to the authentication challenge.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse.AuthenticationResult">
            <summary>
            Gets and sets the property AuthenticationResult. 
            <para>
            The result returned by the server in response to the request to respond to the authentication
            challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The challenge name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse.ChallengeParameters">
            <summary>
            Gets and sets the property ChallengeParameters. 
            <para>
            The challenge parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType">
            <summary>
            Contains information about the schema attribute.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.AttributeDataType">
            <summary>
            Gets and sets the property AttributeDataType. 
            <para>
            The attribute data type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.DeveloperOnlyAttribute">
            <summary>
            Gets and sets the property DeveloperOnlyAttribute. 
            <para>
            Specifies whether the attribute type is developer only.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.Mutable">
            <summary>
            Gets and sets the property Mutable. 
            <para>
            Specifies whether the attribute can be changed once it has been created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A schema attribute of the name type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.NumberAttributeConstraints">
            <summary>
            Gets and sets the property NumberAttributeConstraints. 
            <para>
            Specifies the constraints for an attribute of the number type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.Required">
            <summary>
            Gets and sets the property Required. 
            <para>
            Specifies whether a user pool attribute is required. If the attribute is required
            and the user does not provide a value, registration or sign-in will fail.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.StringAttributeConstraints">
            <summary>
            Gets and sets the property StringAttributeConstraints. 
            <para>
            Specifies the constraints for an attribute of the string type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest">
            <summary>
            Container for the parameters to the SetUserSettings operation.
            Sets the user settings like multi-factor authentication (MFA). If MFA is to be removed
            for a particular attribute pass the attribute with code delivery as null. If null
            list is passed, all MFA options are removed.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token for the set user settings request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest.MFAOptions">
            <summary>
            Gets and sets the property MFAOptions. 
            <para>
            Specifies the options for MFA (e.g., email or phone number).
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetUserSettingsResponse">
            <summary>
            The response from the server for a set user settings request.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SignUpRequest">
            <summary>
            Container for the parameters to the SignUp operation.
            Registers the user in the specified user pool and creates a user name, password, and
            user attributes.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password of the user you wish to register.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.SecretHash">
            <summary>
            Gets and sets the property SecretHash. 
            <para>
            A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs representing user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you wish to register.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.ValidationData">
            <summary>
            Gets and sets the property ValidationData. 
            <para>
            The validation data in the request to register a user.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SignUpRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SignUpResponse">
            <summary>
            The response from the server for a registration request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpResponse.CodeDeliveryDetails">
            <summary>
            Gets and sets the property CodeDeliveryDetails. 
            <para>
            The code delivery details returned by the server response to the user registration
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpResponse.UserConfirmed">
            <summary>
            Gets and sets the property UserConfirmed. 
            <para>
            A response from the server indicating that a user registration has been confirmed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SmsConfigurationType">
            <summary>
            The SMS configuratoin type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SmsConfigurationType.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            The external ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SmsConfigurationType.SnsCallerArn">
            <summary>
            Gets and sets the property SnsCallerArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) caller.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest">
            <summary>
            Container for the parameters to the StartUserImportJob operation.
            Starts the user import.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.StartUserImportJobResponse">
            <summary>
            Represents the response from the server to the request to start the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StartUserImportJobResponse.UserImportJob">
            <summary>
            Gets and sets the property UserImportJob. 
            <para>
            The job object that represents the user import job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest">
            <summary>
            Container for the parameters to the StopUserImportJob operation.
            Stops the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.StopUserImportJobResponse">
            <summary>
            Represents the response from the server to the request to stop the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StopUserImportJobResponse.UserImportJob">
            <summary>
            Gets and sets the property UserImportJob. 
            <para>
            The job object that represents the user import job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.StringAttributeConstraintsType">
            <summary>
            The type of constraints associated with an attribute of the string type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StringAttributeConstraintsType.MaxLength">
            <summary>
            Gets and sets the property MaxLength. 
            <para>
            The maximum length of an attribute value of the string type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StringAttributeConstraintsType.MinLength">
            <summary>
            Gets and sets the property MinLength. 
            <para>
            The minimum length of an attribute value of the string type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyFailedAttemptsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyFailedAttemptsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyFailedAttemptsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyFailedAttemptsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyFailedAttemptsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TooManyFailedAttemptsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyRequestsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TooManyRequestsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.String)">
            <summary>
            Constructs a new UnexpectedLambdaException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnexpectedLambdaException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnexpectedLambdaException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnexpectedLambdaException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnexpectedLambdaException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnexpectedLambdaException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedUserStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedUserStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedUserStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedUserStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedUserStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnsupportedUserStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest">
            <summary>
            Container for the parameters to the UpdateDeviceStatus operation.
            Updates the device status.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest.DeviceRememberedStatus">
            <summary>
            Gets and sets the property DeviceRememberedStatus. 
            <para>
            The status of whether a device is remembered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusResponse">
            <summary>
            The response to the request to update the device status.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest">
            <summary>
            Container for the parameters to the UpdateGroup operation.
            Updates the specified group with the specified attributes.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string containing the new description of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest.Precedence">
            <summary>
            Gets and sets the property Precedence. 
            <para>
            The new precedence value for the group. For more information about this parameter,
            see <a href="API_CreateGroupRequeste.html">CreateGroupRequest</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The new role ARN for the group. This is used for setting the <code>cognito:roles</code>
            and <code>cognito:preferred_role</code> claims in the token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateGroupResponse">
            <summary>
            This is the response object from the UpdateGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupResponse.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The group object for the group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest">
            <summary>
            Container for the parameters to the UpdateUserAttributes operation.
            Allows a user to update a specific attribute (one at a time).
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            The access token for the request to update user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs representing user attributes.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesResponse">
            <summary>
            Represents the response from the server for the request to update user attributes.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesResponse.CodeDeliveryDetailsList">
            <summary>
            Gets and sets the property CodeDeliveryDetailsList. 
            <para>
            The code delivery details list from the server for the request to update user attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest">
            <summary>
            Container for the parameters to the UpdateUserPoolClient operation.
            Allows the developer to update the specified user pool client and password policy.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.ClientName">
            <summary>
            Gets and sets the property ClientName. 
            <para>
            The client name from the update user pool client request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.ExplicitAuthFlows">
            <summary>
            Gets and sets the property ExplicitAuthFlows. 
            <para>
            Explicit authentication flows.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.ReadAttributes">
            <summary>
            Gets and sets the property ReadAttributes. 
            <para>
            The read-only attributes of the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.RefreshTokenValidity">
            <summary>
            Gets and sets the property RefreshTokenValidity. 
            <para>
            The validity of the refresh token, in days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to update the user pool client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.WriteAttributes">
            <summary>
            Gets and sets the property WriteAttributes. 
            <para>
            The writeable attributes of the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientResponse">
            <summary>
            Represents the response from the server to the request to update the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientResponse.UserPoolClient">
            <summary>
            Gets and sets the property UserPoolClient. 
            <para>
            The user pool client value from the response from the server when an update user pool
            client request is made.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest">
            <summary>
            Container for the parameters to the UpdateUserPool operation.
            Updates the specified user pool with the specified attributes.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.AdminCreateUserConfig">
            <summary>
            Gets and sets the property AdminCreateUserConfig. 
            <para>
            The configuration for AdminCreateUser requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.AutoVerifiedAttributes">
            <summary>
            Gets and sets the property AutoVerifiedAttributes. 
            <para>
            The attributes that are automatically verified when the Amazon Cognito service makes
            a request to update user pools.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.DeviceConfiguration">
            <summary>
            Gets and sets the property DeviceConfiguration. 
            <para>
            Device configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.EmailConfiguration">
            <summary>
            Gets and sets the property EmailConfiguration. 
            <para>
            Email configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.EmailVerificationMessage">
            <summary>
            Gets and sets the property EmailVerificationMessage. 
            <para>
            The contents of the email verification message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.EmailVerificationSubject">
            <summary>
            Gets and sets the property EmailVerificationSubject. 
            <para>
            The subject of the email verfication message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.LambdaConfig">
            <summary>
            Gets and sets the property LambdaConfig. 
            <para>
            The AWS Lambda configuration information from the request to update the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.MfaConfiguration">
            <summary>
            Gets and sets the property MfaConfiguration. 
            <para>
            Can be one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>OFF</code> - MFA tokens are not required and cannot be specified during user
            registration.
            </para>
             </li> <li> 
            <para>
             <code>ON</code> - MFA tokens are required for all user registrations. You can only
            specify required when you are initially creating a user pool.
            </para>
             </li> <li> 
            <para>
             <code>OPTIONAL</code> - Users have the option when registering to create an MFA token.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
            A container with the policies you wish to update in a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.SmsAuthenticationMessage">
            <summary>
            Gets and sets the property SmsAuthenticationMessage. 
            <para>
            The contents of the SMS authentication message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.SmsConfiguration">
            <summary>
            Gets and sets the property SmsConfiguration. 
            <para>
            SMS configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.SmsVerificationMessage">
            <summary>
            Gets and sets the property SmsVerificationMessage. 
            <para>
            A container with information about the SMS verification message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.UserPoolTags">
            <summary>
            Gets and sets the property UserPoolTags. 
            <para>
            The cost allocation tags for the user pool. For more information, see <a href="http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-cost-allocation-tagging.html">Adding
            Cost Allocation Tags to Your User Pool</a> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolResponse">
            <summary>
            Represents the response from the server when you make a request to update the user
            pool.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new UserImportInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserImportInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserImportInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserImportInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserImportInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserImportInProgressException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserImportJobType">
            <summary>
            The user import job type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.CloudWatchLogsRoleArn">
            <summary>
            Gets and sets the property CloudWatchLogsRoleArn. 
            <para>
            The role ARN for the Amazon CloudWatch Logging role for the user import job. For more
            information, see "Creating the CloudWatch Logs IAM Role" in the Amazon Cognito Developer
            Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.CompletionDate">
            <summary>
            Gets and sets the property CompletionDate. 
            <para>
            The date when the user imoprt job was completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.CompletionMessage">
            <summary>
            Gets and sets the property CompletionMessage. 
            <para>
            The message returned when the user import job is completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date when the user import job was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.FailedUsers">
            <summary>
            Gets and sets the property FailedUsers. 
            <para>
            The number of users that could not be imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.ImportedUsers">
            <summary>
            Gets and sets the property ImportedUsers. 
            <para>
            The number of users that were successfully imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The job name for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.PreSignedUrl">
            <summary>
            Gets and sets the property PreSignedUrl. 
            <para>
            The pre-signed URL to be used to upload the .csv file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.SkippedUsers">
            <summary>
            Gets and sets the property SkippedUsers. 
            <para>
            The number of users that were skipped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.StartDate">
            <summary>
            Gets and sets the property StartDate. 
            <para>
            The date when the user import job was started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the user import job. One of the following:
            </para>
             <ul> <li> 
            <para>
            Created - The job was created but not started.
            </para>
             </li> <li> 
            <para>
            Pending - A transition state. You have started the job, but it has not begun importing
            users yet.
            </para>
             </li> <li> 
            <para>
            InProgress - The job has started, and users are being imported.
            </para>
             </li> <li> 
            <para>
            Stopping - You have stopped the job, but the job has not stopped importing users yet.
            </para>
             </li> <li> 
            <para>
            Stopped - You have stopped the job, and the job has stopped importing users.
            </para>
             </li> <li> 
            <para>
            Succeeded - The job has completed successfully.
            </para>
             </li> <li> 
            <para>
            Failed - The job has stopped due to an error.
            </para>
             </li> <li> 
            <para>
            Expired - You created a job, but did not start the job within 24-48 hours. All data
            associated with the job was deleted, and the job cannot be started.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.String)">
            <summary>
            Constructs a new UserLambdaValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserLambdaValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserLambdaValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserLambdaValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserLambdaValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserLambdaValidationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.String)">
            <summary>
            Constructs a new UsernameExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UsernameExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of UsernameExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UsernameExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UsernameExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UsernameExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.String)">
            <summary>
            Constructs a new UserNotConfirmedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserNotConfirmedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserNotConfirmedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserNotConfirmedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserNotConfirmedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserNotConfirmedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new UserNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolClientDescription">
            <summary>
            The description of the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientDescription.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientDescription.ClientName">
            <summary>
            Gets and sets the property ClientName. 
            <para>
            The client name from the user pool client description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientDescription.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to describe the user pool client.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolClientType">
            <summary>
            A user pool of the client type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.ClientName">
            <summary>
            Gets and sets the property ClientName. 
            <para>
            The client name from the user pool request of the client type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.ClientSecret">
            <summary>
            Gets and sets the property ClientSecret. 
            <para>
            The client secret from the user pool request of the client type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The creation date from the user pool request of the client type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.ExplicitAuthFlows">
            <summary>
            Gets and sets the property ExplicitAuthFlows. 
            <para>
            The explicit authentication flows.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The last modified date from the user pool request of the client type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.ReadAttributes">
            <summary>
            Gets and sets the property ReadAttributes. 
            <para>
            The Read-only attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.RefreshTokenValidity">
            <summary>
            Gets and sets the property RefreshTokenValidity. 
            <para>
            The validity of the refresh token, in days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.WriteAttributes">
            <summary>
            Gets and sets the property WriteAttributes. 
            <para>
            The writeable attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType">
            <summary>
            A user pool description.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The creation date in a user pool description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID in a user pool description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.LambdaConfig">
            <summary>
            Gets and sets the property LambdaConfig. 
            <para>
            The AWS Lambda configuration information in a user pool description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The last modified date in a user pool description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name in a user pool description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The user pool status in a user pool description.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolPolicyType">
            <summary>
            The type of policy in a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolPolicyType.PasswordPolicy">
            <summary>
            Gets and sets the property PasswordPolicy. 
            <para>
            A container with information about the user pool password policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            <summary>
             CognitoIdentityProvider exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.String)">
            <summary>
            Constructs a new UserPoolTaggingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserPoolTaggingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserPoolTaggingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserPoolTaggingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserPoolTaggingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserPoolTaggingException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolType">
            <summary>
            A container with information about the user pool type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.AdminCreateUserConfig">
            <summary>
            Gets and sets the property AdminCreateUserConfig. 
            <para>
            The configuration for AdminCreateUser requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.AliasAttributes">
            <summary>
            Gets and sets the property AliasAttributes. 
            <para>
            Specifies the attributes that are aliased in a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.AutoVerifiedAttributes">
            <summary>
            Gets and sets the property AutoVerifiedAttributes. 
            <para>
            Specifies the attributes that are auto-verified in a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The creation date of a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.DeviceConfiguration">
            <summary>
            Gets and sets the property DeviceConfiguration. 
            <para>
            The device configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.EmailConfiguration">
            <summary>
            Gets and sets the property EmailConfiguration. 
            <para>
            The email configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.EmailConfigurationFailure">
            <summary>
            Gets and sets the property EmailConfigurationFailure. 
            <para>
            The reason why the email configuration cannot send the messages to your users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.EmailVerificationMessage">
            <summary>
            Gets and sets the property EmailVerificationMessage. 
            <para>
            The contents of the email verification message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.EmailVerificationSubject">
            <summary>
            Gets and sets the property EmailVerificationSubject. 
            <para>
            The subject of the email verification message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.EstimatedNumberOfUsers">
            <summary>
            Gets and sets the property EstimatedNumberOfUsers. 
            <para>
            A number estimating the size of the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.LambdaConfig">
            <summary>
            Gets and sets the property LambdaConfig. 
            <para>
            A container describing the AWS Lambda triggers associated with a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The last modified date of a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.MfaConfiguration">
            <summary>
            Gets and sets the property MfaConfiguration. 
            <para>
            Can be one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>OFF</code> - MFA tokens are not required and cannot be specified during user
            registration.
            </para>
             </li> <li> 
            <para>
             <code>ON</code> - MFA tokens are required for all user registrations. You can only
            specify required when you are initially creating a user pool.
            </para>
             </li> <li> 
            <para>
             <code>OPTIONAL</code> - Users have the option when registering to create an MFA token.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
            A container describing the policies associated with a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.SchemaAttributes">
            <summary>
            Gets and sets the property SchemaAttributes. 
            <para>
            A container with the schema attributes of a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.SmsAuthenticationMessage">
            <summary>
            Gets and sets the property SmsAuthenticationMessage. 
            <para>
            The contents of the SMS authentication message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.SmsConfiguration">
            <summary>
            Gets and sets the property SmsConfiguration. 
            <para>
            The SMS configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.SmsConfigurationFailure">
            <summary>
            Gets and sets the property SmsConfigurationFailure. 
            <para>
            The reason why the SMS configuration cannot send the message(s) to your users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.SmsVerificationMessage">
            <summary>
            Gets and sets the property SmsVerificationMessage. 
            <para>
            The contents of the SMS verification message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.UserPoolTags">
            <summary>
            Gets and sets the property UserPoolTags. 
            <para>
            The cost allocation tags for the user pool. For more information, see <a href="http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-cost-allocation-tagging.html">Adding
            Cost Allocation Tags to Your User Pool</a> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserType">
            <summary>
            The user type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A container with information about the user type attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether the user is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.MFAOptions">
            <summary>
            Gets and sets the property MFAOptions. 
            <para>
            The MFA options for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.UserCreateDate">
            <summary>
            Gets and sets the property UserCreateDate. 
            <para>
            The creation date of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.UserLastModifiedDate">
            <summary>
            Gets and sets the property UserLastModifiedDate. 
            <para>
            The last modified date of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you wish to describe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.UserStatus">
            <summary>
            Gets and sets the property UserStatus. 
            <para>
            The user status. Can be one of the following:
            </para>
             <ul> <li> 
            <para>
            UNCONFIRMED - User has been created but not confirmed.
            </para>
             </li> <li> 
            <para>
            CONFIRMED - User has been confirmed.
            </para>
             </li> <li> 
            <para>
            ARCHIVED - User is no longer active.
            </para>
             </li> <li> 
            <para>
            COMPROMISED - User is disabled due to a potential security threat.
            </para>
             </li> <li> 
            <para>
            UNKNOWN - User status is not known.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest">
            <summary>
            Container for the parameters to the VerifyUserAttribute operation.
            Verifies the specified user attributes in the user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            Represents the access token of the request to verify user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The attribute name in the request to verify user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The verification code in the request to verify user attributes.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeResponse">
            <summary>
            A container representing the response from the server from the request to verify user
            attributes.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesRequestMarshaller">
            <summary>
            AddCustomAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddCustomAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupRequestMarshaller">
            <summary>
            AdminAddUserToGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminAddUserToGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpRequestMarshaller">
            <summary>
            AdminConfirmSignUp Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminConfirmSignUp operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeMarshaller">
            <summary>
            AdminCreateUserConfigType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AdminCreateUserConfigType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AdminCreateUserConfigType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserRequestMarshaller">
            <summary>
            AdminCreateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminCreateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesRequestMarshaller">
            <summary>
            AdminDeleteUserAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminDeleteUserAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserRequestMarshaller">
            <summary>
            AdminDeleteUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminDeleteUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserRequestMarshaller">
            <summary>
            AdminDisableUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminDisableUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserRequestMarshaller">
            <summary>
            AdminEnableUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminEnableUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceRequestMarshaller">
            <summary>
            AdminForgetDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminForgetDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceRequestMarshaller">
            <summary>
            AdminGetDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminGetDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserRequestMarshaller">
            <summary>
            AdminGetUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminGetUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthRequestMarshaller">
            <summary>
            AdminInitiateAuth Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminInitiateAuth operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesRequestMarshaller">
            <summary>
            AdminListDevices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminListDevices operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserRequestMarshaller">
            <summary>
            AdminListGroupsForUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminListGroupsForUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupRequestMarshaller">
            <summary>
            AdminRemoveUserFromGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminRemoveUserFromGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordRequestMarshaller">
            <summary>
            AdminResetUserPassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminResetUserPassword operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeRequestMarshaller">
            <summary>
            AdminRespondToAuthChallenge Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminRespondToAuthChallenge operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsRequestMarshaller">
            <summary>
            AdminSetUserSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminSetUserSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusRequestMarshaller">
            <summary>
            AdminUpdateDeviceStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminUpdateDeviceStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesRequestMarshaller">
            <summary>
            AdminUpdateUserAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminUpdateUserAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutRequestMarshaller">
            <summary>
            AdminUserGlobalSignOut Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminUserGlobalSignOut operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeMarshaller">
            <summary>
            AttributeType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AttributeType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AttributeType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AttributeType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthenticationResultTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AuthenticationResultType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthenticationResultTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AuthenticationResultType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthenticationResultTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthenticationResultTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordRequestMarshaller">
            <summary>
            ChangePassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ChangePassword operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryDetailsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for CodeDeliveryDetailsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryDetailsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#CodeDeliveryDetailsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryDetailsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryDetailsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceRequestMarshaller">
            <summary>
            ConfirmDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConfirmDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordRequestMarshaller">
            <summary>
            ConfirmForgotPassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConfirmForgotPassword operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpRequestMarshaller">
            <summary>
            ConfirmSignUp Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConfirmSignUp operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller">
            <summary>
            CreateGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobRequestMarshaller">
            <summary>
            CreateUserImportJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUserImportJob operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientRequestMarshaller">
            <summary>
            CreateUserPoolClient Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUserPoolClient operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolRequestMarshaller">
            <summary>
            CreateUserPool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUserPool operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller">
            <summary>
            DeleteGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesRequestMarshaller">
            <summary>
            DeleteUserAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUserAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientRequestMarshaller">
            <summary>
            DeleteUserPoolClient Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUserPoolClient operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolRequestMarshaller">
            <summary>
            DeleteUserPool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUserPool operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller">
            <summary>
            DeleteUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobRequestMarshaller">
            <summary>
            DescribeUserImportJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUserImportJob operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientRequestMarshaller">
            <summary>
            DescribeUserPoolClient Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUserPoolClient operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolRequestMarshaller">
            <summary>
            DescribeUserPool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUserPool operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeMarshaller">
            <summary>
            DeviceConfigurationType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeviceConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for DeviceConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#DeviceConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceSecretVerifierConfigTypeMarshaller">
            <summary>
            DeviceSecretVerifierConfigType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceSecretVerifierConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeviceSecretVerifierConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceSecretVerifierConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceTypeUnmarshaller">
            <summary>
            Response Unmarshaller for DeviceType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#DeviceType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeMarshaller">
            <summary>
            EmailConfigurationType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.EmailConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for EmailConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#EmailConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceRequestMarshaller">
            <summary>
            ForgetDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ForgetDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordRequestMarshaller">
            <summary>
            ForgotPassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ForgotPassword operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderRequestMarshaller">
            <summary>
            GetCSVHeader Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCSVHeader operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller">
            <summary>
            GetDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupRequestMarshaller">
            <summary>
            GetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeRequestMarshaller">
            <summary>
            GetUserAttributeVerificationCode Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetUserAttributeVerificationCode operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserRequestMarshaller">
            <summary>
            GetUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutRequestMarshaller">
            <summary>
            GlobalSignOut Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GlobalSignOut operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupTypeUnmarshaller">
            <summary>
            Response Unmarshaller for GroupType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#GroupType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthRequestMarshaller">
            <summary>
            InitiateAuth Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthResponseUnmarshaller">
            <summary>
            Response Unmarshaller for InitiateAuth operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeMarshaller">
            <summary>
            LambdaConfigType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.LambdaConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeUnmarshaller">
            <summary>
            Response Unmarshaller for LambdaConfigType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#LambdaConfigType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller">
            <summary>
            ListDevices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListDevicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDevices operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller">
            <summary>
            ListGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsRequestMarshaller">
            <summary>
            ListUserImportJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUserImportJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsRequestMarshaller">
            <summary>
            ListUserPoolClients Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUserPoolClients operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsRequestMarshaller">
            <summary>
            ListUserPools Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUserPools operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupRequestMarshaller">
            <summary>
            ListUsersInGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUsersInGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller">
            <summary>
            ListUsers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListUsersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUsers operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeMarshaller">
            <summary>
            MessageTemplateType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.MessageTemplateType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeUnmarshaller">
            <summary>
            Response Unmarshaller for MessageTemplateType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#MessageTemplateType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeMarshaller">
            <summary>
            MFAOptionType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.MFAOptionType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeUnmarshaller">
            <summary>
            Response Unmarshaller for MFAOptionType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#MFAOptionType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NewDeviceMetadataTypeUnmarshaller">
            <summary>
            Response Unmarshaller for NewDeviceMetadataType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NewDeviceMetadataTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#NewDeviceMetadataType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NewDeviceMetadataTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NewDeviceMetadataTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeMarshaller">
            <summary>
            NumberAttributeConstraintsType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.NumberAttributeConstraintsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for NumberAttributeConstraintsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#NumberAttributeConstraintsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeMarshaller">
            <summary>
            PasswordPolicyType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.PasswordPolicyType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeUnmarshaller">
            <summary>
            Response Unmarshaller for PasswordPolicyType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#PasswordPolicyType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeRequestMarshaller">
            <summary>
            ResendConfirmationCode Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResendConfirmationCode operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeRequestMarshaller">
            <summary>
            RespondToAuthChallenge Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RespondToAuthChallenge operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeMarshaller">
            <summary>
            SchemaAttributeType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SchemaAttributeType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeUnmarshaller">
            <summary>
            Response Unmarshaller for SchemaAttributeType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#SchemaAttributeType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsRequestMarshaller">
            <summary>
            SetUserSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetUserSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpRequestMarshaller">
            <summary>
            SignUp Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SignUpRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SignUp operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeMarshaller">
            <summary>
            SmsConfigurationType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SmsConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for SmsConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#SmsConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobRequestMarshaller">
            <summary>
            StartUserImportJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartUserImportJob operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobRequestMarshaller">
            <summary>
            StopUserImportJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopUserImportJob operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeMarshaller">
            <summary>
            StringAttributeConstraintsType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.StringAttributeConstraintsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for StringAttributeConstraintsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#StringAttributeConstraintsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusRequestMarshaller">
            <summary>
            UpdateDeviceStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDeviceStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller">
            <summary>
            UpdateGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesRequestMarshaller">
            <summary>
            UpdateUserAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUserAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientRequestMarshaller">
            <summary>
            UpdateUserPoolClient Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUserPoolClient operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolRequestMarshaller">
            <summary>
            UpdateUserPool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUserPool operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportJobTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserImportJobType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportJobTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserImportJobType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportJobTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportJobTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolClientDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolClientDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolClientType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolClientType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolDescriptionTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolDescriptionType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolDescriptionTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolDescriptionType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolDescriptionTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolDescriptionTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeMarshaller">
            <summary>
            UserPoolPolicyType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UserPoolPolicyType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolPolicyType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolPolicyType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeRequestMarshaller">
            <summary>
            VerifyUserAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyUserAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderRequest">
            <summary>
            Base class for CognitoIdentityProvider operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient">
             <summary>
             Implementation for accessing CognitoIdentityProvider
            
             Using the Amazon Cognito Your User Pools API, you can create a user pool to manage
             directories and users. You can authenticate a user to obtain tokens related to user
             identity and access policies.
             
              
             <para>
             This API reference provides information about user pools in Amazon Cognito Your User
             Pools.
             </para>
              
             <para>
             For more information, see the Amazon Cognito Documentation.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor">
             <summary>
             Constructs AmazonCognitoIdentityProviderClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonCognitoIdentityProviderClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig)">
             <summary>
             Constructs AmazonCognitoIdentityProviderClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCognitoIdentityProviderClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Credentials and an
            AmazonCognitoIdentityProviderClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCognitoIdentityProviderClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String,Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCognitoIdentityProviderClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCognitoIdentityProviderClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String,System.String,Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCognitoIdentityProviderClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCognitoIdentityProviderClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AddCustomAttributes(Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest)">
            <summary>
            Adds additional user attributes to the user pool schema.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddCustomAttributes service method.</param>
            
            <returns>The response from the AddCustomAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you are trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AddCustomAttributes">REST API Reference for AddCustomAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AddCustomAttributesAsync(Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddCustomAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddCustomAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AddCustomAttributes">REST API Reference for AddCustomAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminAddUserToGroup(Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest)">
            <summary>
            Adds the specified user to the specified group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminAddUserToGroup service method.</param>
            
            <returns>The response from the AdminAddUserToGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminAddUserToGroup">REST API Reference for AdminAddUserToGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminAddUserToGroupAsync(Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminAddUserToGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminAddUserToGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminAddUserToGroup">REST API Reference for AdminAddUserToGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminConfirmSignUp(Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest)">
            <summary>
            Confirms user registration as an admin without using a confirmation code. Works on
            any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminConfirmSignUp service method.</param>
            
            <returns>The response from the AdminConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception gets thrown when the user has made too many failed attempts for a given
            action (e.g., sign in).
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminConfirmSignUp">REST API Reference for AdminConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminConfirmSignUpAsync(Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminConfirmSignUp operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminConfirmSignUp operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminConfirmSignUp">REST API Reference for AdminConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminCreateUser(Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest)">
            <summary>
            Creates a new user in the specified user pool and sends a welcome message via email
            or phone (SMS). This message is based on a template that you configured in your call
            to CreateUserPool or UpdateUserPool. This template includes your custom sign-up instructions
            and placeholders for user name and temporary password.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminCreateUser service method.</param>
            
            <returns>The response from the AdminCreateUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException">
            The request failed because the user is in an unsupported state.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminCreateUser">REST API Reference for AdminCreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminCreateUserAsync(Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminCreateUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminCreateUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminCreateUser">REST API Reference for AdminCreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDeleteUser(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest)">
            <summary>
            Deletes a user as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUser service method.</param>
            
            <returns>The response from the AdminDeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUser">REST API Reference for AdminDeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDeleteUserAsync(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminDeleteUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUser">REST API Reference for AdminDeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDeleteUserAttributes(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest)">
            <summary>
            Deletes the user attributes in a user pool as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUserAttributes service method.</param>
            
            <returns>The response from the AdminDeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUserAttributes">REST API Reference for AdminDeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDeleteUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminDeleteUserAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUserAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUserAttributes">REST API Reference for AdminDeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDisableUser(Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest)">
            <summary>
            Disables the specified user as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDisableUser service method.</param>
            
            <returns>The response from the AdminDisableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableUser">REST API Reference for AdminDisableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDisableUserAsync(Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminDisableUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminDisableUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableUser">REST API Reference for AdminDisableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminEnableUser(Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest)">
            <summary>
            Enables the specified user as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminEnableUser service method.</param>
            
            <returns>The response from the AdminEnableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminEnableUser">REST API Reference for AdminEnableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminEnableUserAsync(Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminEnableUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminEnableUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminEnableUser">REST API Reference for AdminEnableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminForgetDevice(Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest)">
            <summary>
            Forgets the device, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminForgetDevice service method.</param>
            
            <returns>The response from the AdminForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminForgetDevice">REST API Reference for AdminForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminForgetDeviceAsync(Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminForgetDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminForgetDevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminForgetDevice">REST API Reference for AdminForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminGetDevice(Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest)">
            <summary>
            Gets the device, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetDevice service method.</param>
            
            <returns>The response from the AdminGetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetDevice">REST API Reference for AdminGetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminGetDeviceAsync(Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminGetDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminGetDevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetDevice">REST API Reference for AdminGetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminGetUser(Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest)">
            <summary>
            Gets the specified user by user name in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetUser service method.</param>
            
            <returns>The response from the AdminGetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetUser">REST API Reference for AdminGetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminGetUserAsync(Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminGetUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminGetUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetUser">REST API Reference for AdminGetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminInitiateAuth(Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest)">
            <summary>
            Initiates the authentication flow, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminInitiateAuth service method.</param>
            
            <returns>The response from the AdminInitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito cannot find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminInitiateAuth">REST API Reference for AdminInitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminInitiateAuthAsync(Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminInitiateAuth operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminInitiateAuth operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminInitiateAuth">REST API Reference for AdminInitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminListDevices(Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest)">
            <summary>
            Lists devices, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListDevices service method.</param>
            
            <returns>The response from the AdminListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListDevices">REST API Reference for AdminListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminListDevicesAsync(Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminListDevices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminListDevices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListDevices">REST API Reference for AdminListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminListGroupsForUser(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest)">
            <summary>
            Lists the groups that the user belongs to.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListGroupsForUser service method.</param>
            
            <returns>The response from the AdminListGroupsForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListGroupsForUser">REST API Reference for AdminListGroupsForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminListGroupsForUserAsync(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminListGroupsForUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminListGroupsForUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListGroupsForUser">REST API Reference for AdminListGroupsForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminRemoveUserFromGroup(Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest)">
            <summary>
            Removes the specified user from the specified group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRemoveUserFromGroup service method.</param>
            
            <returns>The response from the AdminRemoveUserFromGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRemoveUserFromGroup">REST API Reference for AdminRemoveUserFromGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminRemoveUserFromGroupAsync(Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminRemoveUserFromGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminRemoveUserFromGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRemoveUserFromGroup">REST API Reference for AdminRemoveUserFromGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminResetUserPassword(Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest)">
            <summary>
            Resets the specified user's password in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            When a developer calls this API, the current password is invalidated, so it must be
            changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException
            exception back and should direct the user down the flow to reset the password, which
            is the same as the forgot password flow. In addition, if the user pool has phone verification
            selected and a verified phone number exists for the user, or if email verification
            is selected and a verified email exists for the user, calling this API will also result
            in sending a message to the end user with the code to change their password.
            </para>
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminResetUserPassword service method.</param>
            
            <returns>The response from the AdminResetUserPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminResetUserPassword">REST API Reference for AdminResetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminResetUserPasswordAsync(Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminResetUserPassword operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminResetUserPassword operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminResetUserPassword">REST API Reference for AdminResetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminRespondToAuthChallenge(Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest)">
            <summary>
            Responds to an authentication challenge, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRespondToAuthChallenge service method.</param>
            
            <returns>The response from the AdminRespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email or
            phone number that has already been supplied as an alias from a different account.
            This exception tells user that an account with this email or phone already exists.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito cannot find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRespondToAuthChallenge">REST API Reference for AdminRespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminRespondToAuthChallengeAsync(Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminRespondToAuthChallenge operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminRespondToAuthChallenge operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRespondToAuthChallenge">REST API Reference for AdminRespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminSetUserSettings(Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest)">
            <summary>
            Sets all the user settings for a specified user name. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserSettings service method.</param>
            
            <returns>The response from the AdminSetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserSettings">REST API Reference for AdminSetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminSetUserSettingsAsync(Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminSetUserSettings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminSetUserSettings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserSettings">REST API Reference for AdminSetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUpdateDeviceStatus(Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest)">
            <summary>
            Updates the device status as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateDeviceStatus service method.</param>
            
            <returns>The response from the AdminUpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateDeviceStatus">REST API Reference for AdminUpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUpdateDeviceStatusAsync(Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminUpdateDeviceStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminUpdateDeviceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateDeviceStatus">REST API Reference for AdminUpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUpdateUserAttributes(Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest)">
            <summary>
            Updates the specified user's attributes, including developer attributes, as an administrator.
            Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateUserAttributes service method.</param>
            
            <returns>The response from the AdminUpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email or
            phone number that has already been supplied as an alias from a different account.
            This exception tells user that an account with this email or phone already exists.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateUserAttributes">REST API Reference for AdminUpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUpdateUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminUpdateUserAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminUpdateUserAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateUserAttributes">REST API Reference for AdminUpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUserGlobalSignOut(Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest)">
            <summary>
            Signs out users from all devices, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUserGlobalSignOut service method.</param>
            
            <returns>The response from the AdminUserGlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUserGlobalSignOut">REST API Reference for AdminUserGlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUserGlobalSignOutAsync(Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminUserGlobalSignOut operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminUserGlobalSignOut operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUserGlobalSignOut">REST API Reference for AdminUserGlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ChangePassword(Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest)">
            <summary>
            Changes the password for a specified user in a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ChangePassword service method.</param>
            
            <returns>The response from the ChangePassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ChangePassword">REST API Reference for ChangePassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ChangePasswordAsync(Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ChangePassword operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangePassword operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ChangePassword">REST API Reference for ChangePassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmDevice(Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest)">
            <summary>
            Confirms tracking of the device. This API call is the call that beings device tracking.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmDevice service method.</param>
            
            <returns>The response from the ConfirmDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmDevice">REST API Reference for ConfirmDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmDeviceAsync(Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmDevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmDevice">REST API Reference for ConfirmDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmForgotPassword(Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest)">
            <summary>
            Allows a user to enter a code provided when they reset their password to update their
            password.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmForgotPassword service method.</param>
            
            <returns>The response from the ConfirmForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception gets thrown when the user has made too many failed attempts for a given
            action (e.g., sign in).
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmForgotPassword">REST API Reference for ConfirmForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmForgotPasswordAsync(Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmForgotPassword operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmForgotPassword operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmForgotPassword">REST API Reference for ConfirmForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmSignUp(Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest)">
            <summary>
            Confirms registration of a user and handles the existing alias from a previous user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmSignUp service method.</param>
            
            <returns>The response from the ConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email or
            phone number that has already been supplied as an alias from a different account.
            This exception tells user that an account with this email or phone already exists.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception gets thrown when the user has made too many failed attempts for a given
            action (e.g., sign in).
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmSignUp">REST API Reference for ConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmSignUpAsync(Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmSignUp operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmSignUp operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmSignUp">REST API Reference for ConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateGroup(Amazon.CognitoIdentityProvider.Model.CreateGroupRequest)">
            <summary>
            Creates a new group in the specified user pool.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGroup service method.</param>
            
            <returns>The response from the CreateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.GroupExistsException">
            This exception is thrown when Amazon Cognito encounters a group that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateGroup">REST API Reference for CreateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateGroupAsync(Amazon.CognitoIdentityProvider.Model.CreateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateGroup">REST API Reference for CreateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserImportJob(Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest)">
            <summary>
            Creates the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserImportJob service method.</param>
            
            <returns>The response from the CreateUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserImportJob">REST API Reference for CreateUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateUserImportJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUserImportJob operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserImportJob">REST API Reference for CreateUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserPool(Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest)">
            <summary>
            Creates a new Amazon Cognito user pool and sets the password policy for the pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPool service method.</param>
            
            <returns>The response from the CreateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception gets thrown when a user pool tag cannot be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPool">REST API Reference for CreateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserPoolAsync(Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateUserPool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUserPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPool">REST API Reference for CreateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserPoolClient(Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest)">
            <summary>
            Creates the user pool client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolClient service method.</param>
            
            <returns>The response from the CreateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolClient">REST API Reference for CreateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateUserPoolClient operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolClient operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolClient">REST API Reference for CreateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteGroup(Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest)">
            <summary>
            Deletes a group. Currently only groups with no members can be deleted.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGroup service method.</param>
            
            <returns>The response from the DeleteGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteGroup">REST API Reference for DeleteGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteGroupAsync(Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteGroup">REST API Reference for DeleteGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUser(Amazon.CognitoIdentityProvider.Model.DeleteUserRequest)">
            <summary>
            Allows a user to delete one's self.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            
            <returns>The response from the DeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserAttributes(Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest)">
            <summary>
            Deletes the attributes for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserAttributes service method.</param>
            
            <returns>The response from the DeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserAttributes">REST API Reference for DeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUserAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUserAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserAttributes">REST API Reference for DeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserPool(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest)">
            <summary>
            Deletes the specified Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPool service method.</param>
            
            <returns>The response from the DeleteUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you are trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPool">REST API Reference for DeleteUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserPoolAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUserPool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUserPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPool">REST API Reference for DeleteUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserPoolClient(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest)">
            <summary>
            Allows the developer to delete the user pool client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolClient service method.</param>
            
            <returns>The response from the DeleteUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolClient">REST API Reference for DeleteUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUserPoolClient operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolClient operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolClient">REST API Reference for DeleteUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserImportJob(Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest)">
            <summary>
            Describes the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserImportJob service method.</param>
            
            <returns>The response from the DescribeUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserImportJob">REST API Reference for DescribeUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeUserImportJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeUserImportJob operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserImportJob">REST API Reference for DescribeUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserPool(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest)">
            <summary>
            Returns the configuration information and metadata of the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPool service method.</param>
            
            <returns>The response from the DescribeUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception gets thrown when a user pool tag cannot be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPool">REST API Reference for DescribeUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserPoolAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeUserPool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeUserPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPool">REST API Reference for DescribeUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserPoolClient(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest)">
            <summary>
            Client method for returning the configuration information and metadata of the specified
            user pool client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolClient service method.</param>
            
            <returns>The response from the DescribeUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolClient">REST API Reference for DescribeUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeUserPoolClient operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolClient operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolClient">REST API Reference for DescribeUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ForgetDevice(Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest)">
            <summary>
            Forgets the specified device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgetDevice service method.</param>
            
            <returns>The response from the ForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgetDevice">REST API Reference for ForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ForgetDeviceAsync(Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ForgetDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ForgetDevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgetDevice">REST API Reference for ForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ForgotPassword(Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest)">
            <summary>
            Retrieves the password for the specified client ID or username.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgotPassword service method.</param>
            
            <returns>The response from the ForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgotPassword">REST API Reference for ForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ForgotPasswordAsync(Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ForgotPassword operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ForgotPassword operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgotPassword">REST API Reference for ForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetCSVHeader(Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest)">
            <summary>
            Gets the header information for the .csv file to be used as input for the user import
            job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCSVHeader service method.</param>
            
            <returns>The response from the GetCSVHeader service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetCSVHeader">REST API Reference for GetCSVHeader Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetCSVHeaderAsync(Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCSVHeader operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCSVHeader operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetCSVHeader">REST API Reference for GetCSVHeader Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetDevice(Amazon.CognitoIdentityProvider.Model.GetDeviceRequest)">
            <summary>
            Gets the device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevice service method.</param>
            
            <returns>The response from the GetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetDevice">REST API Reference for GetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetDeviceAsync(Amazon.CognitoIdentityProvider.Model.GetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetDevice">REST API Reference for GetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetGroup(Amazon.CognitoIdentityProvider.Model.GetGroupRequest)">
            <summary>
            Gets a group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGroup service method.</param>
            
            <returns>The response from the GetGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetGroup">REST API Reference for GetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetGroupAsync(Amazon.CognitoIdentityProvider.Model.GetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetGroup">REST API Reference for GetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUser(Amazon.CognitoIdentityProvider.Model.GetUserRequest)">
            <summary>
            Gets the user attributes and metadata for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUser service method.</param>
            
            <returns>The response from the GetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUser">REST API Reference for GetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUserAsync(Amazon.CognitoIdentityProvider.Model.GetUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUser">REST API Reference for GetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUserAttributeVerificationCode(Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest)">
            <summary>
            Gets the user attribute verification code for the specified attribute name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserAttributeVerificationCode service method.</param>
            
            <returns>The response from the GetUserAttributeVerificationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserAttributeVerificationCode">REST API Reference for GetUserAttributeVerificationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUserAttributeVerificationCodeAsync(Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetUserAttributeVerificationCode operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUserAttributeVerificationCode operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserAttributeVerificationCode">REST API Reference for GetUserAttributeVerificationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GlobalSignOut(Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest)">
            <summary>
            Signs out users from all devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GlobalSignOut service method.</param>
            
            <returns>The response from the GlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GlobalSignOut">REST API Reference for GlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GlobalSignOutAsync(Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GlobalSignOut operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GlobalSignOut operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GlobalSignOut">REST API Reference for GlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.InitiateAuth(Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest)">
            <summary>
            Initiates the authentication flow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateAuth service method.</param>
            
            <returns>The response from the InitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/InitiateAuth">REST API Reference for InitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.InitiateAuthAsync(Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the InitiateAuth operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateAuth operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/InitiateAuth">REST API Reference for InitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListDevices(Amazon.CognitoIdentityProvider.Model.ListDevicesRequest)">
            <summary>
            Lists the devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            
            <returns>The response from the ListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListDevicesAsync(Amazon.CognitoIdentityProvider.Model.ListDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListDevices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDevices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListGroups(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest)">
            <summary>
            Lists the groups associated with a user pool.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroups service method.</param>
            
            <returns>The response from the ListGroups service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListGroups">REST API Reference for ListGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListGroupsAsync(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListGroups">REST API Reference for ListGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserImportJobs(Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest)">
            <summary>
            Lists the user import jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserImportJobs service method.</param>
            
            <returns>The response from the ListUserImportJobs service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserImportJobs">REST API Reference for ListUserImportJobs Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserImportJobsAsync(Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUserImportJobs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUserImportJobs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserImportJobs">REST API Reference for ListUserImportJobs Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserPoolClients(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest)">
            <summary>
            Lists the clients that have been created for the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPoolClients service method.</param>
            
            <returns>The response from the ListUserPoolClients service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPoolClients">REST API Reference for ListUserPoolClients Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserPoolClientsAsync(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUserPoolClients operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUserPoolClients operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPoolClients">REST API Reference for ListUserPoolClients Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserPools(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest)">
            <summary>
            Lists the user pools associated with an AWS account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPools service method.</param>
            
            <returns>The response from the ListUserPools service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPools">REST API Reference for ListUserPools Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserPoolsAsync(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUserPools operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUserPools operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPools">REST API Reference for ListUserPools Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUsers(Amazon.CognitoIdentityProvider.Model.ListUsersRequest)">
            <summary>
            Lists the users in the Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            
            <returns>The response from the ListUsers service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUsersAsync(Amazon.CognitoIdentityProvider.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUsers operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUsers operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUsersInGroup(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest)">
            <summary>
            Lists the users in the specified group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsersInGroup service method.</param>
            
            <returns>The response from the ListUsersInGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsersInGroup">REST API Reference for ListUsersInGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUsersInGroupAsync(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUsersInGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUsersInGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsersInGroup">REST API Reference for ListUsersInGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ResendConfirmationCode(Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest)">
            <summary>
            Resends the confirmation (for confirmation of registration) to a specific user in
            the user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendConfirmationCode service method.</param>
            
            <returns>The response from the ResendConfirmationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ResendConfirmationCode">REST API Reference for ResendConfirmationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ResendConfirmationCodeAsync(Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResendConfirmationCode operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResendConfirmationCode operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ResendConfirmationCode">REST API Reference for ResendConfirmationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.RespondToAuthChallenge(Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest)">
            <summary>
            Responds to the authentication challenge.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondToAuthChallenge service method.</param>
            
            <returns>The response from the RespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email or
            phone number that has already been supplied as an alias from a different account.
            This exception tells user that an account with this email or phone already exists.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito cannot find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RespondToAuthChallenge">REST API Reference for RespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.RespondToAuthChallengeAsync(Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RespondToAuthChallenge operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RespondToAuthChallenge operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RespondToAuthChallenge">REST API Reference for RespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetUserSettings(Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest)">
            <summary>
            Sets the user settings like multi-factor authentication (MFA). If MFA is to be removed
            for a particular attribute pass the attribute with code delivery as null. If null
            list is passed, all MFA options are removed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserSettings service method.</param>
            
            <returns>The response from the SetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserSettings">REST API Reference for SetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetUserSettingsAsync(Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetUserSettings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetUserSettings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserSettings">REST API Reference for SetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SignUp(Amazon.CognitoIdentityProvider.Model.SignUpRequest)">
            <summary>
            Registers the user in the specified user pool and creates a user name, password, and
            user attributes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SignUp service method.</param>
            
            <returns>The response from the SignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SignUp">REST API Reference for SignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SignUpAsync(Amazon.CognitoIdentityProvider.Model.SignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SignUp operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SignUp operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SignUp">REST API Reference for SignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.StartUserImportJob(Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest)">
            <summary>
            Starts the user import.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartUserImportJob service method.</param>
            
            <returns>The response from the StartUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StartUserImportJob">REST API Reference for StartUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.StartUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartUserImportJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartUserImportJob operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StartUserImportJob">REST API Reference for StartUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.StopUserImportJob(Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest)">
            <summary>
            Stops the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopUserImportJob service method.</param>
            
            <returns>The response from the StopUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StopUserImportJob">REST API Reference for StopUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.StopUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StopUserImportJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopUserImportJob operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StopUserImportJob">REST API Reference for StopUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateDeviceStatus(Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest)">
            <summary>
            Updates the device status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDeviceStatus service method.</param>
            
            <returns>The response from the UpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateDeviceStatus">REST API Reference for UpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateDeviceStatusAsync(Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateDeviceStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateDeviceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateDeviceStatus">REST API Reference for UpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateGroup(Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest)">
            <summary>
            Updates the specified group with the specified attributes.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateGroup service method.</param>
            
            <returns>The response from the UpdateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateGroup">REST API Reference for UpdateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateGroupAsync(Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateGroup">REST API Reference for UpdateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserAttributes(Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest)">
            <summary>
            Allows a user to update a specific attribute (one at a time).
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserAttributes service method.</param>
            
            <returns>The response from the UpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email or
            phone number that has already been supplied as an alias from a different account.
            This exception tells user that an account with this email or phone already exists.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserAttributes">REST API Reference for UpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateUserAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateUserAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserAttributes">REST API Reference for UpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserPool(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest)">
            <summary>
            Updates the specified user pool with the specified attributes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPool service method.</param>
            
            <returns>The response from the UpdateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you are trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception gets thrown when a user pool tag cannot be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPool">REST API Reference for UpdateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserPoolAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateUserPool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateUserPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPool">REST API Reference for UpdateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserPoolClient(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest)">
            <summary>
            Allows the developer to update the specified user pool client and password policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolClient service method.</param>
            
            <returns>The response from the UpdateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolClient">REST API Reference for UpdateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateUserPoolClient operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolClient operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolClient">REST API Reference for UpdateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.VerifyUserAttribute(Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest)">
            <summary>
            Verifies the specified user attributes in the user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyUserAttribute service method.</param>
            
            <returns>The response from the VerifyUserAttribute service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifyUserAttribute">REST API Reference for VerifyUserAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.VerifyUserAttributeAsync(Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the VerifyUserAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyUserAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifyUserAttribute">REST API Reference for VerifyUserAttribute Operation</seealso>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider">
             <summary>
             Interface for accessing CognitoIdentityProvider
            
             Using the Amazon Cognito Your User Pools API, you can create a user pool to manage
             directories and users. You can authenticate a user to obtain tokens related to user
             identity and access policies.
             
              
             <para>
             This API reference provides information about user pools in Amazon Cognito Your User
             Pools.
             </para>
              
             <para>
             For more information, see the Amazon Cognito Documentation.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AddCustomAttributes(Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest)">
            <summary>
            Adds additional user attributes to the user pool schema.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddCustomAttributes service method.</param>
            
            <returns>The response from the AddCustomAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you are trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AddCustomAttributes">REST API Reference for AddCustomAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AddCustomAttributesAsync(Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddCustomAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddCustomAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AddCustomAttributes">REST API Reference for AddCustomAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminAddUserToGroup(Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest)">
            <summary>
            Adds the specified user to the specified group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminAddUserToGroup service method.</param>
            
            <returns>The response from the AdminAddUserToGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminAddUserToGroup">REST API Reference for AdminAddUserToGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminAddUserToGroupAsync(Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminAddUserToGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminAddUserToGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminAddUserToGroup">REST API Reference for AdminAddUserToGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminConfirmSignUp(Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest)">
            <summary>
            Confirms user registration as an admin without using a confirmation code. Works on
            any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminConfirmSignUp service method.</param>
            
            <returns>The response from the AdminConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception gets thrown when the user has made too many failed attempts for a given
            action (e.g., sign in).
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminConfirmSignUp">REST API Reference for AdminConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminConfirmSignUpAsync(Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminConfirmSignUp operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminConfirmSignUp operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminConfirmSignUp">REST API Reference for AdminConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminCreateUser(Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest)">
            <summary>
            Creates a new user in the specified user pool and sends a welcome message via email
            or phone (SMS). This message is based on a template that you configured in your call
            to CreateUserPool or UpdateUserPool. This template includes your custom sign-up instructions
            and placeholders for user name and temporary password.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminCreateUser service method.</param>
            
            <returns>The response from the AdminCreateUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException">
            The request failed because the user is in an unsupported state.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminCreateUser">REST API Reference for AdminCreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminCreateUserAsync(Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminCreateUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminCreateUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminCreateUser">REST API Reference for AdminCreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDeleteUser(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest)">
            <summary>
            Deletes a user as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUser service method.</param>
            
            <returns>The response from the AdminDeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUser">REST API Reference for AdminDeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDeleteUserAsync(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminDeleteUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUser">REST API Reference for AdminDeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDeleteUserAttributes(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest)">
            <summary>
            Deletes the user attributes in a user pool as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUserAttributes service method.</param>
            
            <returns>The response from the AdminDeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUserAttributes">REST API Reference for AdminDeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDeleteUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminDeleteUserAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUserAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUserAttributes">REST API Reference for AdminDeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDisableUser(Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest)">
            <summary>
            Disables the specified user as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDisableUser service method.</param>
            
            <returns>The response from the AdminDisableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableUser">REST API Reference for AdminDisableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDisableUserAsync(Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminDisableUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminDisableUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableUser">REST API Reference for AdminDisableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminEnableUser(Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest)">
            <summary>
            Enables the specified user as an administrator. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminEnableUser service method.</param>
            
            <returns>The response from the AdminEnableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminEnableUser">REST API Reference for AdminEnableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminEnableUserAsync(Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminEnableUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminEnableUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminEnableUser">REST API Reference for AdminEnableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminForgetDevice(Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest)">
            <summary>
            Forgets the device, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminForgetDevice service method.</param>
            
            <returns>The response from the AdminForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminForgetDevice">REST API Reference for AdminForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminForgetDeviceAsync(Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminForgetDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminForgetDevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminForgetDevice">REST API Reference for AdminForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminGetDevice(Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest)">
            <summary>
            Gets the device, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetDevice service method.</param>
            
            <returns>The response from the AdminGetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetDevice">REST API Reference for AdminGetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminGetDeviceAsync(Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminGetDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminGetDevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetDevice">REST API Reference for AdminGetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminGetUser(Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest)">
            <summary>
            Gets the specified user by user name in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetUser service method.</param>
            
            <returns>The response from the AdminGetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetUser">REST API Reference for AdminGetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminGetUserAsync(Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminGetUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminGetUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetUser">REST API Reference for AdminGetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminInitiateAuth(Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest)">
            <summary>
            Initiates the authentication flow, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminInitiateAuth service method.</param>
            
            <returns>The response from the AdminInitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito cannot find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminInitiateAuth">REST API Reference for AdminInitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminInitiateAuthAsync(Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminInitiateAuth operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminInitiateAuth operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminInitiateAuth">REST API Reference for AdminInitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminListDevices(Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest)">
            <summary>
            Lists devices, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListDevices service method.</param>
            
            <returns>The response from the AdminListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListDevices">REST API Reference for AdminListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminListDevicesAsync(Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminListDevices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminListDevices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListDevices">REST API Reference for AdminListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminListGroupsForUser(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest)">
            <summary>
            Lists the groups that the user belongs to.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListGroupsForUser service method.</param>
            
            <returns>The response from the AdminListGroupsForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListGroupsForUser">REST API Reference for AdminListGroupsForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminListGroupsForUserAsync(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminListGroupsForUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminListGroupsForUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListGroupsForUser">REST API Reference for AdminListGroupsForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminRemoveUserFromGroup(Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest)">
            <summary>
            Removes the specified user from the specified group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRemoveUserFromGroup service method.</param>
            
            <returns>The response from the AdminRemoveUserFromGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRemoveUserFromGroup">REST API Reference for AdminRemoveUserFromGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminRemoveUserFromGroupAsync(Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminRemoveUserFromGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminRemoveUserFromGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRemoveUserFromGroup">REST API Reference for AdminRemoveUserFromGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminResetUserPassword(Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest)">
            <summary>
            Resets the specified user's password in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            When a developer calls this API, the current password is invalidated, so it must be
            changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException
            exception back and should direct the user down the flow to reset the password, which
            is the same as the forgot password flow. In addition, if the user pool has phone verification
            selected and a verified phone number exists for the user, or if email verification
            is selected and a verified email exists for the user, calling this API will also result
            in sending a message to the end user with the code to change their password.
            </para>
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminResetUserPassword service method.</param>
            
            <returns>The response from the AdminResetUserPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminResetUserPassword">REST API Reference for AdminResetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminResetUserPasswordAsync(Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminResetUserPassword operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminResetUserPassword operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminResetUserPassword">REST API Reference for AdminResetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminRespondToAuthChallenge(Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest)">
            <summary>
            Responds to an authentication challenge, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRespondToAuthChallenge service method.</param>
            
            <returns>The response from the AdminRespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email or
            phone number that has already been supplied as an alias from a different account.
            This exception tells user that an account with this email or phone already exists.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito cannot find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRespondToAuthChallenge">REST API Reference for AdminRespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminRespondToAuthChallengeAsync(Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminRespondToAuthChallenge operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminRespondToAuthChallenge operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRespondToAuthChallenge">REST API Reference for AdminRespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminSetUserSettings(Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest)">
            <summary>
            Sets all the user settings for a specified user name. Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserSettings service method.</param>
            
            <returns>The response from the AdminSetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserSettings">REST API Reference for AdminSetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminSetUserSettingsAsync(Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminSetUserSettings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminSetUserSettings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserSettings">REST API Reference for AdminSetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUpdateDeviceStatus(Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest)">
            <summary>
            Updates the device status as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateDeviceStatus service method.</param>
            
            <returns>The response from the AdminUpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateDeviceStatus">REST API Reference for AdminUpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUpdateDeviceStatusAsync(Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminUpdateDeviceStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminUpdateDeviceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateDeviceStatus">REST API Reference for AdminUpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUpdateUserAttributes(Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest)">
            <summary>
            Updates the specified user's attributes, including developer attributes, as an administrator.
            Works on any user.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateUserAttributes service method.</param>
            
            <returns>The response from the AdminUpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email or
            phone number that has already been supplied as an alias from a different account.
            This exception tells user that an account with this email or phone already exists.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateUserAttributes">REST API Reference for AdminUpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUpdateUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminUpdateUserAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminUpdateUserAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateUserAttributes">REST API Reference for AdminUpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUserGlobalSignOut(Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest)">
            <summary>
            Signs out users from all devices, as an administrator.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUserGlobalSignOut service method.</param>
            
            <returns>The response from the AdminUserGlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUserGlobalSignOut">REST API Reference for AdminUserGlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUserGlobalSignOutAsync(Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AdminUserGlobalSignOut operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AdminUserGlobalSignOut operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUserGlobalSignOut">REST API Reference for AdminUserGlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ChangePassword(Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest)">
            <summary>
            Changes the password for a specified user in a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ChangePassword service method.</param>
            
            <returns>The response from the ChangePassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ChangePassword">REST API Reference for ChangePassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ChangePasswordAsync(Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ChangePassword operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangePassword operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ChangePassword">REST API Reference for ChangePassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmDevice(Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest)">
            <summary>
            Confirms tracking of the device. This API call is the call that beings device tracking.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmDevice service method.</param>
            
            <returns>The response from the ConfirmDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmDevice">REST API Reference for ConfirmDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmDeviceAsync(Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmDevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmDevice">REST API Reference for ConfirmDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmForgotPassword(Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest)">
            <summary>
            Allows a user to enter a code provided when they reset their password to update their
            password.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmForgotPassword service method.</param>
            
            <returns>The response from the ConfirmForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception gets thrown when the user has made too many failed attempts for a given
            action (e.g., sign in).
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmForgotPassword">REST API Reference for ConfirmForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmForgotPasswordAsync(Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmForgotPassword operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmForgotPassword operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmForgotPassword">REST API Reference for ConfirmForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmSignUp(Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest)">
            <summary>
            Confirms registration of a user and handles the existing alias from a previous user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmSignUp service method.</param>
            
            <returns>The response from the ConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email or
            phone number that has already been supplied as an alias from a different account.
            This exception tells user that an account with this email or phone already exists.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception gets thrown when the user has made too many failed attempts for a given
            action (e.g., sign in).
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmSignUp">REST API Reference for ConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmSignUpAsync(Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmSignUp operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmSignUp operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmSignUp">REST API Reference for ConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateGroup(Amazon.CognitoIdentityProvider.Model.CreateGroupRequest)">
            <summary>
            Creates a new group in the specified user pool.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGroup service method.</param>
            
            <returns>The response from the CreateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.GroupExistsException">
            This exception is thrown when Amazon Cognito encounters a group that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateGroup">REST API Reference for CreateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateGroupAsync(Amazon.CognitoIdentityProvider.Model.CreateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateGroup">REST API Reference for CreateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserImportJob(Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest)">
            <summary>
            Creates the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserImportJob service method.</param>
            
            <returns>The response from the CreateUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserImportJob">REST API Reference for CreateUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateUserImportJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUserImportJob operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserImportJob">REST API Reference for CreateUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserPool(Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest)">
            <summary>
            Creates a new Amazon Cognito user pool and sets the password policy for the pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPool service method.</param>
            
            <returns>The response from the CreateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception gets thrown when a user pool tag cannot be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPool">REST API Reference for CreateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserPoolAsync(Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateUserPool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUserPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPool">REST API Reference for CreateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserPoolClient(Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest)">
            <summary>
            Creates the user pool client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolClient service method.</param>
            
            <returns>The response from the CreateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolClient">REST API Reference for CreateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateUserPoolClient operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolClient operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolClient">REST API Reference for CreateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteGroup(Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest)">
            <summary>
            Deletes a group. Currently only groups with no members can be deleted.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGroup service method.</param>
            
            <returns>The response from the DeleteGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteGroup">REST API Reference for DeleteGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteGroupAsync(Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteGroup">REST API Reference for DeleteGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUser(Amazon.CognitoIdentityProvider.Model.DeleteUserRequest)">
            <summary>
            Allows a user to delete one's self.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            
            <returns>The response from the DeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserAttributes(Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest)">
            <summary>
            Deletes the attributes for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserAttributes service method.</param>
            
            <returns>The response from the DeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserAttributes">REST API Reference for DeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUserAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUserAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserAttributes">REST API Reference for DeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserPool(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest)">
            <summary>
            Deletes the specified Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPool service method.</param>
            
            <returns>The response from the DeleteUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you are trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPool">REST API Reference for DeleteUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserPoolAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUserPool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUserPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPool">REST API Reference for DeleteUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserPoolClient(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest)">
            <summary>
            Allows the developer to delete the user pool client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolClient service method.</param>
            
            <returns>The response from the DeleteUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolClient">REST API Reference for DeleteUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUserPoolClient operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolClient operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolClient">REST API Reference for DeleteUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserImportJob(Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest)">
            <summary>
            Describes the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserImportJob service method.</param>
            
            <returns>The response from the DescribeUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserImportJob">REST API Reference for DescribeUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeUserImportJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeUserImportJob operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserImportJob">REST API Reference for DescribeUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserPool(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest)">
            <summary>
            Returns the configuration information and metadata of the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPool service method.</param>
            
            <returns>The response from the DescribeUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception gets thrown when a user pool tag cannot be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPool">REST API Reference for DescribeUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserPoolAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeUserPool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeUserPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPool">REST API Reference for DescribeUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserPoolClient(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest)">
            <summary>
            Client method for returning the configuration information and metadata of the specified
            user pool client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolClient service method.</param>
            
            <returns>The response from the DescribeUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolClient">REST API Reference for DescribeUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeUserPoolClient operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolClient operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolClient">REST API Reference for DescribeUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ForgetDevice(Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest)">
            <summary>
            Forgets the specified device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgetDevice service method.</param>
            
            <returns>The response from the ForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgetDevice">REST API Reference for ForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ForgetDeviceAsync(Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ForgetDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ForgetDevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgetDevice">REST API Reference for ForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ForgotPassword(Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest)">
            <summary>
            Retrieves the password for the specified client ID or username.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgotPassword service method.</param>
            
            <returns>The response from the ForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgotPassword">REST API Reference for ForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ForgotPasswordAsync(Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ForgotPassword operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ForgotPassword operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgotPassword">REST API Reference for ForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetCSVHeader(Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest)">
            <summary>
            Gets the header information for the .csv file to be used as input for the user import
            job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCSVHeader service method.</param>
            
            <returns>The response from the GetCSVHeader service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetCSVHeader">REST API Reference for GetCSVHeader Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetCSVHeaderAsync(Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCSVHeader operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCSVHeader operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetCSVHeader">REST API Reference for GetCSVHeader Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetDevice(Amazon.CognitoIdentityProvider.Model.GetDeviceRequest)">
            <summary>
            Gets the device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevice service method.</param>
            
            <returns>The response from the GetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetDevice">REST API Reference for GetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetDeviceAsync(Amazon.CognitoIdentityProvider.Model.GetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetDevice">REST API Reference for GetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetGroup(Amazon.CognitoIdentityProvider.Model.GetGroupRequest)">
            <summary>
            Gets a group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGroup service method.</param>
            
            <returns>The response from the GetGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetGroup">REST API Reference for GetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetGroupAsync(Amazon.CognitoIdentityProvider.Model.GetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetGroup">REST API Reference for GetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUser(Amazon.CognitoIdentityProvider.Model.GetUserRequest)">
            <summary>
            Gets the user attributes and metadata for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUser service method.</param>
            
            <returns>The response from the GetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUser">REST API Reference for GetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUserAsync(Amazon.CognitoIdentityProvider.Model.GetUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetUser operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUser">REST API Reference for GetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUserAttributeVerificationCode(Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest)">
            <summary>
            Gets the user attribute verification code for the specified attribute name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserAttributeVerificationCode service method.</param>
            
            <returns>The response from the GetUserAttributeVerificationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserAttributeVerificationCode">REST API Reference for GetUserAttributeVerificationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUserAttributeVerificationCodeAsync(Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetUserAttributeVerificationCode operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUserAttributeVerificationCode operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserAttributeVerificationCode">REST API Reference for GetUserAttributeVerificationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GlobalSignOut(Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest)">
            <summary>
            Signs out users from all devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GlobalSignOut service method.</param>
            
            <returns>The response from the GlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GlobalSignOut">REST API Reference for GlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GlobalSignOutAsync(Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GlobalSignOut operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GlobalSignOut operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GlobalSignOut">REST API Reference for GlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.InitiateAuth(Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest)">
            <summary>
            Initiates the authentication flow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateAuth service method.</param>
            
            <returns>The response from the InitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/InitiateAuth">REST API Reference for InitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.InitiateAuthAsync(Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the InitiateAuth operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateAuth operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/InitiateAuth">REST API Reference for InitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListDevices(Amazon.CognitoIdentityProvider.Model.ListDevicesRequest)">
            <summary>
            Lists the devices.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            
            <returns>The response from the ListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListDevicesAsync(Amazon.CognitoIdentityProvider.Model.ListDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListDevices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDevices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListGroups(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest)">
            <summary>
            Lists the groups associated with a user pool.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroups service method.</param>
            
            <returns>The response from the ListGroups service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListGroups">REST API Reference for ListGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListGroupsAsync(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListGroups">REST API Reference for ListGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserImportJobs(Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest)">
            <summary>
            Lists the user import jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserImportJobs service method.</param>
            
            <returns>The response from the ListUserImportJobs service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserImportJobs">REST API Reference for ListUserImportJobs Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserImportJobsAsync(Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUserImportJobs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUserImportJobs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserImportJobs">REST API Reference for ListUserImportJobs Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserPoolClients(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest)">
            <summary>
            Lists the clients that have been created for the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPoolClients service method.</param>
            
            <returns>The response from the ListUserPoolClients service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPoolClients">REST API Reference for ListUserPoolClients Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserPoolClientsAsync(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUserPoolClients operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUserPoolClients operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPoolClients">REST API Reference for ListUserPoolClients Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserPools(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest)">
            <summary>
            Lists the user pools associated with an AWS account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPools service method.</param>
            
            <returns>The response from the ListUserPools service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPools">REST API Reference for ListUserPools Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserPoolsAsync(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUserPools operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUserPools operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPools">REST API Reference for ListUserPools Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUsers(Amazon.CognitoIdentityProvider.Model.ListUsersRequest)">
            <summary>
            Lists the users in the Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            
            <returns>The response from the ListUsers service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUsersAsync(Amazon.CognitoIdentityProvider.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUsers operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUsers operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUsersInGroup(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest)">
            <summary>
            Lists the users in the specified group.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsersInGroup service method.</param>
            
            <returns>The response from the ListUsersInGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsersInGroup">REST API Reference for ListUsersInGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUsersInGroupAsync(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUsersInGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUsersInGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsersInGroup">REST API Reference for ListUsersInGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ResendConfirmationCode(Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest)">
            <summary>
            Resends the confirmation (for confirmation of registration) to a specific user in
            the user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendConfirmationCode service method.</param>
            
            <returns>The response from the ResendConfirmationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ResendConfirmationCode">REST API Reference for ResendConfirmationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ResendConfirmationCodeAsync(Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResendConfirmationCode operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResendConfirmationCode operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ResendConfirmationCode">REST API Reference for ResendConfirmationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.RespondToAuthChallenge(Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest)">
            <summary>
            Responds to the authentication challenge.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondToAuthChallenge service method.</param>
            
            <returns>The response from the RespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email or
            phone number that has already been supplied as an alias from a different account.
            This exception tells user that an account with this email or phone already exists.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito cannot find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RespondToAuthChallenge">REST API Reference for RespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.RespondToAuthChallengeAsync(Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RespondToAuthChallenge operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RespondToAuthChallenge operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RespondToAuthChallenge">REST API Reference for RespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetUserSettings(Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest)">
            <summary>
            Sets the user settings like multi-factor authentication (MFA). If MFA is to be removed
            for a particular attribute pass the attribute with code delivery as null. If null
            list is passed, all MFA options are removed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserSettings service method.</param>
            
            <returns>The response from the SetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserSettings">REST API Reference for SetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetUserSettingsAsync(Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetUserSettings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetUserSettings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserSettings">REST API Reference for SetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SignUp(Amazon.CognitoIdentityProvider.Model.SignUpRequest)">
            <summary>
            Registers the user in the specified user pool and creates a user name, password, and
            user attributes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SignUp service method.</param>
            
            <returns>The response from the SignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when the Amazon Cognito service encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SignUp">REST API Reference for SignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SignUpAsync(Amazon.CognitoIdentityProvider.Model.SignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SignUp operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SignUp operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SignUp">REST API Reference for SignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.StartUserImportJob(Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest)">
            <summary>
            Starts the user import.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartUserImportJob service method.</param>
            
            <returns>The response from the StartUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StartUserImportJob">REST API Reference for StartUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.StartUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartUserImportJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartUserImportJob operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StartUserImportJob">REST API Reference for StartUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.StopUserImportJob(Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest)">
            <summary>
            Stops the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopUserImportJob service method.</param>
            
            <returns>The response from the StopUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StopUserImportJob">REST API Reference for StopUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.StopUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StopUserImportJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopUserImportJob operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StopUserImportJob">REST API Reference for StopUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateDeviceStatus(Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest)">
            <summary>
            Updates the device status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDeviceStatus service method.</param>
            
            <returns>The response from the UpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is invalid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateDeviceStatus">REST API Reference for UpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateDeviceStatusAsync(Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateDeviceStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateDeviceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateDeviceStatus">REST API Reference for UpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateGroup(Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest)">
            <summary>
            Updates the specified group with the specified attributes.
            
             
            <para>
            Requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateGroup service method.</param>
            
            <returns>The response from the UpdateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateGroup">REST API Reference for UpdateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateGroupAsync(Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateGroup">REST API Reference for UpdateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserAttributes(Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest)">
            <summary>
            Allows a user to update a specific attribute (one at a time).
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserAttributes service method.</param>
            
            <returns>The response from the UpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email or
            phone number that has already been supplied as an alias from a different account.
            This exception tells user that an account with this email or phone already exists.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when the Amazon Cognito service encounters an invalid AWS
            Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception gets thrown when the Amazon Cognito service encounters an unexpected
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception gets thrown when the Amazon Cognito service encounters a user validation
            exception with the AWS Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserAttributes">REST API Reference for UpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateUserAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateUserAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserAttributes">REST API Reference for UpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserPool(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest)">
            <summary>
            Updates the specified user pool with the specified attributes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPool service method.</param>
            
            <returns>The response from the UpdateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito is not allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration does not have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is invalid for the role provided
            for SMS configuration. This can happen if you do not trust <b>cognito-idp.amazonaws.com</b>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you are trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception gets thrown when a user pool tag cannot be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPool">REST API Reference for UpdateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserPoolAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateUserPool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateUserPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPool">REST API Reference for UpdateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserPoolClient(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest)">
            <summary>
            Allows the developer to update the specified user pool client and password policy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolClient service method.</param>
            
            <returns>The response from the UpdateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolClient">REST API Reference for UpdateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateUserPoolClient operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolClient operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolClient">REST API Reference for UpdateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.VerifyUserAttribute(Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest)">
            <summary>
            Verifies the specified user attributes in the user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyUserAttribute service method.</param>
            
            <returns>The response from the VerifyUserAttribute service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code does not match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested AWS resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception gets thrown when a user is not authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service cannot find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception gets thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user is not confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifyUserAttribute">REST API Reference for VerifyUserAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.VerifyUserAttributeAsync(Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the VerifyUserAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyUserAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifyUserAttribute">REST API Reference for VerifyUserAttribute Operation</seealso>
        </member>
    </members>
</doc>
