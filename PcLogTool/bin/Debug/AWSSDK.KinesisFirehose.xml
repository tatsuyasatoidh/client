<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.KinesisFirehose</name>
    </assembly>
    <members>
        <member name="T:Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig">
            <summary>
            Configuration for accessing Amazon KinesisFirehose service
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.AmazonKinesisFirehoseException">
            <summary>
             Common exception for the KinesisFirehose service.
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonKinesisFirehoseException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonKinesisFirehoseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonKinesisFirehoseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonKinesisFirehoseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonKinesisFirehoseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonKinesisFirehoseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.CompressionFormat">
            <summary>
            Constants used for properties of type CompressionFormat.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.CompressionFormat.GZIP">
            <summary>
            Constant GZIP for CompressionFormat
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.CompressionFormat.Snappy">
            <summary>
            Constant Snappy for CompressionFormat
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.CompressionFormat.UNCOMPRESSED">
            <summary>
            Constant UNCOMPRESSED for CompressionFormat
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.CompressionFormat.ZIP">
            <summary>
            Constant ZIP for CompressionFormat
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.CompressionFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.CompressionFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.CompressionFormat.op_Implicit(System.String)~Amazon.KinesisFirehose.CompressionFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.DeliveryStreamStatus">
            <summary>
            Constants used for properties of type DeliveryStreamStatus.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamStatus.ACTIVE">
            <summary>
            Constant ACTIVE for DeliveryStreamStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamStatus.CREATING">
            <summary>
            Constant CREATING for DeliveryStreamStatus
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.DeliveryStreamStatus.DELETING">
            <summary>
            Constant DELETING for DeliveryStreamStatus
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.DeliveryStreamStatus.op_Implicit(System.String)~Amazon.KinesisFirehose.DeliveryStreamStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod">
            <summary>
            Constants used for properties of type ElasticsearchIndexRotationPeriod.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.NoRotation">
            <summary>
            Constant NoRotation for ElasticsearchIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.OneDay">
            <summary>
            Constant OneDay for ElasticsearchIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.OneHour">
            <summary>
            Constant OneHour for ElasticsearchIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.OneMonth">
            <summary>
            Constant OneMonth for ElasticsearchIndexRotationPeriod
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.OneWeek">
            <summary>
            Constant OneWeek for ElasticsearchIndexRotationPeriod
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod.op_Implicit(System.String)~Amazon.KinesisFirehose.ElasticsearchIndexRotationPeriod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ElasticsearchS3BackupMode">
            <summary>
            Constants used for properties of type ElasticsearchS3BackupMode.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchS3BackupMode.AllDocuments">
            <summary>
            Constant AllDocuments for ElasticsearchS3BackupMode
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ElasticsearchS3BackupMode.FailedDocumentsOnly">
            <summary>
            Constant FailedDocumentsOnly for ElasticsearchS3BackupMode
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchS3BackupMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchS3BackupMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ElasticsearchS3BackupMode.op_Implicit(System.String)~Amazon.KinesisFirehose.ElasticsearchS3BackupMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.NoEncryptionConfig">
            <summary>
            Constants used for properties of type NoEncryptionConfig.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.NoEncryptionConfig.NoEncryption">
            <summary>
            Constant NoEncryption for NoEncryptionConfig
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.NoEncryptionConfig.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.NoEncryptionConfig.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.NoEncryptionConfig.op_Implicit(System.String)~Amazon.KinesisFirehose.NoEncryptionConfig">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ProcessorParameterName">
            <summary>
            Constants used for properties of type ProcessorParameterName.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.LambdaArn">
            <summary>
            Constant LambdaArn for ProcessorParameterName
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorParameterName.NumberOfRetries">
            <summary>
            Constant NumberOfRetries for ProcessorParameterName
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorParameterName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorParameterName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorParameterName.op_Implicit(System.String)~Amazon.KinesisFirehose.ProcessorParameterName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.ProcessorType">
            <summary>
            Constants used for properties of type ProcessorType.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.ProcessorType.Lambda">
            <summary>
            Constant Lambda for ProcessorType
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.ProcessorType.op_Implicit(System.String)~Amazon.KinesisFirehose.ProcessorType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.RedshiftS3BackupMode">
            <summary>
            Constants used for properties of type RedshiftS3BackupMode.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.RedshiftS3BackupMode.Disabled">
            <summary>
            Constant Disabled for RedshiftS3BackupMode
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.RedshiftS3BackupMode.Enabled">
            <summary>
            Constant Enabled for RedshiftS3BackupMode
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.RedshiftS3BackupMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.RedshiftS3BackupMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.RedshiftS3BackupMode.op_Implicit(System.String)~Amazon.KinesisFirehose.RedshiftS3BackupMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.S3BackupMode">
            <summary>
            Constants used for properties of type S3BackupMode.
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.S3BackupMode.Disabled">
            <summary>
            Constant Disabled for S3BackupMode
            </summary>
        </member>
        <member name="F:Amazon.KinesisFirehose.S3BackupMode.Enabled">
            <summary>
            Constant Enabled for S3BackupMode
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.S3BackupMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.S3BackupMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.S3BackupMode.op_Implicit(System.String)~Amazon.KinesisFirehose.S3BackupMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.AmazonKinesisFirehoseRequest">
            <summary>
            Base class for KinesisFirehose operation requests.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.BufferingHints">
            <summary>
            Describes hints for the buffering to perform before delivering data to the destination.
            Please note that these options are treated as hints, and therefore Firehose may choose
            to use different values when it is optimal.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.BufferingHints.IntervalInSeconds">
            <summary>
            Gets and sets the property IntervalInSeconds. 
            <para>
            Buffer incoming data for the specified period of time, in seconds, before delivering
            it to the destination. The default value is 300.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.BufferingHints.SizeInMBs">
            <summary>
            Gets and sets the property SizeInMBs. 
            <para>
            Buffer incoming data to the specified size, in MBs, before delivering it to the destination.
            The default value is 5.
            </para>
             
            <para>
            We recommend setting this parameter to a value greater than the amount of data you
            typically ingest into the delivery stream in 10 seconds. For example, if you typically
            ingest data at 1 MB/sec, the value should be 10 MB or higher.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions">
            <summary>
            Describes the CloudWatch logging options for your delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Enables or disables CloudWatch logging.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The CloudWatch group name for logging. This value is required if CloudWatch logging
            is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The CloudWatch log stream name for logging. This value is required if CloudWatch logging
            is enabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ConcurrentModificationException">
            <summary>
             KinesisFirehose exception
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentModificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ConcurrentModificationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConcurrentModificationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.CopyCommand">
            <summary>
            Describes a <code>COPY</code> command for Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CopyCommand.CopyOptions">
            <summary>
            Gets and sets the property CopyOptions. 
            <para>
            Optional parameters to use with the Amazon Redshift <code>COPY</code> command. For
            more information, see the "Optional Parameters" section of <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_COPY.html">Amazon
            Redshift COPY command</a>. Some possible examples that would apply to Firehose are
            as follows:
            </para>
             
            <para>
             <code>delimiter '\t' lzop;</code> - fields are delimited with "\t" (TAB character)
            and compressed using lzop.
            </para>
             
            <para>
             <code>delimiter '|</code> - fields are delimited with "|" (this is the default delimiter).
            </para>
             
            <para>
             <code>delimiter '|' escape</code> - the delimiter should be escaped.
            </para>
             
            <para>
             <code>fixedwidth 'venueid:3,venuename:25,venuecity:12,venuestate:2,venueseats:6'</code>
            - fields are fixed width in the source, with each width specified after every column
            in the table.
            </para>
             
            <para>
             <code>JSON 's3://mybucket/jsonpaths.txt'</code> - data is in JSON format, and the
            path specified is the format of the data.
            </para>
             
            <para>
            For more examples, see <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_COPY_command_examples.html">Amazon
            Redshift COPY command examples</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CopyCommand.DataTableColumns">
            <summary>
            Gets and sets the property DataTableColumns. 
            <para>
            A comma-separated list of column names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CopyCommand.DataTableName">
            <summary>
            Gets and sets the property DataTableName. 
            <para>
            The name of the target table. The table must already exist in the database.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest">
            <summary>
            Container for the parameters to the CreateDeliveryStream operation.
            Creates a delivery stream.
            
             
            <para>
            By default, you can create up to 20 delivery streams per region.
            </para>
             
            <para>
            This is an asynchronous operation that immediately returns. The initial status of
            the delivery stream is <code>CREATING</code>. After the delivery stream is created,
            its status is <code>ACTIVE</code> and it now accepts data. Attempts to send data to
            a delivery stream that is not in the <code>ACTIVE</code> state cause an exception.
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            A delivery stream is configured with a single destination: Amazon S3, Amazon Elasticsearch
            Service, or Amazon Redshift. You must specify only one of the following destination
            configuration parameters: <b>ExtendedS3DestinationConfiguration</b>, <b>S3DestinationConfiguration</b>,
            <b>ElasticsearchDestinationConfiguration</b>, or <b>RedshiftDestinationConfiguration</b>.
            </para>
             
            <para>
            When you specify <b>S3DestinationConfiguration</b>, you can also provide the following
            optional values: <b>BufferingHints</b>, <b>EncryptionConfiguration</b>, and <b>CompressionFormat</b>.
            By default, if no <b>BufferingHints</b> value is provided, Firehose buffers data up
            to 5 MB or for 5 minutes, whichever condition is satisfied first. Note that <b>BufferingHints</b>
            is a hint, so there are some cases where the service cannot adhere to these conditions
            strictly; for example, record boundaries are such that the size is a little over or
            under the configured buffering size. By default, no encryption is performed. We strongly
            recommend that you enable encryption to ensure secure data storage in Amazon S3.
            </para>
             
            <para>
            A few notes about Amazon Redshift as a destination:
            </para>
             <ul> <li> 
            <para>
            An Amazon Redshift destination requires an S3 bucket as intermediate location, as
            Firehose first delivers data to S3 and then uses <code>COPY</code> syntax to load
            data into an Amazon Redshift table. This is specified in the <b>RedshiftDestinationConfiguration.S3Configuration</b>
            parameter.
            </para>
             </li> <li> 
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <b>RedshiftDestinationConfiguration.S3Configuration</b> because the Amazon Redshift
            <code>COPY</code> operation that reads from the S3 bucket doesn't support these compression
            formats.
            </para>
             </li> <li> 
            <para>
            We strongly recommend that you use the user name and password you provide exclusively
            with Firehose, and that the permissions for the account are restricted for Amazon
            Redshift <code>INSERT</code> permissions.
            </para>
             </li> </ul> 
            <para>
            Firehose assumes the IAM role that is configured as part of the destination. The role
            should allow the Firehose principal to assume the role, and the role should have permissions
            that allows the service to deliver the data. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Amazon
            S3 Bucket Access</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream. This name must be unique per AWS account in the same
            region. You can have multiple delivery streams with the same name if they are in different
            accounts or different regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.ElasticsearchDestinationConfiguration">
            <summary>
            Gets and sets the property ElasticsearchDestinationConfiguration. 
            <para>
            The destination in Amazon ES. You can specify only one destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.ExtendedS3DestinationConfiguration">
            <summary>
            Gets and sets the property ExtendedS3DestinationConfiguration. 
            <para>
            The destination in Amazon S3. You can specify only one destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.RedshiftDestinationConfiguration">
            <summary>
            Gets and sets the property RedshiftDestinationConfiguration. 
            <para>
            The destination in Amazon Redshift. You can specify only one destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest.S3DestinationConfiguration">
            <summary>
            Gets and sets the property S3DestinationConfiguration. 
            <para>
            [Deprecated] The destination in Amazon S3. You can specify only one destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.CreateDeliveryStreamResponse">
            <summary>
            This is the response object from the CreateDeliveryStream operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.CreateDeliveryStreamResponse.DeliveryStreamARN">
            <summary>
            Gets and sets the property DeliveryStreamARN. 
            <para>
            The ARN of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest">
            <summary>
            Container for the parameters to the DeleteDeliveryStream operation.
            Deletes a delivery stream and its data.
            
             
            <para>
            You can delete a delivery stream only if it is in <code>ACTIVE</code> or <code>DELETING</code>
            state, and not in the <code>CREATING</code> state. While the deletion request is in
            process, the delivery stream is in the <code>DELETING</code> state.
            </para>
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            While the delivery stream is <code>DELETING</code> state, the service may continue
            to accept the records, but the service doesn't make any guarantees with respect to
            delivering the data. Therefore, as a best practice, you should first stop any applications
            that are sending records before deleting a delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DeleteDeliveryStreamResponse">
            <summary>
            This is the response object from the DeleteDeliveryStream operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DeliveryStreamDescription">
            <summary>
            Contains information about a delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.CreateTimestamp">
            <summary>
            Gets and sets the property CreateTimestamp. 
            <para>
            The date and time that the delivery stream was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.DeliveryStreamARN">
            <summary>
            Gets and sets the property DeliveryStreamARN. 
            <para>
            The Amazon Resource Name (ARN) of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.DeliveryStreamStatus">
            <summary>
            Gets and sets the property DeliveryStreamStatus. 
            <para>
            The status of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.Destinations">
            <summary>
            Gets and sets the property Destinations. 
            <para>
            The destinations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.HasMoreDestinations">
            <summary>
            Gets and sets the property HasMoreDestinations. 
            <para>
            Indicates whether there are more destinations available to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.LastUpdateTimestamp">
            <summary>
            Gets and sets the property LastUpdateTimestamp. 
            <para>
            The date and time that the delivery stream was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DeliveryStreamDescription.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            Each time the destination is updated for a delivery stream, the version ID is changed,
            and the current version ID is required when updating the destination. This is so that
            the service knows it is applying the changes to the correct version of the delivery
            stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest">
            <summary>
            Container for the parameters to the DescribeDeliveryStream operation.
            Describes the specified delivery stream and gets the status. For example, after your
            delivery stream is created, call <a>DescribeDeliveryStream</a> to see if the delivery
            stream is <code>ACTIVE</code> and therefore ready for data to be sent to it.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest.ExclusiveStartDestinationId">
            <summary>
            Gets and sets the property ExclusiveStartDestinationId. 
            <para>
            The ID of the destination to start returning the destination information. Currently
            Firehose supports one destination per delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit on the number of destinations to return. Currently, you can have one destination
            per delivery stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamResponse">
            <summary>
            This is the response object from the DescribeDeliveryStream operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DescribeDeliveryStreamResponse.DeliveryStreamDescription">
            <summary>
            Gets and sets the property DeliveryStreamDescription. 
            <para>
            Information about the delivery stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.DestinationDescription">
            <summary>
            Describes the destination for a delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.DestinationId">
            <summary>
            Gets and sets the property DestinationId. 
            <para>
            The ID of the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.ElasticsearchDestinationDescription">
            <summary>
            Gets and sets the property ElasticsearchDestinationDescription. 
            <para>
            The destination in Amazon ES.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.ExtendedS3DestinationDescription">
            <summary>
            Gets and sets the property ExtendedS3DestinationDescription. 
            <para>
            The destination in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.RedshiftDestinationDescription">
            <summary>
            Gets and sets the property RedshiftDestinationDescription. 
            <para>
            The destination in Amazon Redshift.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.DestinationDescription.S3DestinationDescription">
            <summary>
            Gets and sets the property S3DestinationDescription. 
            <para>
            [Deprecated] The destination in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ElasticsearchBufferingHints">
            <summary>
            Describes the buffering to perform before delivering data to the Amazon ES destination.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchBufferingHints.IntervalInSeconds">
            <summary>
            Gets and sets the property IntervalInSeconds. 
            <para>
            Buffer incoming data for the specified period of time, in seconds, before delivering
            it to the destination. The default value is 300 (5 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchBufferingHints.SizeInMBs">
            <summary>
            Gets and sets the property SizeInMBs. 
            <para>
            Buffer incoming data to the specified size, in MBs, before delivering it to the destination.
            The default value is 5.
            </para>
             
            <para>
            We recommend setting this parameter to a value greater than the amount of data you
            typically ingest into the delivery stream in 10 seconds. For example, if you typically
            ingest data at 1 MB/sec, the value should be 10 MB or higher.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration">
            <summary>
            Describes the configuration of a destination in Amazon ES.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering options. If no value is specified, the default values for <b>ElasticsearchBufferingHints</b>
            are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.DomainARN">
            <summary>
            Gets and sets the property DomainARN. 
            <para>
            The ARN of the Amazon ES domain. The IAM role must have permissions for <code>DescribeElasticsearchDomain</code>,
            <code>DescribeElasticsearchDomains</code>, and <code>DescribeElasticsearchDomainConfig</code> after
            assuming the role specified in <b>RoleARN</b>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The Elasticsearch index name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.IndexRotationPeriod">
            <summary>
            Gets and sets the property IndexRotationPeriod. 
            <para>
            The Elasticsearch index rotation period. Index rotation appends a timestamp to the
            IndexName to facilitate expiration of old data. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation">Index
            Rotation for Amazon Elasticsearch Service Destination</a>. The default value is <code>OneDay</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in the event that Firehose is unable to deliver documents to Amazon
            ES. The default value is 300 (5 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration
            API and for indexing documents. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Amazon
            S3 Bucket Access</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            Defines how documents should be delivered to Amazon S3. When set to FailedDocumentsOnly,
            Firehose writes any documents that could not be indexed to the configured Amazon S3
            destination, with elasticsearch-failed/ appended to the key prefix. When set to AllDocuments,
            Firehose delivers all incoming records to Amazon S3, and also writes failed documents
            with elasticsearch-failed/ appended to the prefix. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-s3-backup">Amazon
            S3 Backup for Amazon Elasticsearch Service Destination</a>. Default value is FailedDocumentsOnly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.S3Configuration">
            <summary>
            Gets and sets the property S3Configuration. 
            <para>
            The configuration for the intermediate Amazon S3 location from which Amazon ES obtains
            data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration.TypeName">
            <summary>
            Gets and sets the property TypeName. 
            <para>
            The Elasticsearch type name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription">
            <summary>
            The destination description in Amazon ES.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.DomainARN">
            <summary>
            Gets and sets the property DomainARN. 
            <para>
            The ARN of the Amazon ES domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The Elasticsearch index name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.IndexRotationPeriod">
            <summary>
            Gets and sets the property IndexRotationPeriod. 
            <para>
            The Elasticsearch index rotation period
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The Amazon ES retry options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the AWS credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.S3DestinationDescription">
            <summary>
            Gets and sets the property S3DestinationDescription. 
            <para>
            The Amazon S3 destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationDescription.TypeName">
            <summary>
            Gets and sets the property TypeName. 
            <para>
            The Elasticsearch type name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate">
            <summary>
            Describes an update for a destination in Amazon ES.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering options. If no value is specified, <b>ElasticsearchBufferingHints</b>
            object default values are used. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.DomainARN">
            <summary>
            Gets and sets the property DomainARN. 
            <para>
            The ARN of the Amazon ES domain. The IAM role must have permissions for <code>DescribeElasticsearchDomain</code>,
            <code>DescribeElasticsearchDomains</code>, and <code>DescribeElasticsearchDomainConfig</code> after
            assuming the IAM role specified in <b>RoleARN</b>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The Elasticsearch index name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.IndexRotationPeriod">
            <summary>
            Gets and sets the property IndexRotationPeriod. 
            <para>
            The Elasticsearch index rotation period. Index rotation appends a timestamp to IndexName
            to facilitate the expiration of old data. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation">Index
            Rotation for Amazon Elasticsearch Service Destination</a>. Default value is <code>OneDay</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in the event that Firehose is unable to deliver documents to Amazon
            ES. Default value is 300 (5 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration
            API and for indexing documents. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Amazon
            S3 Bucket Access</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.S3Update">
            <summary>
            Gets and sets the property S3Update. 
            <para>
            The Amazon S3 destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate.TypeName">
            <summary>
            Gets and sets the property TypeName. 
            <para>
            The Elasticsearch type name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ElasticsearchRetryOptions">
            <summary>
            Configures retry behavior in the event that Firehose is unable to deliver documents
            to Amazon ES.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ElasticsearchRetryOptions.DurationInSeconds">
            <summary>
            Gets and sets the property DurationInSeconds. 
            <para>
            After an initial failure to deliver to Amazon ES, the total amount of time during
            which Firehose re-attempts delivery (including the first attempt). After this time
            has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds
            (5 minutes). A value of 0 (zero) results in no retries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.EncryptionConfiguration">
            <summary>
            Describes the encryption for a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.EncryptionConfiguration.KMSEncryptionConfig">
            <summary>
            Gets and sets the property KMSEncryptionConfig. 
            <para>
            The encryption key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.EncryptionConfiguration.NoEncryptionConfig">
            <summary>
            Gets and sets the property NoEncryptionConfig. 
            <para>
            Specifically override existing encryption information to ensure no encryption is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration">
            <summary>
            Describes the configuration of a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is UNCOMPRESSED.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files.
            You can specify an extra prefix to be added in front of the time format prefix. Note
            that if the prefix ends with a slash, it appears as a folder in the S3 bucket. For
            more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon
            S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the AWS credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.S3BackupConfiguration">
            <summary>
            Gets and sets the property S3BackupConfiguration. 
            <para>
            The configuration for backup in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription">
            <summary>
            Describes a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files.
            You can specify an extra prefix to be added in front of the time format prefix. Note
            that if the prefix ends with a slash, it appears as a folder in the S3 bucket. For
            more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon
            S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the AWS credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.S3BackupDescription">
            <summary>
            Gets and sets the property S3BackupDescription. 
            <para>
            The configuration for backup in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationDescription.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate">
            <summary>
            Describes an update for a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files.
            You can specify an extra prefix to be added in front of the time format prefix. Note
            that if the prefix ends with a slash, it appears as a folder in the S3 bucket. For
            more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon
            S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the AWS credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            Enables or disables Amazon S3 backup mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate.S3BackupUpdate">
            <summary>
            Gets and sets the property S3BackupUpdate. 
            <para>
            The Amazon S3 destination for backup.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            <summary>
             KinesisFirehose exception
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArgumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.InvalidArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidArgumentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.KMSEncryptionConfig">
            <summary>
            Describes an encryption key for a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.KMSEncryptionConfig.AWSKMSKeyARN">
            <summary>
            Gets and sets the property AWSKMSKeyARN. 
            <para>
            The ARN of the encryption key. Must belong to the same region as the destination Amazon
            S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            <summary>
             KinesisFirehose exception
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest">
            <summary>
            Container for the parameters to the ListDeliveryStreams operation.
            Lists your delivery streams.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <a>ListDeliveryStreams</a>. You can limit the number of delivery streams returned,
            using the <b>Limit</b> parameter. To determine whether there are more delivery streams
            to list, check the value of <b>HasMoreDeliveryStreams</b> in the output. If there
            are more delivery streams to list, you can request them by specifying the name of
            the last delivery stream returned in the call in the <b>ExclusiveStartDeliveryStreamName</b>
            parameter of a subsequent call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest.ExclusiveStartDeliveryStreamName">
            <summary>
            Gets and sets the property ExclusiveStartDeliveryStreamName. 
            <para>
            The name of the delivery stream to start the list with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of delivery streams to list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ListDeliveryStreamsResponse">
            <summary>
            This is the response object from the ListDeliveryStreams operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListDeliveryStreamsResponse.DeliveryStreamNames">
            <summary>
            Gets and sets the property DeliveryStreamNames. 
            <para>
            The names of the delivery streams.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ListDeliveryStreamsResponse.HasMoreDeliveryStreams">
            <summary>
            Gets and sets the property HasMoreDeliveryStreams. 
            <para>
            Indicates whether there are more delivery streams available to list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ProcessingConfiguration">
            <summary>
            Describes a data processing configuration.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ProcessingConfiguration.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Enables or disables data processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ProcessingConfiguration.Processors">
            <summary>
            Gets and sets the property Processors. 
            <para>
            The data processors.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Processor">
            <summary>
            Describes a data processor.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Processor.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            The processor parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Processor.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of processor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ProcessorParameter">
            <summary>
            Describes the processor parameter.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ProcessorParameter.ParameterName">
            <summary>
            Gets and sets the property ParameterName. 
            <para>
            The name of the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.ProcessorParameter.ParameterValue">
            <summary>
            Gets and sets the property ParameterValue. 
            <para>
            The parameter value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.PutRecordBatchRequest">
            <summary>
            Container for the parameters to the PutRecordBatch operation.
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before 64-bit encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, and so on.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <b>FailedPutCount</b>,
            and an array of responses, <b>RequestResponses</b>. Each entry in the <b>RequestResponses</b>
            array provides additional information about the processed record, and directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <b>RequestResponses</b> includes both successfully and unsuccessfully processed records.
            Firehose attempts to process all records in each <a>PutRecordBatch</a> request. A
            single record failure does not stop the processing of subsequent records.
            </para>
             
            <para>
            A successfully processed record includes a <b>RecordId</b> value, which is unique
            for the record. An unsuccessfully processed record includes <b>ErrorCode</b> and <b>ErrorMessage</b>
            values. <b>ErrorCode</b> reflects the type of error, and is one of the following values:
            <code>ServiceUnavailable</code> or <code>InternalFailure</code>. <b>ErrorMessage</b>
            provides more detailed information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <b>FailedPutCount</b> is greater than 0, retry the request,
            resending only those records that might have failed processing. This minimizes the
            possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off and retry.
            If the exception persists, it is possible that the throughput limits have been exceeded
            for the delivery stream.
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchRequest.Records">
            <summary>
            Gets and sets the property Records. 
            <para>
            One or more records.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.PutRecordBatchResponse">
            <summary>
            This is the response object from the PutRecordBatch operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponse.FailedPutCount">
            <summary>
            Gets and sets the property FailedPutCount. 
            <para>
            The number of records that might have failed processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponse.RequestResponses">
            <summary>
            Gets and sets the property RequestResponses. 
            <para>
            The results array. For each record, the index of the response element is the same
            as the index used in the request array.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.PutRecordBatchResponseEntry">
            <summary>
            Contains the result for an individual record from a <a>PutRecordBatch</a> request.
            If the record is successfully added to your delivery stream, it receives a record
            ID. If the record fails to be added to your delivery stream, the result includes an
            error code and an error message.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponseEntry.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error code for an individual record result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponseEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            The error message for an individual record result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordBatchResponseEntry.RecordId">
            <summary>
            Gets and sets the property RecordId. 
            <para>
            The ID of the record.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.PutRecordRequest">
            <summary>
            Container for the parameters to the PutRecord operation.
            Writes a single data record into an Amazon Kinesis Firehose delivery stream. To write
            multiple data records into a delivery stream, use <a>PutRecordBatch</a>. Applications
            using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits and how to request an
            increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, etc.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecord</a> operation returns a <b>RecordId</b>, which is a unique string
            assigned to each record. Producer applications can use this ID for purposes such as
            auditability and investigation.
            </para>
             
            <para>
            If the <a>PutRecord</a> operation throws a <b>ServiceUnavailableException</b>, back
            off and retry. If the exception persists, it is possible that the throughput limits
            have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordRequest.Record">
            <summary>
            Gets and sets the property Record. 
            <para>
            The record.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.PutRecordResponse">
            <summary>
            This is the response object from the PutRecord operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.PutRecordResponse.RecordId">
            <summary>
            Gets and sets the property RecordId. 
            <para>
            The ID of the record.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Record">
            <summary>
            The unit of data in a delivery stream.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Record.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The data blob, which is base64-encoded when the blob is serialized. The maximum size
            of the data blob, before base64-encoding, is 1,000 KB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration">
            <summary>
            Describes the configuration of a destination in Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.ClusterJDBCURL">
            <summary>
            Gets and sets the property ClusterJDBCURL. 
            <para>
            The database connection string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.CopyCommand">
            <summary>
            Gets and sets the property CopyCommand. 
            <para>
            The <code>COPY</code> command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The user password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in the event that Firehose is unable to deliver documents to Amazon
            Redshift. Default value is 3600 (60 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the AWS credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.S3BackupConfiguration">
            <summary>
            Gets and sets the property S3BackupConfiguration. 
            <para>
            The configuration for backup in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.S3Configuration">
            <summary>
            Gets and sets the property S3Configuration. 
            <para>
            The configuration for the intermediate Amazon S3 location from which Amazon Redshift
            obtains data. Restrictions are described in the topic for <a>CreateDeliveryStream</a>.
            </para>
             
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <b>RedshiftDestinationConfiguration.S3Configuration</b> because the Amazon Redshift
            <code>COPY</code> operation that reads from the S3 bucket doesn't support these compression
            formats.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The name of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription">
            <summary>
            Describes a destination in Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.ClusterJDBCURL">
            <summary>
            Gets and sets the property ClusterJDBCURL. 
            <para>
            The database connection string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.CopyCommand">
            <summary>
            Gets and sets the property CopyCommand. 
            <para>
            The <code>COPY</code> command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in the event that Firehose is unable to deliver documents to Amazon
            Redshift. Default value is 3600 (60 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the AWS credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.S3BackupDescription">
            <summary>
            Gets and sets the property S3BackupDescription. 
            <para>
            The configuration for backup in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.S3DestinationDescription">
            <summary>
            Gets and sets the property S3DestinationDescription. 
            <para>
            The Amazon S3 destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationDescription.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The name of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate">
            <summary>
            Describes an update for a destination in Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.ClusterJDBCURL">
            <summary>
            Gets and sets the property ClusterJDBCURL. 
            <para>
            The database connection string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.CopyCommand">
            <summary>
            Gets and sets the property CopyCommand. 
            <para>
            The <code>COPY</code> command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The user password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.ProcessingConfiguration">
            <summary>
            Gets and sets the property ProcessingConfiguration. 
            <para>
            The data processing configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.RetryOptions">
            <summary>
            Gets and sets the property RetryOptions. 
            <para>
            The retry behavior in the event that Firehose is unable to deliver documents to Amazon
            Redshift. Default value is 3600 (60 minutes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the AWS credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.S3BackupMode">
            <summary>
            Gets and sets the property S3BackupMode. 
            <para>
            The Amazon S3 backup mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.S3BackupUpdate">
            <summary>
            Gets and sets the property S3BackupUpdate. 
            <para>
            The Amazon S3 destination for backup.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.S3Update">
            <summary>
            Gets and sets the property S3Update. 
            <para>
            The Amazon S3 destination.
            </para>
             
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <b>RedshiftDestinationUpdate.S3Update</b> because the Amazon Redshift <code>COPY</code>
            operation that reads from the S3 bucket doesn't support these compression formats.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The name of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.RedshiftRetryOptions">
            <summary>
            Configures retry behavior in the event that Firehose is unable to deliver documents
            to Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.RedshiftRetryOptions.DurationInSeconds">
            <summary>
            Gets and sets the property DurationInSeconds. 
            <para>
            The length of time during which Firehose retries delivery after a failure, starting
            from the initial request and including the first attempt. The default value is 3600
            seconds (60 minutes). Firehose does not retry if the value of <code>DurationInSeconds</code>
            is 0 (zero) or if the first delivery attempt takes longer than the current value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            <summary>
             KinesisFirehose exception
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            <summary>
             KinesisFirehose exception
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.S3DestinationConfiguration">
            <summary>
            Describes the configuration of a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option. If no value is specified, <b>BufferingHints</b> object default
            values are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.
            </para>
             
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            for Amazon Redshift destinations because they are not supported by the Amazon Redshift
            <code>COPY</code> operation that reads from the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files.
            You can specify an extra prefix to be added in front of the time format prefix. Note
            that if the prefix ends with a slash, it appears as a folder in the S3 bucket. For
            more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon
            S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationConfiguration.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the AWS credentials.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.S3DestinationDescription">
            <summary>
            Describes a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option. If no value is specified, <b>BufferingHints</b> object default
            values are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files.
            You can specify an extra prefix to be added in front of the time format prefix. Note
            that if the prefix ends with a slash, it appears as a folder in the S3 bucket. For
            more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon
            S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationDescription.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the AWS credentials.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.S3DestinationUpdate">
            <summary>
            Describes an update for a destination in Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.BucketARN">
            <summary>
            Gets and sets the property BucketARN. 
            <para>
            The ARN of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.BufferingHints">
            <summary>
            Gets and sets the property BufferingHints. 
            <para>
            The buffering option. If no value is specified, <b>BufferingHints</b> object default
            values are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.CloudWatchLoggingOptions">
            <summary>
            Gets and sets the property CloudWatchLoggingOptions. 
            <para>
            The CloudWatch logging options for your delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.CompressionFormat">
            <summary>
            Gets and sets the property CompressionFormat. 
            <para>
            The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.
            </para>
             
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            for Amazon Redshift destinations because they are not supported by the Amazon Redshift
            <code>COPY</code> operation that reads from the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.EncryptionConfiguration">
            <summary>
            Gets and sets the property EncryptionConfiguration. 
            <para>
            The encryption configuration. If no value is specified, the default is no encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files.
            You can specify an extra prefix to be added in front of the time format prefix. Note
            that if the prefix ends with a slash, it appears as a folder in the S3 bucket. For
            more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon
            S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.S3DestinationUpdate.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the AWS credentials.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            <summary>
             KinesisFirehose exception
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.ServiceUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceUnavailableException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.UpdateDestinationRequest">
            <summary>
            Container for the parameters to the UpdateDestination operation.
            Updates the specified destination of the specified delivery stream.
            
             
            <para>
            You can use this operation to change the destination type (for example, to replace
            the Amazon S3 destination with Amazon Redshift) or change the parameters associated
            with a destination (for example, to change the bucket name of the Amazon S3 destination).
            The update might not occur immediately. The target delivery stream remains active
            while the configurations are updated, so data writes to the delivery stream can continue
            during this process. The updated configurations are usually effective within a few
            minutes.
            </para>
             
            <para>
            Note that switching between Amazon ES and other services is not supported. For an
            Amazon ES destination, you can only update to another Amazon ES destination.
            </para>
             
            <para>
            If the destination type is the same, Firehose merges the configuration parameters
            specified with the destination configuration that already exists on the delivery stream.
            If any of the parameters are not specified in the call, the existing values are retained.
            For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a> is not
            specified then the existing <a>EncryptionConfiguration</a> is maintained on the destination.
            </para>
             
            <para>
            If the destination type is not the same, for example, changing the destination from
            Amazon S3 to Amazon Redshift, Firehose does not merge any parameters. In this case,
            all parameters must be specified.
            </para>
             
            <para>
            Firehose uses <b>CurrentDeliveryStreamVersionId</b> to avoid race conditions and conflicting
            merges. This is a required field, and the service updates the configuration only if
            the existing configuration has a version ID that matches. After the update is applied
            successfully, the version ID is updated, and can be retrieved using <a>DescribeDeliveryStream</a>.
            You should use the new version ID to set <b>CurrentDeliveryStreamVersionId</b> in
            the next call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.CurrentDeliveryStreamVersionId">
            <summary>
            Gets and sets the property CurrentDeliveryStreamVersionId. 
            <para>
            Obtain this value from the <b>VersionId</b> result of <a>DeliveryStreamDescription</a>.
            This value is required, and helps the service to perform conditional operations. For
            example, if there is a interleaving update and this value is null, then the update
            destination fails. After the update is successful, the <b>VersionId</b> value is updated.
            The service then performs a merge of the old configuration with the new configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The name of the delivery stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.DestinationId">
            <summary>
            Gets and sets the property DestinationId. 
            <para>
            The ID of the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.ElasticsearchDestinationUpdate">
            <summary>
            Gets and sets the property ElasticsearchDestinationUpdate. 
            <para>
            Describes an update for a destination in Amazon ES.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.ExtendedS3DestinationUpdate">
            <summary>
            Gets and sets the property ExtendedS3DestinationUpdate. 
            <para>
            Describes an update for a destination in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.RedshiftDestinationUpdate">
            <summary>
            Gets and sets the property RedshiftDestinationUpdate. 
            <para>
            Describes an update for a destination in Amazon Redshift.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.UpdateDestinationRequest.S3DestinationUpdate">
            <summary>
            Gets and sets the property S3DestinationUpdate. 
            <para>
            [Deprecated] Describes an update for a destination in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.UpdateDestinationResponse">
            <summary>
            This is the response object from the UpdateDestination operation.
            </summary>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsMarshaller">
            <summary>
            BufferingHints Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsMarshaller.Marshall(Amazon.KinesisFirehose.Model.BufferingHints,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsUnmarshaller">
            <summary>
            Response Unmarshaller for BufferingHints Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#BufferingHints,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.BufferingHintsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsMarshaller">
            <summary>
            CloudWatchLoggingOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsMarshaller.Marshall(Amazon.KinesisFirehose.Model.CloudWatchLoggingOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for CloudWatchLoggingOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#CloudWatchLoggingOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CloudWatchLoggingOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandMarshaller">
            <summary>
            CopyCommand Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandMarshaller.Marshall(Amazon.KinesisFirehose.Model.CopyCommand,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandUnmarshaller">
            <summary>
            Response Unmarshaller for CopyCommand Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#CopyCommand,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CopyCommandUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamRequestMarshaller">
            <summary>
            CreateDeliveryStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDeliveryStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.CreateDeliveryStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamRequestMarshaller">
            <summary>
            DeleteDeliveryStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDeliveryStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeleteDeliveryStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DeliveryStreamDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#DeliveryStreamDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DeliveryStreamDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamRequestMarshaller">
            <summary>
            DescribeDeliveryStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDeliveryStream operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DescribeDeliveryStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#DestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.DestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsMarshaller">
            <summary>
            ElasticsearchBufferingHints Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsMarshaller.Marshall(Amazon.KinesisFirehose.Model.ElasticsearchBufferingHints,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsUnmarshaller">
            <summary>
            Response Unmarshaller for ElasticsearchBufferingHints Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ElasticsearchBufferingHints,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchBufferingHintsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationConfigurationMarshaller">
            <summary>
            ElasticsearchDestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.ElasticsearchDestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for ElasticsearchDestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ElasticsearchDestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationUpdateMarshaller">
            <summary>
            ElasticsearchDestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.ElasticsearchDestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchDestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsMarshaller">
            <summary>
            ElasticsearchRetryOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsMarshaller.Marshall(Amazon.KinesisFirehose.Model.ElasticsearchRetryOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for ElasticsearchRetryOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ElasticsearchRetryOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ElasticsearchRetryOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller">
            <summary>
            EncryptionConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.EncryptionConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#EncryptionConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.EncryptionConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationConfigurationMarshaller">
            <summary>
            ExtendedS3DestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.ExtendedS3DestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for ExtendedS3DestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ExtendedS3DestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationUpdateMarshaller">
            <summary>
            ExtendedS3DestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.ExtendedS3DestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ExtendedS3DestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigMarshaller">
            <summary>
            KMSEncryptionConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigMarshaller.Marshall(Amazon.KinesisFirehose.Model.KMSEncryptionConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigUnmarshaller">
            <summary>
            Response Unmarshaller for KMSEncryptionConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#KMSEncryptionConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.KMSEncryptionConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsRequestMarshaller">
            <summary>
            ListDeliveryStreams Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDeliveryStreams operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ListDeliveryStreamsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationMarshaller">
            <summary>
            ProcessingConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.ProcessingConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ProcessingConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ProcessingConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessingConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorMarshaller">
            <summary>
            Processor Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorMarshaller.Marshall(Amazon.KinesisFirehose.Model.Processor,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterMarshaller">
            <summary>
            ProcessorParameter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterMarshaller.Marshall(Amazon.KinesisFirehose.Model.ProcessorParameter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterUnmarshaller">
            <summary>
            Response Unmarshaller for ProcessorParameter Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#ProcessorParameter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorParameterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorUnmarshaller">
            <summary>
            Response Unmarshaller for Processor Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#Processor,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.ProcessorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchRequestMarshaller">
            <summary>
            PutRecordBatch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.PutRecordBatchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseEntryUnmarshaller">
            <summary>
            Response Unmarshaller for PutRecordBatchResponseEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#PutRecordBatchResponseEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRecordBatch operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordBatchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller">
            <summary>
            PutRecord Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.PutRecordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRecord operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RecordMarshaller">
            <summary>
            Record Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RecordMarshaller.Marshall(Amazon.KinesisFirehose.Model.Record,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RecordMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationConfigurationMarshaller">
            <summary>
            RedshiftDestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.RedshiftDestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for RedshiftDestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#RedshiftDestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationUpdateMarshaller">
            <summary>
            RedshiftDestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.RedshiftDestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftDestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsMarshaller">
            <summary>
            RedshiftRetryOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsMarshaller.Marshall(Amazon.KinesisFirehose.Model.RedshiftRetryOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for RedshiftRetryOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#RedshiftRetryOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.RedshiftRetryOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationConfigurationMarshaller">
            <summary>
            S3DestinationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationConfigurationMarshaller.Marshall(Amazon.KinesisFirehose.Model.S3DestinationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for S3DestinationDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisFirehose#Model#S3DestinationDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationUpdateMarshaller">
            <summary>
            S3DestinationUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationUpdateMarshaller.Marshall(Amazon.KinesisFirehose.Model.S3DestinationUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.S3DestinationUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationRequestMarshaller">
            <summary>
            UpdateDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationRequestMarshaller.Marshall(Amazon.KinesisFirehose.Model.UpdateDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisFirehose.Model.Internal.MarshallTransformations.UpdateDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient">
             <summary>
             Implementation for accessing KinesisFirehose
            
             Amazon Kinesis Firehose API Reference 
             <para>
             Amazon Kinesis Firehose is a fully-managed service that delivers real-time streaming
             data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon Elasticsearch
             Service (Amazon ES), and Amazon Redshift.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor">
             <summary>
             Constructs AmazonKinesisFirehoseClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonKinesisFirehoseClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig)">
             <summary>
             Constructs AmazonKinesisFirehoseClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonKinesisFirehoseClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Credentials and an
            AmazonKinesisFirehoseClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonKinesisFirehoseClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String,Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisFirehoseClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonKinesisFirehoseClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.#ctor(System.String,System.String,System.String,Amazon.KinesisFirehose.AmazonKinesisFirehoseConfig)">
            <summary>
            Constructs AmazonKinesisFirehoseClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisFirehoseClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonKinesisFirehoseClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.CreateDeliveryStream(Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest)">
            <summary>
            Creates a delivery stream.
            
             
            <para>
            By default, you can create up to 20 delivery streams per region.
            </para>
             
            <para>
            This is an asynchronous operation that immediately returns. The initial status of
            the delivery stream is <code>CREATING</code>. After the delivery stream is created,
            its status is <code>ACTIVE</code> and it now accepts data. Attempts to send data to
            a delivery stream that is not in the <code>ACTIVE</code> state cause an exception.
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            A delivery stream is configured with a single destination: Amazon S3, Amazon Elasticsearch
            Service, or Amazon Redshift. You must specify only one of the following destination
            configuration parameters: <b>ExtendedS3DestinationConfiguration</b>, <b>S3DestinationConfiguration</b>,
            <b>ElasticsearchDestinationConfiguration</b>, or <b>RedshiftDestinationConfiguration</b>.
            </para>
             
            <para>
            When you specify <b>S3DestinationConfiguration</b>, you can also provide the following
            optional values: <b>BufferingHints</b>, <b>EncryptionConfiguration</b>, and <b>CompressionFormat</b>.
            By default, if no <b>BufferingHints</b> value is provided, Firehose buffers data up
            to 5 MB or for 5 minutes, whichever condition is satisfied first. Note that <b>BufferingHints</b>
            is a hint, so there are some cases where the service cannot adhere to these conditions
            strictly; for example, record boundaries are such that the size is a little over or
            under the configured buffering size. By default, no encryption is performed. We strongly
            recommend that you enable encryption to ensure secure data storage in Amazon S3.
            </para>
             
            <para>
            A few notes about Amazon Redshift as a destination:
            </para>
             <ul> <li> 
            <para>
            An Amazon Redshift destination requires an S3 bucket as intermediate location, as
            Firehose first delivers data to S3 and then uses <code>COPY</code> syntax to load
            data into an Amazon Redshift table. This is specified in the <b>RedshiftDestinationConfiguration.S3Configuration</b>
            parameter.
            </para>
             </li> <li> 
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <b>RedshiftDestinationConfiguration.S3Configuration</b> because the Amazon Redshift
            <code>COPY</code> operation that reads from the S3 bucket doesn't support these compression
            formats.
            </para>
             </li> <li> 
            <para>
            We strongly recommend that you use the user name and password you provide exclusively
            with Firehose, and that the permissions for the account are restricted for Amazon
            Redshift <code>INSERT</code> permissions.
            </para>
             </li> </ul> 
            <para>
            Firehose assumes the IAM role that is configured as part of the destination. The role
            should allow the Firehose principal to assume the role, and the role should have permissions
            that allows the service to deliver the data. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Amazon
            S3 Bucket Access</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDeliveryStream service method.</param>
            
            <returns>The response from the CreateDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/CreateDeliveryStream">REST API Reference for CreateDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.CreateDeliveryStreamAsync(Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateDeliveryStream operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDeliveryStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/CreateDeliveryStream">REST API Reference for CreateDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DeleteDeliveryStream(System.String)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            You can delete a delivery stream only if it is in <code>ACTIVE</code> or <code>DELETING</code>
            state, and not in the <code>CREATING</code> state. While the deletion request is in
            process, the delivery stream is in the <code>DELETING</code> state.
            </para>
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            While the delivery stream is <code>DELETING</code> state, the service may continue
            to accept the records, but the service doesn't make any guarantees with respect to
            delivering the data. Therefore, as a best practice, you should first stop any applications
            that are sending records before deleting a delivery stream.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DeleteDeliveryStream(Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            You can delete a delivery stream only if it is in <code>ACTIVE</code> or <code>DELETING</code>
            state, and not in the <code>CREATING</code> state. While the deletion request is in
            process, the delivery stream is in the <code>DELETING</code> state.
            </para>
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            While the delivery stream is <code>DELETING</code> state, the service may continue
            to accept the records, but the service doesn't make any guarantees with respect to
            delivering the data. Therefore, as a best practice, you should first stop any applications
            that are sending records before deleting a delivery stream.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryStream service method.</param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DeleteDeliveryStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            You can delete a delivery stream only if it is in <code>ACTIVE</code> or <code>DELETING</code>
            state, and not in the <code>CREATING</code> state. While the deletion request is in
            process, the delivery stream is in the <code>DELETING</code> state.
            </para>
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            While the delivery stream is <code>DELETING</code> state, the service may continue
            to accept the records, but the service doesn't make any guarantees with respect to
            delivering the data. Therefore, as a best practice, you should first stop any applications
            that are sending records before deleting a delivery stream.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DeleteDeliveryStreamAsync(Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDeliveryStream operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DescribeDeliveryStream(Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest)">
            <summary>
            Describes the specified delivery stream and gets the status. For example, after your
            delivery stream is created, call <a>DescribeDeliveryStream</a> to see if the delivery
            stream is <code>ACTIVE</code> and therefore ready for data to be sent to it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveryStream service method.</param>
            
            <returns>The response from the DescribeDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DescribeDeliveryStream">REST API Reference for DescribeDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.DescribeDeliveryStreamAsync(Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDeliveryStream operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveryStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DescribeDeliveryStream">REST API Reference for DescribeDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ListDeliveryStreams">
            <summary>
            Lists your delivery streams.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <a>ListDeliveryStreams</a>. You can limit the number of delivery streams returned,
            using the <b>Limit</b> parameter. To determine whether there are more delivery streams
            to list, check the value of <b>HasMoreDeliveryStreams</b> in the output. If there
            are more delivery streams to list, you can request them by specifying the name of
            the last delivery stream returned in the call in the <b>ExclusiveStartDeliveryStreamName</b>
            parameter of a subsequent call.
            </para>
            </summary>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ListDeliveryStreams(Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest)">
            <summary>
            Lists your delivery streams.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <a>ListDeliveryStreams</a>. You can limit the number of delivery streams returned,
            using the <b>Limit</b> parameter. To determine whether there are more delivery streams
            to list, check the value of <b>HasMoreDeliveryStreams</b> in the output. If there
            are more delivery streams to list, you can request them by specifying the name of
            the last delivery stream returned in the call in the <b>ExclusiveStartDeliveryStreamName</b>
            parameter of a subsequent call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeliveryStreams service method.</param>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ListDeliveryStreamsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists your delivery streams.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <a>ListDeliveryStreams</a>. You can limit the number of delivery streams returned,
            using the <b>Limit</b> parameter. To determine whether there are more delivery streams
            to list, check the value of <b>HasMoreDeliveryStreams</b> in the output. If there
            are more delivery streams to list, you can request them by specifying the name of
            the last delivery stream returned in the call in the <b>ExclusiveStartDeliveryStreamName</b>
            parameter of a subsequent call.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.ListDeliveryStreamsAsync(Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListDeliveryStreams operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDeliveryStreams operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecord(System.String,Amazon.KinesisFirehose.Model.Record)">
            <summary>
            Writes a single data record into an Amazon Kinesis Firehose delivery stream. To write
            multiple data records into a delivery stream, use <a>PutRecordBatch</a>. Applications
            using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits and how to request an
            increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, etc.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecord</a> operation returns a <b>RecordId</b>, which is a unique string
            assigned to each record. Producer applications can use this ID for purposes such as
            auditability and investigation.
            </para>
             
            <para>
            If the <a>PutRecord</a> operation throws a <b>ServiceUnavailableException</b>, back
            off and retry. If the exception persists, it is possible that the throughput limits
            have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="record">The record.</param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecord(Amazon.KinesisFirehose.Model.PutRecordRequest)">
            <summary>
            Writes a single data record into an Amazon Kinesis Firehose delivery stream. To write
            multiple data records into a delivery stream, use <a>PutRecordBatch</a>. Applications
            using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits and how to request an
            increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, etc.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecord</a> operation returns a <b>RecordId</b>, which is a unique string
            assigned to each record. Producer applications can use this ID for purposes such as
            auditability and investigation.
            </para>
             
            <para>
            If the <a>PutRecord</a> operation throws a <b>ServiceUnavailableException</b>, back
            off and retry. If the exception persists, it is possible that the throughput limits
            have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecord service method.</param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordAsync(System.String,Amazon.KinesisFirehose.Model.Record,System.Threading.CancellationToken)">
            <summary>
            Writes a single data record into an Amazon Kinesis Firehose delivery stream. To write
            multiple data records into a delivery stream, use <a>PutRecordBatch</a>. Applications
            using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits and how to request an
            increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, etc.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecord</a> operation returns a <b>RecordId</b>, which is a unique string
            assigned to each record. Producer applications can use this ID for purposes such as
            auditability and investigation.
            </para>
             
            <para>
            If the <a>PutRecord</a> operation throws a <b>ServiceUnavailableException</b>, back
            off and retry. If the exception persists, it is possible that the throughput limits
            have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="record">The record.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordAsync(Amazon.KinesisFirehose.Model.PutRecordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRecord operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRecord operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordBatch(System.String,System.Collections.Generic.List{Amazon.KinesisFirehose.Model.Record})">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before 64-bit encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, and so on.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <b>FailedPutCount</b>,
            and an array of responses, <b>RequestResponses</b>. Each entry in the <b>RequestResponses</b>
            array provides additional information about the processed record, and directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <b>RequestResponses</b> includes both successfully and unsuccessfully processed records.
            Firehose attempts to process all records in each <a>PutRecordBatch</a> request. A
            single record failure does not stop the processing of subsequent records.
            </para>
             
            <para>
            A successfully processed record includes a <b>RecordId</b> value, which is unique
            for the record. An unsuccessfully processed record includes <b>ErrorCode</b> and <b>ErrorMessage</b>
            values. <b>ErrorCode</b> reflects the type of error, and is one of the following values:
            <code>ServiceUnavailable</code> or <code>InternalFailure</code>. <b>ErrorMessage</b>
            provides more detailed information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <b>FailedPutCount</b> is greater than 0, retry the request,
            resending only those records that might have failed processing. This minimizes the
            possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off and retry.
            If the exception persists, it is possible that the throughput limits have been exceeded
            for the delivery stream.
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="records">One or more records.</param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordBatch(Amazon.KinesisFirehose.Model.PutRecordBatchRequest)">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before 64-bit encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, and so on.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <b>FailedPutCount</b>,
            and an array of responses, <b>RequestResponses</b>. Each entry in the <b>RequestResponses</b>
            array provides additional information about the processed record, and directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <b>RequestResponses</b> includes both successfully and unsuccessfully processed records.
            Firehose attempts to process all records in each <a>PutRecordBatch</a> request. A
            single record failure does not stop the processing of subsequent records.
            </para>
             
            <para>
            A successfully processed record includes a <b>RecordId</b> value, which is unique
            for the record. An unsuccessfully processed record includes <b>ErrorCode</b> and <b>ErrorMessage</b>
            values. <b>ErrorCode</b> reflects the type of error, and is one of the following values:
            <code>ServiceUnavailable</code> or <code>InternalFailure</code>. <b>ErrorMessage</b>
            provides more detailed information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <b>FailedPutCount</b> is greater than 0, retry the request,
            resending only those records that might have failed processing. This minimizes the
            possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off and retry.
            If the exception persists, it is possible that the throughput limits have been exceeded
            for the delivery stream.
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecordBatch service method.</param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordBatchAsync(System.String,System.Collections.Generic.List{Amazon.KinesisFirehose.Model.Record},System.Threading.CancellationToken)">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before 64-bit encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, and so on.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <b>FailedPutCount</b>,
            and an array of responses, <b>RequestResponses</b>. Each entry in the <b>RequestResponses</b>
            array provides additional information about the processed record, and directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <b>RequestResponses</b> includes both successfully and unsuccessfully processed records.
            Firehose attempts to process all records in each <a>PutRecordBatch</a> request. A
            single record failure does not stop the processing of subsequent records.
            </para>
             
            <para>
            A successfully processed record includes a <b>RecordId</b> value, which is unique
            for the record. An unsuccessfully processed record includes <b>ErrorCode</b> and <b>ErrorMessage</b>
            values. <b>ErrorCode</b> reflects the type of error, and is one of the following values:
            <code>ServiceUnavailable</code> or <code>InternalFailure</code>. <b>ErrorMessage</b>
            provides more detailed information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <b>FailedPutCount</b> is greater than 0, retry the request,
            resending only those records that might have failed processing. This minimizes the
            possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off and retry.
            If the exception persists, it is possible that the throughput limits have been exceeded
            for the delivery stream.
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="records">One or more records.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.PutRecordBatchAsync(Amazon.KinesisFirehose.Model.PutRecordBatchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRecordBatch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRecordBatch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.UpdateDestination(Amazon.KinesisFirehose.Model.UpdateDestinationRequest)">
            <summary>
            Updates the specified destination of the specified delivery stream.
            
             
            <para>
            You can use this operation to change the destination type (for example, to replace
            the Amazon S3 destination with Amazon Redshift) or change the parameters associated
            with a destination (for example, to change the bucket name of the Amazon S3 destination).
            The update might not occur immediately. The target delivery stream remains active
            while the configurations are updated, so data writes to the delivery stream can continue
            during this process. The updated configurations are usually effective within a few
            minutes.
            </para>
             
            <para>
            Note that switching between Amazon ES and other services is not supported. For an
            Amazon ES destination, you can only update to another Amazon ES destination.
            </para>
             
            <para>
            If the destination type is the same, Firehose merges the configuration parameters
            specified with the destination configuration that already exists on the delivery stream.
            If any of the parameters are not specified in the call, the existing values are retained.
            For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a> is not
            specified then the existing <a>EncryptionConfiguration</a> is maintained on the destination.
            </para>
             
            <para>
            If the destination type is not the same, for example, changing the destination from
            Amazon S3 to Amazon Redshift, Firehose does not merge any parameters. In this case,
            all parameters must be specified.
            </para>
             
            <para>
            Firehose uses <b>CurrentDeliveryStreamVersionId</b> to avoid race conditions and conflicting
            merges. This is a required field, and the service updates the configuration only if
            the existing configuration has a version ID that matches. After the update is applied
            successfully, the version ID is updated, and can be retrieved using <a>DescribeDeliveryStream</a>.
            You should use the new version ID to set <b>CurrentDeliveryStreamVersionId</b> in
            the next call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDestination service method.</param>
            
            <returns>The response from the UpdateDestination service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ConcurrentModificationException">
            Another modification has already happened. Fetch <b>VersionId</b> again and use it
            to update the destination.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UpdateDestination">REST API Reference for UpdateDestination Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.AmazonKinesisFirehoseClient.UpdateDestinationAsync(Amazon.KinesisFirehose.Model.UpdateDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateDestination operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateDestination operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UpdateDestination">REST API Reference for UpdateDestination Operation</seealso>
        </member>
        <member name="T:Amazon.KinesisFirehose.IAmazonKinesisFirehose">
             <summary>
             Interface for accessing KinesisFirehose
            
             Amazon Kinesis Firehose API Reference 
             <para>
             Amazon Kinesis Firehose is a fully-managed service that delivers real-time streaming
             data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon Elasticsearch
             Service (Amazon ES), and Amazon Redshift.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.CreateDeliveryStream(Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest)">
            <summary>
            Creates a delivery stream.
            
             
            <para>
            By default, you can create up to 20 delivery streams per region.
            </para>
             
            <para>
            This is an asynchronous operation that immediately returns. The initial status of
            the delivery stream is <code>CREATING</code>. After the delivery stream is created,
            its status is <code>ACTIVE</code> and it now accepts data. Attempts to send data to
            a delivery stream that is not in the <code>ACTIVE</code> state cause an exception.
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            A delivery stream is configured with a single destination: Amazon S3, Amazon Elasticsearch
            Service, or Amazon Redshift. You must specify only one of the following destination
            configuration parameters: <b>ExtendedS3DestinationConfiguration</b>, <b>S3DestinationConfiguration</b>,
            <b>ElasticsearchDestinationConfiguration</b>, or <b>RedshiftDestinationConfiguration</b>.
            </para>
             
            <para>
            When you specify <b>S3DestinationConfiguration</b>, you can also provide the following
            optional values: <b>BufferingHints</b>, <b>EncryptionConfiguration</b>, and <b>CompressionFormat</b>.
            By default, if no <b>BufferingHints</b> value is provided, Firehose buffers data up
            to 5 MB or for 5 minutes, whichever condition is satisfied first. Note that <b>BufferingHints</b>
            is a hint, so there are some cases where the service cannot adhere to these conditions
            strictly; for example, record boundaries are such that the size is a little over or
            under the configured buffering size. By default, no encryption is performed. We strongly
            recommend that you enable encryption to ensure secure data storage in Amazon S3.
            </para>
             
            <para>
            A few notes about Amazon Redshift as a destination:
            </para>
             <ul> <li> 
            <para>
            An Amazon Redshift destination requires an S3 bucket as intermediate location, as
            Firehose first delivers data to S3 and then uses <code>COPY</code> syntax to load
            data into an Amazon Redshift table. This is specified in the <b>RedshiftDestinationConfiguration.S3Configuration</b>
            parameter.
            </para>
             </li> <li> 
            <para>
            The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
            in <b>RedshiftDestinationConfiguration.S3Configuration</b> because the Amazon Redshift
            <code>COPY</code> operation that reads from the S3 bucket doesn't support these compression
            formats.
            </para>
             </li> <li> 
            <para>
            We strongly recommend that you use the user name and password you provide exclusively
            with Firehose, and that the permissions for the account are restricted for Amazon
            Redshift <code>INSERT</code> permissions.
            </para>
             </li> </ul> 
            <para>
            Firehose assumes the IAM role that is configured as part of the destination. The role
            should allow the Firehose principal to assume the role, and the role should have permissions
            that allows the service to deliver the data. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Amazon
            S3 Bucket Access</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDeliveryStream service method.</param>
            
            <returns>The response from the CreateDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.LimitExceededException">
            You have already reached the limit for a requested resource.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/CreateDeliveryStream">REST API Reference for CreateDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.CreateDeliveryStreamAsync(Amazon.KinesisFirehose.Model.CreateDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateDeliveryStream operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDeliveryStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/CreateDeliveryStream">REST API Reference for CreateDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DeleteDeliveryStream(System.String)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            You can delete a delivery stream only if it is in <code>ACTIVE</code> or <code>DELETING</code>
            state, and not in the <code>CREATING</code> state. While the deletion request is in
            process, the delivery stream is in the <code>DELETING</code> state.
            </para>
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            While the delivery stream is <code>DELETING</code> state, the service may continue
            to accept the records, but the service doesn't make any guarantees with respect to
            delivering the data. Therefore, as a best practice, you should first stop any applications
            that are sending records before deleting a delivery stream.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DeleteDeliveryStream(Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            You can delete a delivery stream only if it is in <code>ACTIVE</code> or <code>DELETING</code>
            state, and not in the <code>CREATING</code> state. While the deletion request is in
            process, the delivery stream is in the <code>DELETING</code> state.
            </para>
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            While the delivery stream is <code>DELETING</code> state, the service may continue
            to accept the records, but the service doesn't make any guarantees with respect to
            delivering the data. Therefore, as a best practice, you should first stop any applications
            that are sending records before deleting a delivery stream.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryStream service method.</param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DeleteDeliveryStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a delivery stream and its data.
            
             
            <para>
            You can delete a delivery stream only if it is in <code>ACTIVE</code> or <code>DELETING</code>
            state, and not in the <code>CREATING</code> state. While the deletion request is in
            process, the delivery stream is in the <code>DELETING</code> state.
            </para>
             
            <para>
            To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.
            </para>
             
            <para>
            While the delivery stream is <code>DELETING</code> state, the service may continue
            to accept the records, but the service doesn't make any guarantees with respect to
            delivering the data. Therefore, as a best practice, you should first stop any applications
            that are sending records before deleting a delivery stream.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DeleteDeliveryStreamAsync(Amazon.KinesisFirehose.Model.DeleteDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDeliveryStream operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDeliveryStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream">REST API Reference for DeleteDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DescribeDeliveryStream(Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest)">
            <summary>
            Describes the specified delivery stream and gets the status. For example, after your
            delivery stream is created, call <a>DescribeDeliveryStream</a> to see if the delivery
            stream is <code>ACTIVE</code> and therefore ready for data to be sent to it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveryStream service method.</param>
            
            <returns>The response from the DescribeDeliveryStream service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DescribeDeliveryStream">REST API Reference for DescribeDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.DescribeDeliveryStreamAsync(Amazon.KinesisFirehose.Model.DescribeDeliveryStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDeliveryStream operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDeliveryStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DescribeDeliveryStream">REST API Reference for DescribeDeliveryStream Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.ListDeliveryStreams">
            <summary>
            Lists your delivery streams.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <a>ListDeliveryStreams</a>. You can limit the number of delivery streams returned,
            using the <b>Limit</b> parameter. To determine whether there are more delivery streams
            to list, check the value of <b>HasMoreDeliveryStreams</b> in the output. If there
            are more delivery streams to list, you can request them by specifying the name of
            the last delivery stream returned in the call in the <b>ExclusiveStartDeliveryStreamName</b>
            parameter of a subsequent call.
            </para>
            </summary>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.ListDeliveryStreams(Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest)">
            <summary>
            Lists your delivery streams.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <a>ListDeliveryStreams</a>. You can limit the number of delivery streams returned,
            using the <b>Limit</b> parameter. To determine whether there are more delivery streams
            to list, check the value of <b>HasMoreDeliveryStreams</b> in the output. If there
            are more delivery streams to list, you can request them by specifying the name of
            the last delivery stream returned in the call in the <b>ExclusiveStartDeliveryStreamName</b>
            parameter of a subsequent call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeliveryStreams service method.</param>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.ListDeliveryStreamsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists your delivery streams.
            
             
            <para>
            The number of delivery streams might be too large to return using a single call to
            <a>ListDeliveryStreams</a>. You can limit the number of delivery streams returned,
            using the <b>Limit</b> parameter. To determine whether there are more delivery streams
            to list, check the value of <b>HasMoreDeliveryStreams</b> in the output. If there
            are more delivery streams to list, you can request them by specifying the name of
            the last delivery stream returned in the call in the <b>ExclusiveStartDeliveryStreamName</b>
            parameter of a subsequent call.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDeliveryStreams service method, as returned by KinesisFirehose.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.ListDeliveryStreamsAsync(Amazon.KinesisFirehose.Model.ListDeliveryStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListDeliveryStreams operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDeliveryStreams operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/ListDeliveryStreams">REST API Reference for ListDeliveryStreams Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecord(System.String,Amazon.KinesisFirehose.Model.Record)">
            <summary>
            Writes a single data record into an Amazon Kinesis Firehose delivery stream. To write
            multiple data records into a delivery stream, use <a>PutRecordBatch</a>. Applications
            using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits and how to request an
            increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, etc.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecord</a> operation returns a <b>RecordId</b>, which is a unique string
            assigned to each record. Producer applications can use this ID for purposes such as
            auditability and investigation.
            </para>
             
            <para>
            If the <a>PutRecord</a> operation throws a <b>ServiceUnavailableException</b>, back
            off and retry. If the exception persists, it is possible that the throughput limits
            have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="record">The record.</param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecord(Amazon.KinesisFirehose.Model.PutRecordRequest)">
            <summary>
            Writes a single data record into an Amazon Kinesis Firehose delivery stream. To write
            multiple data records into a delivery stream, use <a>PutRecordBatch</a>. Applications
            using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits and how to request an
            increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, etc.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecord</a> operation returns a <b>RecordId</b>, which is a unique string
            assigned to each record. Producer applications can use this ID for purposes such as
            auditability and investigation.
            </para>
             
            <para>
            If the <a>PutRecord</a> operation throws a <b>ServiceUnavailableException</b>, back
            off and retry. If the exception persists, it is possible that the throughput limits
            have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecord service method.</param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordAsync(System.String,Amazon.KinesisFirehose.Model.Record,System.Threading.CancellationToken)">
            <summary>
            Writes a single data record into an Amazon Kinesis Firehose delivery stream. To write
            multiple data records into a delivery stream, use <a>PutRecordBatch</a>. Applications
            using these operations are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits and how to request an
            increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>. 
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, etc.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecord</a> operation returns a <b>RecordId</b>, which is a unique string
            assigned to each record. Producer applications can use this ID for purposes such as
            auditability and investigation.
            </para>
             
            <para>
            If the <a>PutRecord</a> operation throws a <b>ServiceUnavailableException</b>, back
            off and retry. If the exception persists, it is possible that the throughput limits
            have been exceeded for the delivery stream. 
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="record">The record.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecord service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordAsync(Amazon.KinesisFirehose.Model.PutRecordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRecord operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRecord operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecord">REST API Reference for PutRecord Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordBatch(System.String,System.Collections.Generic.List{Amazon.KinesisFirehose.Model.Record})">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before 64-bit encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, and so on.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <b>FailedPutCount</b>,
            and an array of responses, <b>RequestResponses</b>. Each entry in the <b>RequestResponses</b>
            array provides additional information about the processed record, and directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <b>RequestResponses</b> includes both successfully and unsuccessfully processed records.
            Firehose attempts to process all records in each <a>PutRecordBatch</a> request. A
            single record failure does not stop the processing of subsequent records.
            </para>
             
            <para>
            A successfully processed record includes a <b>RecordId</b> value, which is unique
            for the record. An unsuccessfully processed record includes <b>ErrorCode</b> and <b>ErrorMessage</b>
            values. <b>ErrorCode</b> reflects the type of error, and is one of the following values:
            <code>ServiceUnavailable</code> or <code>InternalFailure</code>. <b>ErrorMessage</b>
            provides more detailed information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <b>FailedPutCount</b> is greater than 0, retry the request,
            resending only those records that might have failed processing. This minimizes the
            possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off and retry.
            If the exception persists, it is possible that the throughput limits have been exceeded
            for the delivery stream.
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="records">One or more records.</param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordBatch(Amazon.KinesisFirehose.Model.PutRecordBatchRequest)">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before 64-bit encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, and so on.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <b>FailedPutCount</b>,
            and an array of responses, <b>RequestResponses</b>. Each entry in the <b>RequestResponses</b>
            array provides additional information about the processed record, and directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <b>RequestResponses</b> includes both successfully and unsuccessfully processed records.
            Firehose attempts to process all records in each <a>PutRecordBatch</a> request. A
            single record failure does not stop the processing of subsequent records.
            </para>
             
            <para>
            A successfully processed record includes a <b>RecordId</b> value, which is unique
            for the record. An unsuccessfully processed record includes <b>ErrorCode</b> and <b>ErrorMessage</b>
            values. <b>ErrorCode</b> reflects the type of error, and is one of the following values:
            <code>ServiceUnavailable</code> or <code>InternalFailure</code>. <b>ErrorMessage</b>
            provides more detailed information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <b>FailedPutCount</b> is greater than 0, retry the request,
            resending only those records that might have failed processing. This minimizes the
            possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off and retry.
            If the exception persists, it is possible that the throughput limits have been exceeded
            for the delivery stream.
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRecordBatch service method.</param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordBatchAsync(System.String,System.Collections.Generic.List{Amazon.KinesisFirehose.Model.Record},System.Threading.CancellationToken)">
            <summary>
            Writes multiple data records into a delivery stream in a single call, which can achieve
            higher throughput per producer than when writing single records. To write single data
            records into a delivery stream, use <a>PutRecord</a>. Applications using these operations
            are referred to as producers.
            
             
            <para>
            By default, each delivery stream can take in up to 2,000 transactions per second,
            5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a>
            and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations
            for each delivery stream. For more information about limits, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </para>
             
            <para>
            Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the
            request can be as large as 1,000 KB (before 64-bit encoding), up to a limit of 4 MB
            for the entire request. These limits cannot be changed.
            </para>
             
            <para>
            You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>.
            The data record consists of a data blob that can be up to 1,000 KB in size, and any
            kind of data, for example, a segment from a log file, geographic location data, web
            site clickstream data, and so on.
            </para>
             
            <para>
            Firehose buffers records before delivering them to the destination. To disambiguate
            the data blobs at the destination, a common solution is to use delimiters in the data,
            such as a newline (<code>\n</code>) or some other character unique within the data.
            This allows the consumer application(s) to parse individual data items when reading
            the data from the destination.
            </para>
             
            <para>
            The <a>PutRecordBatch</a> response includes a count of failed records, <b>FailedPutCount</b>,
            and an array of responses, <b>RequestResponses</b>. Each entry in the <b>RequestResponses</b>
            array provides additional information about the processed record, and directly correlates
            with a record in the request array using the same ordering, from the top to the bottom.
            The response array always includes the same number of records as the request array.
            <b>RequestResponses</b> includes both successfully and unsuccessfully processed records.
            Firehose attempts to process all records in each <a>PutRecordBatch</a> request. A
            single record failure does not stop the processing of subsequent records.
            </para>
             
            <para>
            A successfully processed record includes a <b>RecordId</b> value, which is unique
            for the record. An unsuccessfully processed record includes <b>ErrorCode</b> and <b>ErrorMessage</b>
            values. <b>ErrorCode</b> reflects the type of error, and is one of the following values:
            <code>ServiceUnavailable</code> or <code>InternalFailure</code>. <b>ErrorMessage</b>
            provides more detailed information about the error.
            </para>
             
            <para>
            If there is an internal server error or a timeout, the write might have completed
            or it might have failed. If <b>FailedPutCount</b> is greater than 0, retry the request,
            resending only those records that might have failed processing. This minimizes the
            possible duplicate records and also reduces the total bytes sent (and corresponding
            charges). We recommend that you handle any duplicates at the destination.
            </para>
             
            <para>
            If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off and retry.
            If the exception persists, it is possible that the throughput limits have been exceeded
            for the delivery stream.
            </para>
             
            <para>
            Data records sent to Firehose are stored for 24 hours from the time they are added
            to a delivery stream as it attempts to send the records to the destination. If the
            destination is unreachable for more than 24 hours, the data is no longer available.
            </para>
            </summary>
            <param name="deliveryStreamName">The name of the delivery stream.</param>
            <param name="records">One or more records.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRecordBatch service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ServiceUnavailableException">
            The service is unavailable, back off and retry the operation. If you continue to see
            the exception, throughput limits for the delivery stream may have been exceeded. For
            more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon
            Kinesis Firehose Limits</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.PutRecordBatchAsync(Amazon.KinesisFirehose.Model.PutRecordBatchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRecordBatch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRecordBatch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/PutRecordBatch">REST API Reference for PutRecordBatch Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.UpdateDestination(Amazon.KinesisFirehose.Model.UpdateDestinationRequest)">
            <summary>
            Updates the specified destination of the specified delivery stream.
            
             
            <para>
            You can use this operation to change the destination type (for example, to replace
            the Amazon S3 destination with Amazon Redshift) or change the parameters associated
            with a destination (for example, to change the bucket name of the Amazon S3 destination).
            The update might not occur immediately. The target delivery stream remains active
            while the configurations are updated, so data writes to the delivery stream can continue
            during this process. The updated configurations are usually effective within a few
            minutes.
            </para>
             
            <para>
            Note that switching between Amazon ES and other services is not supported. For an
            Amazon ES destination, you can only update to another Amazon ES destination.
            </para>
             
            <para>
            If the destination type is the same, Firehose merges the configuration parameters
            specified with the destination configuration that already exists on the delivery stream.
            If any of the parameters are not specified in the call, the existing values are retained.
            For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a> is not
            specified then the existing <a>EncryptionConfiguration</a> is maintained on the destination.
            </para>
             
            <para>
            If the destination type is not the same, for example, changing the destination from
            Amazon S3 to Amazon Redshift, Firehose does not merge any parameters. In this case,
            all parameters must be specified.
            </para>
             
            <para>
            Firehose uses <b>CurrentDeliveryStreamVersionId</b> to avoid race conditions and conflicting
            merges. This is a required field, and the service updates the configuration only if
            the existing configuration has a version ID that matches. After the update is applied
            successfully, the version ID is updated, and can be retrieved using <a>DescribeDeliveryStream</a>.
            You should use the new version ID to set <b>CurrentDeliveryStreamVersionId</b> in
            the next call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDestination service method.</param>
            
            <returns>The response from the UpdateDestination service method, as returned by KinesisFirehose.</returns>
            <exception cref="T:Amazon.KinesisFirehose.Model.ConcurrentModificationException">
            Another modification has already happened. Fetch <b>VersionId</b> again and use it
            to update the destination.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.InvalidArgumentException">
            The specified input parameter has an value that is not valid.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceInUseException">
            The resource is already in use and not available for this operation.
            </exception>
            <exception cref="T:Amazon.KinesisFirehose.Model.ResourceNotFoundException">
            The specified resource could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UpdateDestination">REST API Reference for UpdateDestination Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisFirehose.IAmazonKinesisFirehose.UpdateDestinationAsync(Amazon.KinesisFirehose.Model.UpdateDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateDestination operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateDestination operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/UpdateDestination">REST API Reference for UpdateDestination Operation</seealso>
        </member>
    </members>
</doc>
